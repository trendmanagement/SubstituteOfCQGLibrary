// WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING
// WARNING                                                                         WARNING
// WARNING    THIS .CS FILE WAS AUTOGENERATED!                                     WARNING
// WARNING    DO NOT EDIT IT BY HAND, BECAUSE ALL YOUR CHANGES WILL BE LOST!       WARNING
// WARNING    MAKE ALL CHANGES DIRECTLY TO THE FILE GENERATOR CODE!                WARNING
// WARNING                                                                         WARNING
// WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING

// Disable two warnings caused by CQG API specific:
// CS3003: Type of 'variable' is not CLS-compliant
// CS3008: Identifier 'identifier' differing only in case is not CLS-compliant
#pragma warning disable 3003, 3008

using System;
using System.Collections;
using System.Runtime.Remoting;
using FakeCQG.Models;

namespace FakeCQG
{
    #region Enums
    public enum eAccountChangeType
    {
        actAccountsReloaded = 0,
        actAccountChanged = 1,
        actPositionsReloaded = 2,
        actPositionAdded = 3,
        actPositionChanged = 4,
        actTradersReloaded = 5
    }

    public enum eAccountMarginDetailing
    {
        amdNoMargin = 0,
        amdMarginSnapshot = 1,
        amdMarginSnapshotAndUpdate = 2
    }

    public enum eAccountSubscriptionLevel
    {
        aslNone = 0,
        aslAccountsOnly = 1,
        aslAccountsAndUpdates = 2,
        aslAccountUpdatesAndOrders = 3
    }

    public enum eAlgorithmicOrderPropertyType
    {
        aoptInt = 0,
        aoptUInt = 1,
        aoptDouble = 2,
        aoptString = 3,
        aoptDateTime = 4,
        aoptBoolean = 5,
        aoptList = 6
    }

    public enum eChangeType
    {
        ctAdded = 0,
        ctChanged = 1,
        ctRemoved = 2
    }

    public enum eConnectionStatus
    {
        csConnectionUp = 0,
        csConnectionDelayed = 1,
        csConnectionDown = 2,
        csConnectionTrouble = 3,
        csConnectionNotLoggedOn = 4
    }

    public enum eCvbVolumeType
    {
        cvbvtTicks = 0,
        cvbvtActual = 1
    }

    public enum eDataSourceStatus
    {
        dssDisabled = 0,
        dssAvailable = 1,
        dssDelay = 2,
        dssExtraDelay = 3,
        dssSnapshot = 4
    }

    public enum eDataSubscriptionLevel
    {
        dsNone = 0,
        dsQuotes = 1,
        dsQuotesAndBBA = 2,
        dsQuotesAndDOM = 3,
        dsGroup = 4,
        dsDisable = 5
    }

    public enum eDOMandBBAType
    {
        dbtImplied = 1,
        dbtOutright = 2,
        dbtCombined = 4
    }

    public enum eDOMUpdatesMode
    {
        domUMDynamic = 0,
        domUMSnapshot = 1
    }

    public enum eExecutionPatternParameterType
    {
        epptBool = 0,
        epptInt32 = 1,
        epptDouble = 2,
        epptString = 3,
        epptObject = 4,
        epptCollection = 5,
        epptCollectionItem = 6
    }

    public enum eFcmClass
    {
        fcDerivative = 0,
        fcFixedIncome = 1,
        fcForex = 2
    }

    public enum eFillStatus
    {
        fsNormal = 0,
        fsCanceled = 1,
        fsModified = 2,
        fsBusted = 3
    }

    public enum eGapFilter
    {
        gfAllowGaps = 0,
        gfNoGap = 1,
        gfFillGap = 2
    }

    public enum eGroupSubscriptionLevel
    {
        gslRealtimeSnapshot = 0,
        gslRealtimeUpdates = 1,
        gslFullSnapshot = 2,
        gslFullUpdates = 3
    }

    public enum eGWEnvChangeCode
    {
        eccPositionChanged = 0,
        eccBalanceChanged = 1,
        eccNewStatement = 2,
        eccManualStatementChanged = 3
    }

    public enum eHistoricalPeriod
    {
        hpUndefined = 0,
        hpDaily = 1440,
        hpWeekly = 10080,
        hpMonthly = 43200,
        hpQuarterly = 131040,
        hpSemiannual = 262080,
        hpYearly = 525600
    }

    public enum eHistoricalSessionsRequestType
    {
        hsrtAll = 0,
        hsrtTimeRange = 1,
        hsrtSinceTime = 2
    }

    public enum eICConnectionStatus
    {
        iccsExited = 0
    }

    public enum eInstrumentProperty
    {
        ipFullName = 0,
        ipDescription = 1,
        ipInstrumentID = 2,
        ipCurrency = 3,
        ipExpirationDate = 4,
        ipInitialMargin = 5,
        ipMaintenanceMargin = 6,
        ipSessionMask = 7,
        ipCommodity = 8,
        ipCountry = 9,
        ipMonthChar = 10,
        ipMonth = 11,
        ipStrike = 12,
        ipInstrumentType = 13,
        ipYear = 14,
        ipYearString = 15,
        ipTickSize = 16,
        ipTickValue = 17,
        ipSessionNumber = 18,
        ipNetChange = 19,
        ipDTE = 20,
        ipIsDownTick = 21,
        ipIsUpTick = 22,
        ipIsFastMarket = 23,
        ipPreferredSessionName = 24,
        ipTodayCTotalVolume = 25,
        ipYesterdayCTotalVolume = 26,
        ipYCOI = 27,
        ipExchangeID = 28,
        ipExchangeAbbreviation = 29,
        ipScale = 30,
        ipStrikeScale = 31,
        ipDecimalStrike = 32,
        ipDelayTime = 33,
        ipLeadingContractName = 34,
        ipTickSizeFractionNumerator = 35,
        ipTickSizeFractionDenominator = 36,
        ipFirstNoticeDate = 37,
        ipWorkup = 38,
        ipIsFutureStyleOption = 39,
        ipIsVariableTickSize = 40
    }

    public enum eInstrumentType
    {
        itUndefined = 0,
        itFuture = 1,
        itOptionPut = 2,
        itOptionCall = 4,
        itAllOptions = 6,
        itStock = 8,
        itTreasure = 16,
        itOther = 32,
        itSyntheticStrategy = 64,
        itAllInstruments = 127
    }

    public enum eLogSeverity
    {
        lsDebug = 10000,
        lsInfo = 20000,
        lsWarn = 30000,
        lsError = 40000,
        lsFatal = 50000
    }

    public enum eManualFillsDataLevel
    {
        mfdlSnapshot = 0,
        mfdlSnapshotAndUpdates = 1
    }

    public enum eManualFillUpdateType
    {
        mfutAdd = 0,
        mfutModify = 1,
        mfutDelete = 2
    }

    public enum eMarketState
    {
        msFast = 0,
        msNormal = 1
    }

    public enum eOrderCancelationType
    {
        octUndefined = 0,
        octCancelAllLegOrders = 1,
        octCancelPrimaryLegOrders = 2
    }

    public enum eOrderDuration
    {
        odUndefined = 0,
        odDay = 1,
        odGoodTillDate = 2,
        odGoodTillCanceled = 3,
        odFOK = 4,
        odFAK = 5,
        odATO = 6,
        odATC = 7,
        odGoodTillTime = 8
    }

    public enum eOrderEvent
    {
        oeUndefined = 0,
        oeInQueue = 1,
        oeCancelSent = 2,
        oeModifySent = 3,
        oeQueueTimeout = 4,
        oeCancelQueueTimeout = 5,
        oeModifyQueueTimeout = 6,
        oeInClient = 7,
        oeInTransit = 8,
        oeRejectGW = 9,
        oeAckPlace = 10,
        oeInTransTmout = 11,
        oeRejectFCM = 12,
        oeExpired = 13,
        oeInCan = 14,
        oeInMod = 15,
        oeInModTmout = 16,
        oeInCanTmout = 17,
        oeAckMod = 18,
        oeAckCan = 19,
        oeFill = 20,
        oeRejMod = 21,
        oeRejCan = 22,
        oePark = 23,
        oeLinkChg = 24,
        oeFillMod = 25,
        oeDisconnected = 26,
        oeFillCan = 27,
        oeFillBust = 28,
        oeActiveAt = 29,
        oeSyntheticActivated = 30,
        oeRemoved = 31,
        oeRejLinkChg = 32,
        oeSyntheticFailed = 33,
        oeSyntheticOverFill = 34,
        oeSyntheticHang = 35,
        oeInfoChanged = 36
    }

    public enum eOrderExecutionInstruction
    {
        oeiUndefined = 0,
        oeiAllOrNothing = 1,
        oeiTrailing = 2,
        oeiIceberg = 4,
        oeiQTS = 8,
        oeiFunari = 16,
        oeiMIT = 32
    }

    public enum eOrderLocalState
    {
        olsNotSent = 0,
        olsInQueue = 1,
        olsQueueTimeout = 2,
        olsModifySent = 3,
        olsCancelSent = 4,
        olsActivateSent = 5,
        olsInClient = 6,
        olsAtGW = 7,
        olsRemoved = 8,
        olsStrategyPending = 9
    }

    public enum eOrderProperty
    {
        opOrderType = 0,
        opAccountID = 1,
        opInstrumentName = 2,
        opLimitPrice = 3,
        opStopPrice = 4,
        opDurationType = 5,
        opGTDTime = 6,
        opSide = 7,
        opQuantity = 8,
        opVisibleQuantity = 9,
        opAggressive = 10,
        opExecutionInstructions = 11,
        opParked = 12,
        opSynthetic = 13,
        opGUID = 14,
        opUEName = 15,
        opOrderID = 16,
        opOriginalOrderID = 17,
        opExchangeConf = 18,
        opGWStatus = 19,
        opState = 20,
        opPlaceTime = 21,
        opFilledQuantity = 22,
        opFilledCount = 23,
        opAverageFillPrice = 24,
        opErrorFlag = 25,
        opTimeActiveAt = 26,
        opLastEvent = 27,
        opLastEventID = 28,
        opEventTimestamp = 29,
        opEventServerTimestamp = 30,
        opRemainingQuantity = 31,
        opTrailingOffset = 32,
        opLastTrailingTime = 33,
        opTrailingLimitPrice = 34,
        opTrailingStopPrice = 35,
        opCQGID = 36,
        opUserName = 37,
        opTraderID = 38,
        opTriggerQuantity = 39,
        opPreferredTrailingPeg = 40,
        opDescription = 41,
        opStrategyOrderGUID = 42,
        opExecutionPattern = 43,
        opLastFillTime = 44,
        opCanceledTime = 45,
        opCancelationInstruction = 46,
        opTradingExpression = 47,
        opCompoundOrderID = 48,
        opCompoundOrderGUID = 49,
        opIsCareOrder = 50,
        opCareOrderIDs = 51,
        opOrderCheckMark = 52,
        opAlgorithmID = 53
    }

    public enum eOrderSide
    {
        osdUndefined = 0,
        osdBuy = 1,
        osdSell = 2
    }

    public enum eOrderSideFilter
    {
        osftBuy = 1,
        osftSell = 2,
        osftAll = 3
    }

    public enum eOrderStatus
    {
        osNotSent = 0,
        osInClient = 1,
        osInTransit = 2,
        osRejectGW = 3,
        osInOrderBook = 4,
        osInTransitTimeout = 5,
        osRejectFCM = 6,
        osExpired = 7,
        osInCancel = 8,
        osInModify = 9,
        osCanceled = 10,
        osFilled = 11,
        osParked = 12,
        osDisconnected = 13,
        osContingent = 14,
        osBusted = 15,
        osActiveAt = 16
    }

    public enum eOrderStatusFilter
    {
        osfAll = 0,
        osfNotFinal = 1,
        osfFinal = 2,
        osfFilled = 3,
        osfException = 4,
        osfParked = 5,
        osfCanceled = 6
    }

    public enum eOrderTrailingPeg
    {
        otpBestBid = 0,
        otpBestAsk = 1,
        otpLastTrade = 2,
        otpUndefined = 3
    }

    public enum eOrderType
    {
        otUndefined = 0,
        otMarket = 1,
        otLimit = 2,
        otStop = 3,
        otStopLimit = 4
    }

    public enum ePfBoxUnits
    {
        pfbuPrice = 0,
        pfbuTicks = 1
    }

    public enum ePfDataSource
    {
        pfdsTicks = 0,
        pfds1Min = 1,
        pfds5Min = 2,
        pfds15Min = 3,
        pfds30Min = 4,
        pfds60Min = 5,
        pfdsDaily = 6
    }

    public enum ePositionDetailing
    {
        pdNoTrades = 0,
        pdOpenTrades = 1,
        pdAllTrades = 2
    }

    public enum ePositionSubscriptionLevel
    {
        pslNoPositions = 0,
        pslSnapshot = 1,
        pslSnapshotAndUpdates = 2
    }

    public enum ePriceMode
    {
        pmBidsAsks = 0,
        pmTradesOnly = 1
    }

    public enum ePropertySubscriptionLevel
    {
        psNone = 0,
        psMarketState = 1,
        psNetChange = 2,
        psTotalVolumes = 4
    }

    public enum eQuoteSubscriptionLevel
    {
        qsNone = 0,
        qsQuotes = 1,
        qsBBA = 2
    }

    public enum eQuoteType
    {
        qtAsk = 0,
        qtBid = 1,
        qtTrade = 2,
        qtSettlement = 3,
        qtCohUndAsk = 4,
        qtCohUndBid = 5,
        qtDayOpen = 6,
        qtDayHigh = 7,
        qtDayLow = 8,
        qtImpliedAsk = 9,
        qtImpliedBid = 10,
        qtOutrightAsk = 11,
        qtOutrightBid = 12,
        qtYesterdaySettlement = 13,
        qtIndicativeOpen = 14,
        qtTodayMarker = 15,
        qtMarker = 16
    }

    public enum eReadyStatus
    {
        rsBusy = 0,
        rsReady = 1,
        rsNotReady = 2
    }

    public enum eReadyStatusCheck
    {
        rscOff = 0,
        rscOn = 1
    }

    public enum eRequestStatus
    {
        rsInProgress = 0,
        rsSuccess = 1,
        rsFailed = 2,
        rsCanceled = 3
    }

    public enum eSessionFlag
    {
        sfUndefined = 0,
        sfDailyFromIntraday = 2
    }

    public enum eSessionStatus
    {
        ssNoAvailableLoginService = 0,
        ssSuccess = 1,
        ssInternalSystemError = 2,
        ssNotEnabled = 3,
        ssAuthorizationFailed = 4,
        ssAlreadyLoggedIn = 5,
        ssNotAuthenticated = 6,
        ssNoAvailableDataServers = 7,
        ssNoAvailableMetadataServers = 8,
        ssNoAvailableROMNumbers = 9,
        ssNoRemoteAPIPermission = 10
    }

    public enum eSessionWeekDays
    {
        swdUndefined = 0,
        swdSaturday = 1,
        swdFriday = 2,
        swdThursday = 4,
        swdWednesday = 8,
        swdTuesday = 16,
        swdMonday = 32,
        swdSunday = 64
    }

    public enum eStrategyRequestStatus
    {
        srsNotActive = 0,
        srsPending = 1,
        srsSuccess = 2,
        srsFailed = 3
    }

    public enum eSymbolSessionType
    {
        sstDefault = 1,
        sstCustom = 2,
        sstAll = 3
    }

    public enum eSymbolType
    {
        stUndefined = 0,
        stFuture = 1,
        stOption = 6,
        stStock = 8,
        stTreasury = 16,
        stCash = 32,
        stCurrency = 64,
        stIndex = 128,
        stReport = 256
    }

    public enum eTfAggregation
    {
        tfaBars = 0,
        tfaRange = 1,
        tfaSmoothing = 2
    }

    public enum eTFlowRequestDomVolumeLevel
    {
        dvLevel0 = 0,
        dvLevel1 = 1,
        dvLevel2 = 2,
        dvLevel3 = 3,
        dvLevel4 = 4
    }

    public enum eTickCorrectionType
    {
        tctRegular = 0,
        tctInsert = 1,
        tctDelete = 2,
        tctUpdate = 3
    }

    public enum eTickFilter
    {
        tfAll = 0,
        tfDefault = 1,
        tfBid = 2,
        tfAsk = 4,
        tfTrade = 8,
        tfSettlement = 16,
        tfBidHigh = 32,
        tfAskLow = 64
    }

    public enum eTickPriceType
    {
        tptTrade = 0,
        tptBid = 64,
        tptAsk = 128,
        tptSettlement = 192
    }

    public enum eTicksRequestType
    {
        trtTimeRange = 0,
        trtSinceTime = 1,
        trtSinceTimeNotify = 2,
        trtCurrentNotify = 3
    }

    public enum eTimedBarsRequestOutputs
    {
        tbrActualVolume = 0,
        tbrTickVolume = 1,
        tbrAskVolume = 2,
        tbrBidVolume = 3,
        tbrOpenInterest = 4,
        tbrContractVolume = 5,
        tbrCommodityVolume = 6,
        tbrContractTickVolume = 7,
        tbrCommodityTickVolume = 8,
        tbrContractOpenInterest = 9,
        tbrCommodityOpenInterest = 10
    }

    public enum eTimeSeriesContinuationType
    {
        tsctNoContinuation = 0,
        tsctStandard = 1,
        tsctStandardByMonth = 2,
        tsctActive = 3,
        tsctActiveByMonth = 4,
        tsctAdjusted = 5,
        tsctAdjustedByMonth = 6
    }

    public enum eTimeSeriesSubscriptionLevel
    {
        tslEachTick = 0,
        tslEachBar = 1,
        tslEndOfBarAndPeriod = 2
    }

    public enum eTimeZone
    {
        tzDateline = 0,
        tzSamoa = 1,
        tzHawaiian = 2,
        tzAlaskan = 3,
        tzPacific = 4,
        tzMountain = 10,
        tzMexico2 = 13,
        tzMountainNoDST = 15,
        tzCentral = 20,
        tzCanadaCentral = 25,
        tzMexico = 30,
        tzCentralAmerica = 33,
        tzEastern = 35,
        tzEasternNoDST = 40,
        tzSAPacific = 45,
        tzAtlantic = 50,
        tzSAWestern = 55,
        tzPacificSA = 56,
        tzNewfoundland = 60,
        tzESouthAmerica = 65,
        tzSAEastern = 70,
        tzGreenland = 73,
        tzMidAtlantic = 75,
        tzAzores = 80,
        tzCapeVerde = 83,
        tzGMT = 85,
        tzGreenwich = 90,
        tzUTC = 90,
        tzCentralEurope = 95,
        tzCentralEuropean = 100,
        tzRomance = 105,
        tzWEurope = 110,
        tzWCentralAfrica = 113,
        tzEEurope = 115,
        tzEgypt = 120,
        tzFLE = 125,
        tzGTB = 130,
        tzJerusalem = 135,
        tzSouthAfrica = 140,
        tzRussian = 145,
        tzArab = 150,
        tzEAfrica = 155,
        tzArabic = 158,
        tzIran = 160,
        tzArabian = 165,
        tzCaucasus = 170,
        tzAfghanistan = 175,
        tzEkaterinburg = 180,
        tzWestAsia = 185,
        tzIndia = 190,
        tzNepal = 193,
        tzCentralAsia = 195,
        tzSriLanka = 200,
        tzNCentralAsia = 201,
        tzMyanmar = 203,
        tzSEAsia = 205,
        tzNorthAsia = 207,
        tzChina = 210,
        tzMalayPeninsula = 215,
        tzTaipei = 220,
        tzWAustralia = 225,
        tzNorthAsiaEast = 227,
        tzKorea = 230,
        tzTokyo = 235,
        tzYakutsk = 240,
        tzAUSCentral = 245,
        tzCenAustralia = 250,
        tzAUSEastern = 255,
        tzEAustralia = 260,
        tzTasmania = 265,
        tzVladivostok = 270,
        tzWestPacific = 275,
        tzCentralPacific = 280,
        tzFiji = 285,
        tzNewZealand = 290,
        tzTonga = 300,
        tzUndefined = -1
    }

    public enum eTradeChangeCategory
    {
        tccSignalSet = 1,
        tccSignalReset = 2,
        tccQuantity = 4,
        tccPrice = 8,
        tccStopLimitPrice = 16,
        tccAll = 31
    }

    public enum eTradeSide
    {
        tsBuy = 0,
        tsSell = 1,
        tsOff = 2
    }

    public enum eTradingSystemBaseBar
    {
        bbBar = 0,
        bbConstantVolumeBar = 1,
        bbTFlowBar = 2,
        bbPointAndFigureBar = 3
    }

    public enum eTradingSystemBaseBarParameter
    {
        bbpVolumeLevel = 0,
        bbpVolumeType = 1,
        bbpIncludeFlatTicks = 2,
        bbpBoxSize = 3,
        bbpBoxUnits = 4,
        bbpReversal = 5,
        bbpDataSource = 6,
        bbpAggregation = 7,
        bbpAggregationLevel = 8
    }

    public enum eTradingSystemCommissionType
    {
        tscmFixed = 0,
        tscmPerContract = 1
    }

    public enum eTradingSystemStatistic
    {
        tssTotalNetProfit = 0,
        tssClosedNetProfit = 1,
        tssTotalTradeCount = 2,
        tssOpenPosition = 3,
        tssPercentLong = 4,
        tssAverageDuration = 5,
        tssAverageProfit = 6,
        tssAverageWin = 7,
        tssMaximumWin = 8,
        tssAverageLoss = 9,
        tssMaximumLoss = 10,
        tssMaxClosedDraw = 11,
        tssMaxDrawAmount = 12,
        tssMaxDrawDuration = 13,
        tssMaxConsecWins = 14,
        tssCurConsecWins = 15,
        tssMaxConsecLosses = 16,
        tssCurConsecLosses = 17,
        tssProfitToMaxDraw = 18,
        tssProfitLossRatio = 19,
        tssPercentWinners = 20,
        tssRemoveToNeutral = 21,
        tssTimePercentage = 22,
        tssCurDrawDown = 23,
        tssReturnRetracement = 24,
        tssLinearRegression = 25
    }

    public enum eUserFormulaParameterType
    {
        ufptInt = 0,
        ufptDouble = 1,
        ufptString = 2,
        ufptChoice = 3
    }

    public enum eYieldCompound
    {
        ycDefault = 0,
        ycAnnual = 1,
        ycSemiAnnual = 2
    }

    public enum eYieldModel
    {
        ymDefault = 0,
        ymStandardBill = 1,
        ymSimpleBond = 2,
        ymStandardBond = 3,
        ymMoosmuller = 4,
        ymBraessFangmeyer = 5
    }

    #endregion

    #region Delegates
    public delegate void _ICQGCELEvents_AccountChangedEventHandler(eAccountChangeType change_type, CQGAccount cqg_account, CQGPosition cqg_position);

    public delegate void _ICQGCELEvents_AdvancedStudyAddedEventHandler(CQGAdvancedStudy cqg_advanced_study);

    public delegate void _ICQGCELEvents_AdvancedStudyDefinitionsResolvedEventHandler(CQGAdvancedStudyDefinitions cqg_advanced_study_definitions, CQGError cqg_error);

    public delegate void _ICQGCELEvents_AdvancedStudyInsertedEventHandler(CQGAdvancedStudy cqg_advanced_study, Int32 index_);

    public delegate void _ICQGCELEvents_AdvancedStudyRemovedEventHandler(CQGAdvancedStudy cqg_advanced_study, Int32 index_);

    public delegate void _ICQGCELEvents_AdvancedStudyResolvedEventHandler(CQGAdvancedStudy cqg_advanced_study, CQGError cqg_error);

    public delegate void _ICQGCELEvents_AdvancedStudyUpdatedEventHandler(CQGAdvancedStudy cqg_advanced_study, Int32 index_);

    public delegate void _ICQGCELEvents_AlgorithmicOrderPlacedEventHandler(String guid_, CQGAlgorithmicOrderParameters main_params, CQGAlgorithmicOrderProperties custom_props);

    public delegate void _ICQGCELEvents_AlgorithmicOrderRegistrationCompleteEventHandler(String guid_, CQGError cqg_error);

    public delegate void _ICQGCELEvents_AllOrdersCanceledEventHandler(eOrderSideFilter order_side, CQGIntegerCollection gw_account_ids, CQGStringCollection instrument_names);

    public delegate void _ICQGCELEvents_AuthenticationStatusChangedEventHandler(eSessionStatus new_status, CQGError cqg_error);

    public delegate void _ICQGCELEvents_BarsTimestampsResolvedEventHandler(CQGBarsTimestamps cqg_bars_timestamps, CQGError cqg_error);

    public delegate void _ICQGCELEvents_CELStartedEventHandler();

    public delegate void _ICQGCELEvents_CommodityInstrumentsResolvedEventHandler(String commodity_name, eInstrumentType instrument_types, CQGCommodityInstruments cqg_commodity_intruments);

    public delegate void _ICQGCELEvents_ConditionAddedEventHandler(CQGCondition cqg_condition);

    public delegate void _ICQGCELEvents_ConditionDefinitionsResolvedEventHandler(CQGConditionDefinitions cqg_condition_definitions, CQGError cqg_error);

    public delegate void _ICQGCELEvents_ConditionInsertedEventHandler(CQGCondition cqg_condition, Int32 index_);

    public delegate void _ICQGCELEvents_ConditionRemovedEventHandler(CQGCondition cqg_condition, Int32 index_);

    public delegate void _ICQGCELEvents_ConditionResolvedEventHandler(CQGCondition cqg_condition, CQGError cqg_error);

    public delegate void _ICQGCELEvents_ConditionUpdatedEventHandler(CQGCondition cqg_condition, Int32 index_);

    public delegate void _ICQGCELEvents_ConstantVolumeBarsAddedEventHandler(CQGConstantVolumeBars cqg_constant_volume_bars);

    public delegate void _ICQGCELEvents_ConstantVolumeBarsInsertedEventHandler(CQGConstantVolumeBars cqg_constant_volume_bars, Int32 index_);

    public delegate void _ICQGCELEvents_ConstantVolumeBarsRemovedEventHandler(CQGConstantVolumeBars cqg_constant_volume_bars, Int32 index_);

    public delegate void _ICQGCELEvents_ConstantVolumeBarsResolvedEventHandler(CQGConstantVolumeBars cqg_constant_volume_bars, CQGError cqg_error);

    public delegate void _ICQGCELEvents_ConstantVolumeBarsUpdatedEventHandler(CQGConstantVolumeBars cqg_constant_volume_bars, Int32 index_);

    public delegate void _ICQGCELEvents_CurrencyRatesChangedEventHandler(CQGCurrencyRates cqg_currency_rates);

    public delegate void _ICQGCELEvents_CustomSessionsResolvedEventHandler(CQGSessionsCollection cqg_sessions_collection, CQGError cqg_error);

    public delegate void _ICQGCELEvents_CustomStudyAddedEventHandler(CQGCustomStudy cqg_custom_study);

    public delegate void _ICQGCELEvents_CustomStudyDefinitionsResolvedEventHandler(CQGCustomStudyDefinitions cqg_custom_study_definitions, CQGError cqg_error);

    public delegate void _ICQGCELEvents_CustomStudyInsertedEventHandler(CQGCustomStudy cqg_custom_study, Int32 index_);

    public delegate void _ICQGCELEvents_CustomStudyRemovedEventHandler(CQGCustomStudy cqg_custom_study, Int32 index_);

    public delegate void _ICQGCELEvents_CustomStudyResolvedEventHandler(CQGCustomStudy cqg_custom_study, CQGError cqg_error);

    public delegate void _ICQGCELEvents_CustomStudyUpdatedEventHandler(CQGCustomStudy cqg_custom_study, Int32 index_);

    public delegate void _ICQGCELEvents_DataConnectionStatusChangedEventHandler(eConnectionStatus new_status);

    public delegate void _ICQGCELEvents_DataErrorEventHandler(Object cqg_error, String error_description);

    public delegate void _ICQGCELEvents_DataSourcesResolvedEventHandler(CQGDataSources cqg_data_sources, CQGError cqg_error);

    public delegate void _ICQGCELEvents_DataSourceSymbolsResolvedEventHandler(String data_source_abbreviation, CQGDataSourceSymbols cqg_data_source_symbols, CQGError cqg_error);

    public delegate void _ICQGCELEvents_ExpressionAddedEventHandler(CQGExpression cqg_expression);

    public delegate void _ICQGCELEvents_ExpressionInsertedEventHandler(CQGExpression cqg_expression, Int32 index_);

    public delegate void _ICQGCELEvents_ExpressionRemovedEventHandler(CQGExpression cqg_expression, Int32 index_);

    public delegate void _ICQGCELEvents_ExpressionResolvedEventHandler(CQGExpression cqg_expression, CQGError cqg_error);

    public delegate void _ICQGCELEvents_ExpressionUpdatedEventHandler(CQGExpression cqg_expression, Int32 index_);

    public delegate void _ICQGCELEvents_GWConnectionStatusChangedEventHandler(eConnectionStatus new_status);

    public delegate void _ICQGCELEvents_GWEnvironmentChangedEventHandler(eGWEnvChangeCode event_code, Int32 account_id, Int32 phase_);

    public delegate void _ICQGCELEvents_HistoricalSessionsResolvedEventHandler(CQGSessionsCollection cqg_historical_sessions, CQGHistoricalSessionsRequest cqg_historical_sessions_request, CQGError cqg_error);

    public delegate void _ICQGCELEvents_ICConnectionStatusChangedEventHandler(eICConnectionStatus new_status);

    public delegate void _ICQGCELEvents_IncorrectSymbolEventHandler(String symbol_);

    public delegate void _ICQGCELEvents_InstrumentChangedEventHandler(CQGInstrument cqg_instrument, CQGQuotes cqg_quotes, CQGInstrumentProperties cqg_instrument_properties);

    public delegate void _ICQGCELEvents_InstrumentDOMChangedEventHandler(CQGInstrument cqg_instrument, CQGDOMQuotes prev_asks, CQGDOMQuotes prev_bids);

    public delegate void _ICQGCELEvents_InstrumentsGroupChangedEventHandler(eChangeType change_type, CQGInstrumentsGroup instruments_group, CQGStringCollection instruments_names);

    public delegate void _ICQGCELEvents_InstrumentsGroupResolvedEventHandler(CQGInstrumentsGroup instruments_group, CQGError cqg_error);

    public delegate void _ICQGCELEvents_InstrumentSubscribedEventHandler(String symbol_, CQGInstrument cqg_instrument);

    public delegate void _ICQGCELEvents_IsReadyEventHandler(ref eReadyStatus ready_status);

    public delegate void _ICQGCELEvents_LineTimeChangedEventHandler(DateTime new_line_time);

    public delegate void _ICQGCELEvents_ManualFillChangedEventHandler(CQGManualFill cqg_manual_fill, eManualFillUpdateType modify_type);

    public delegate void _ICQGCELEvents_ManualFillsResolvedEventHandler(CQGManualFills cqg_manual_fills, CQGError cqg_error);

    public delegate void _ICQGCELEvents_ManualFillUpdateResolvedEventHandler(CQGManualFillRequest cqg_manual_fill_request, CQGError cqg_error);

    public delegate void _ICQGCELEvents_OnIdleEventHandler();

    public delegate void _ICQGCELEvents_OnQueryProgressEventHandler(CQGOrdersQuery cqg_orders_query, CQGError cqg_error);

    public delegate void _ICQGCELEvents_OrderChangedEventHandler(eChangeType change_type, CQGOrder cqg_order, CQGOrderProperties old_properties, CQGFill cqg_fill, CQGError cqg_error);

    public delegate void _ICQGCELEvents_PasswordChangedEventHandler(eSessionStatus request_status, CQGError cqg_error);

    public delegate void _ICQGCELEvents_PointAndFigureBarsAddedEventHandler(CQGPointAndFigureBars cqg_point_and_figure_bars);

    public delegate void _ICQGCELEvents_PointAndFigureBarsInsertedEventHandler(CQGPointAndFigureBars cqg_point_and_figure_bars, Int32 index_);

    public delegate void _ICQGCELEvents_PointAndFigureBarsRemovedEventHandler(CQGPointAndFigureBars cqg_point_and_figure_bars, Int32 index_);

    public delegate void _ICQGCELEvents_PointAndFigureBarsResolvedEventHandler(CQGPointAndFigureBars cqg_point_and_figure_bars, CQGError cqg_error);

    public delegate void _ICQGCELEvents_PointAndFigureBarsUpdatedEventHandler(CQGPointAndFigureBars cqg_point_and_figure_bars, Int32 index_);

    public delegate void _ICQGCELEvents_PositionsStatementResolvedEventHandler(CQGPositionsStatement cqg_positions_statement, CQGError cqg_error);

    public delegate void _ICQGCELEvents_QFormulaDefinitionsResolvedEventHandler(CQGQFormulaDefinitions cqg_qformula_definitions, CQGError cqg_error);

    public delegate void _ICQGCELEvents_StrategyDefinitionProgressEventHandler(CQGStrategyDefinition cqg_definition, CQGError cqg_error);

    public delegate void _ICQGCELEvents_SubMinuteBarsAddedEventHandler(CQGSubMinuteBars cqg_submintue_bars);

    public delegate void _ICQGCELEvents_SubMinuteBarsInsertedEventHandler(CQGSubMinuteBars cqg_subminute_bars, Int32 index_);

    public delegate void _ICQGCELEvents_SubMinuteBarsRemovedEventHandler(CQGSubMinuteBars cqg_subminute_bars, Int32 index_);

    public delegate void _ICQGCELEvents_SubMinuteBarsResolvedEventHandler(CQGSubMinuteBars cqg_subminte_bars, CQGError cqg_error);

    public delegate void _ICQGCELEvents_SubMinuteBarsUpdatedEventHandler(CQGSubMinuteBars cqg_subminute_bars, Int32 index_);

    public delegate void _ICQGCELEvents_SummariesStatementResolvedEventHandler(CQGSummariesStatement cqg_summaries_statement, CQGError cqg_error);

    public delegate void _ICQGCELEvents_TFlowBarsAddedEventHandler(CQGTFlowBars cqg_tflow_bars);

    public delegate void _ICQGCELEvents_TFlowBarsInsertedEventHandler(CQGTFlowBars cqg_tflow_bars, Int32 index_);

    public delegate void _ICQGCELEvents_TFlowBarsRemovedEventHandler(CQGTFlowBars cqg_tflow_bars, Int32 index_);

    public delegate void _ICQGCELEvents_TFlowBarsResolvedEventHandler(CQGTFlowBars cqg_tflow_bars, CQGError cqg_error);

    public delegate void _ICQGCELEvents_TFlowBarsUpdatedEventHandler(CQGTFlowBars cqg_tflow_bars, Int32 index_);

    public delegate void _ICQGCELEvents_TicksAddedEventHandler(CQGTicks cqg_ticks, Int32 added_ticks_count);

    public delegate void _ICQGCELEvents_TicksResolvedEventHandler(CQGTicks cqg_ticks, CQGError cqg_error);

    public delegate void _ICQGCELEvents_TimedBarsAddedEventHandler(CQGTimedBars cqg_timed_bars);

    public delegate void _ICQGCELEvents_TimedBarsInsertedEventHandler(CQGTimedBars cqg_timed_bars, Int32 index_);

    public delegate void _ICQGCELEvents_TimedBarsRemovedEventHandler(CQGTimedBars cqg_timed_bars, Int32 index_);

    public delegate void _ICQGCELEvents_TimedBarsResolvedEventHandler(CQGTimedBars cqg_timed_bars, CQGError cqg_error);

    public delegate void _ICQGCELEvents_TimedBarsUpdatedEventHandler(CQGTimedBars cqg_timed_bars, Int32 index_);

    public delegate void _ICQGCELEvents_TradableCommoditiesResolvedEventHandler(Int32 gw_account_id, CQGCommodities cqg_commodities, CQGError cqg_error);

    public delegate void _ICQGCELEvents_TradableExchangesResolvedEventHandler(Int32 gw_account_id, CQGExchanges cqg_exchanges, CQGError cqg_error);

    public delegate void _ICQGCELEvents_TradingSystemAddNotificationEventHandler(CQGTradingSystem cqg_trading_system, CQGTradingSystemAddInfo cqg_trading_system_add_info);

    public delegate void _ICQGCELEvents_TradingSystemDefinitionsResolvedEventHandler(CQGTradingSystemDefinitions cqg_trading_system_definitions, CQGError cqg_error);

    public delegate void _ICQGCELEvents_TradingSystemInsertNotificationEventHandler(CQGTradingSystem cqg_trading_system, CQGTradingSystemInsertInfo cqg_trading_system_insert_info);

    public delegate void _ICQGCELEvents_TradingSystemRemoveNotificationEventHandler(CQGTradingSystem cqg_trading_system, CQGTradingSystemRemoveInfo cqg_trading_system_remove_info);

    public delegate void _ICQGCELEvents_TradingSystemResolvedEventHandler(CQGTradingSystem cqg_trading_system, CQGError cqg_error);

    public delegate void _ICQGCELEvents_TradingSystemTradeRelationAddNotificationEventHandler(CQGTradingSystem cqg_trading_system, CQGTradingSystemRelationAddInfo cqg_trading_system_relation_add_info);

    public delegate void _ICQGCELEvents_TradingSystemUpdateNotificationEventHandler(CQGTradingSystem cqg_trading_system, CQGTradingSystemUpdateInfo cqg_trading_system_update_info);

    public delegate void _ICQGCELEvents_YieldsAddedEventHandler(CQGYields cqg_yields);

    public delegate void _ICQGCELEvents_YieldsInsertedEventHandler(CQGYields cqg_yields, Int32 index_);

    public delegate void _ICQGCELEvents_YieldsRemovedEventHandler(CQGYields cqg_yields, Int32 index_);

    public delegate void _ICQGCELEvents_YieldsResolvedEventHandler(CQGYields cqg_yields, CQGError cqg_error);

    public delegate void _ICQGCELEvents_YieldsUpdatedEventHandler(CQGYields cqg_yields, Int32 index_);

    public delegate void _ICQGCELGeneralEvents_CELStartedEventHandler();

    public delegate void _ICQGCELGeneralEvents_CurrencyRatesChangedEventHandler(CQGCurrencyRates cqg_currency_rates);

    public delegate void _ICQGCELGeneralEvents_DataConnectionStatusChangedEventHandler(eConnectionStatus new_status);

    public delegate void _ICQGCELGeneralEvents_DataErrorEventHandler(Object cqg_error, String error_description);

    public delegate void _ICQGCELGeneralEvents_GWConnectionStatusChangedEventHandler(eConnectionStatus new_status);

    public delegate void _ICQGCELGeneralEvents_IsReadyEventHandler(ref eReadyStatus ready_status);

    public delegate void _ICQGCELGeneralEvents_LineTimeChangedEventHandler(DateTime new_line_time);

    public delegate void _ICQGCELGeneralEvents_OnIdleEventHandler();

    public delegate void _ICQGCELInstrumentEvents_CommodityInstrumentsResolvedEventHandler(String commodity_name, eInstrumentType instrument_types, CQGCommodityInstruments cqg_commodity_intruments);

    public delegate void _ICQGCELInstrumentEvents_IncorrectSymbolEventHandler(String symbol_);

    public delegate void _ICQGCELInstrumentEvents_InstrumentChangedEventHandler(CQGInstrument cqg_instrument, CQGQuotes cqg_quotes, CQGInstrumentProperties cqg_instrument_properties);

    public delegate void _ICQGCELInstrumentEvents_InstrumentDOMChangedEventHandler(CQGInstrument cqg_instrument, CQGDOMQuotes prev_asks, CQGDOMQuotes prev_bids);

    public delegate void _ICQGCELInstrumentEvents_InstrumentsGroupChangedEventHandler(eChangeType change_type, CQGInstrumentsGroup instruments_group, CQGStringCollection instruments_names);

    public delegate void _ICQGCELInstrumentEvents_InstrumentsGroupResolvedEventHandler(CQGInstrumentsGroup instruments_group, CQGError cqg_error);

    public delegate void _ICQGCELInstrumentEvents_InstrumentSubscribedEventHandler(String symbol_, CQGInstrument cqg_instrument);

    #endregion

    #region Interfaces
    public interface _ICQGCELEvents
    {
        #region Methods
        void AccountChanged(eAccountChangeType change_type, CQGAccount cqg_account, CQGPosition cqg_position);

        void AdvancedStudyAdded(CQGAdvancedStudy cqg_advanced_study);

        void AdvancedStudyDefinitionsResolved(CQGAdvancedStudyDefinitions cqg_advanced_study_definitions, CQGError cqg_error);

        void AdvancedStudyInserted(CQGAdvancedStudy cqg_advanced_study, Int32 index_);

        void AdvancedStudyRemoved(CQGAdvancedStudy cqg_advanced_study, Int32 index_);

        void AdvancedStudyResolved(CQGAdvancedStudy cqg_advanced_study, CQGError cqg_error);

        void AdvancedStudyUpdated(CQGAdvancedStudy cqg_advanced_study, Int32 index_);

        void AlgorithmicOrderPlaced(String guid_, CQGAlgorithmicOrderParameters main_params, CQGAlgorithmicOrderProperties custom_props);

        void AlgorithmicOrderRegistrationComplete(String guid_, CQGError cqg_error);

        void AllOrdersCanceled(eOrderSideFilter order_side, CQGIntegerCollection gw_account_ids, CQGStringCollection instrument_names);

        void AuthenticationStatusChanged(eSessionStatus new_status, CQGError cqg_error);

        void BarsTimestampsResolved(CQGBarsTimestamps cqg_bars_timestamps, CQGError cqg_error);

        void CELStarted();

        void CommodityInstrumentsResolved(String commodity_name, eInstrumentType instrument_types, CQGCommodityInstruments cqg_commodity_intruments);

        void ConditionAdded(CQGCondition cqg_condition);

        void ConditionDefinitionsResolved(CQGConditionDefinitions cqg_condition_definitions, CQGError cqg_error);

        void ConditionInserted(CQGCondition cqg_condition, Int32 index_);

        void ConditionRemoved(CQGCondition cqg_condition, Int32 index_);

        void ConditionResolved(CQGCondition cqg_condition, CQGError cqg_error);

        void ConditionUpdated(CQGCondition cqg_condition, Int32 index_);

        void ConstantVolumeBarsAdded(CQGConstantVolumeBars cqg_constant_volume_bars);

        void ConstantVolumeBarsInserted(CQGConstantVolumeBars cqg_constant_volume_bars, Int32 index_);

        void ConstantVolumeBarsRemoved(CQGConstantVolumeBars cqg_constant_volume_bars, Int32 index_);

        void ConstantVolumeBarsResolved(CQGConstantVolumeBars cqg_constant_volume_bars, CQGError cqg_error);

        void ConstantVolumeBarsUpdated(CQGConstantVolumeBars cqg_constant_volume_bars, Int32 index_);

        void CurrencyRatesChanged(CQGCurrencyRates cqg_currency_rates);

        void CustomSessionsResolved(CQGSessionsCollection cqg_sessions_collection, CQGError cqg_error);

        void CustomStudyAdded(CQGCustomStudy cqg_custom_study);

        void CustomStudyDefinitionsResolved(CQGCustomStudyDefinitions cqg_custom_study_definitions, CQGError cqg_error);

        void CustomStudyInserted(CQGCustomStudy cqg_custom_study, Int32 index_);

        void CustomStudyRemoved(CQGCustomStudy cqg_custom_study, Int32 index_);

        void CustomStudyResolved(CQGCustomStudy cqg_custom_study, CQGError cqg_error);

        void CustomStudyUpdated(CQGCustomStudy cqg_custom_study, Int32 index_);

        void DataConnectionStatusChanged(eConnectionStatus new_status);

        void DataError(Object cqg_error, String error_description);

        void DataSourcesResolved(CQGDataSources cqg_data_sources, CQGError cqg_error);

        void DataSourceSymbolsResolved(String data_source_abbreviation, CQGDataSourceSymbols cqg_data_source_symbols, CQGError cqg_error);

        void ExpressionAdded(CQGExpression cqg_expression);

        void ExpressionInserted(CQGExpression cqg_expression, Int32 index_);

        void ExpressionRemoved(CQGExpression cqg_expression, Int32 index_);

        void ExpressionResolved(CQGExpression cqg_expression, CQGError cqg_error);

        void ExpressionUpdated(CQGExpression cqg_expression, Int32 index_);

        void GWConnectionStatusChanged(eConnectionStatus new_status);

        void GWEnvironmentChanged(eGWEnvChangeCode event_code, Int32 account_id, Int32 phase_);

        void HistoricalSessionsResolved(CQGSessionsCollection cqg_historical_sessions, CQGHistoricalSessionsRequest cqg_historical_sessions_request, CQGError cqg_error);

        void ICConnectionStatusChanged(eICConnectionStatus new_status);

        void IncorrectSymbol(String symbol_);

        void InstrumentChanged(CQGInstrument cqg_instrument, CQGQuotes cqg_quotes, CQGInstrumentProperties cqg_instrument_properties);

        void InstrumentDOMChanged(CQGInstrument cqg_instrument, CQGDOMQuotes prev_asks, CQGDOMQuotes prev_bids);

        void InstrumentsGroupChanged(eChangeType change_type, CQGInstrumentsGroup instruments_group, CQGStringCollection instruments_names);

        void InstrumentsGroupResolved(CQGInstrumentsGroup instruments_group, CQGError cqg_error);

        void InstrumentSubscribed(String symbol_, CQGInstrument cqg_instrument);

        void IsReady(ref eReadyStatus ready_status);

        void LineTimeChanged(DateTime new_line_time);

        void ManualFillChanged(CQGManualFill cqg_manual_fill, eManualFillUpdateType modify_type);

        void ManualFillsResolved(CQGManualFills cqg_manual_fills, CQGError cqg_error);

        void ManualFillUpdateResolved(CQGManualFillRequest cqg_manual_fill_request, CQGError cqg_error);

        void OnIdle();

        void OnQueryProgress(CQGOrdersQuery cqg_orders_query, CQGError cqg_error);

        void OrderChanged(eChangeType change_type, CQGOrder cqg_order, CQGOrderProperties old_properties, CQGFill cqg_fill, CQGError cqg_error);

        void PasswordChanged(eSessionStatus request_status, CQGError cqg_error);

        void PointAndFigureBarsAdded(CQGPointAndFigureBars cqg_point_and_figure_bars);

        void PointAndFigureBarsInserted(CQGPointAndFigureBars cqg_point_and_figure_bars, Int32 index_);

        void PointAndFigureBarsRemoved(CQGPointAndFigureBars cqg_point_and_figure_bars, Int32 index_);

        void PointAndFigureBarsResolved(CQGPointAndFigureBars cqg_point_and_figure_bars, CQGError cqg_error);

        void PointAndFigureBarsUpdated(CQGPointAndFigureBars cqg_point_and_figure_bars, Int32 index_);

        void PositionsStatementResolved(CQGPositionsStatement cqg_positions_statement, CQGError cqg_error);

        void QFormulaDefinitionsResolved(CQGQFormulaDefinitions cqg_qformula_definitions, CQGError cqg_error);

        void StrategyDefinitionProgress(CQGStrategyDefinition cqg_definition, CQGError cqg_error);

        void SubMinuteBarsAdded(CQGSubMinuteBars cqg_submintue_bars);

        void SubMinuteBarsInserted(CQGSubMinuteBars cqg_subminute_bars, Int32 index_);

        void SubMinuteBarsRemoved(CQGSubMinuteBars cqg_subminute_bars, Int32 index_);

        void SubMinuteBarsResolved(CQGSubMinuteBars cqg_subminte_bars, CQGError cqg_error);

        void SubMinuteBarsUpdated(CQGSubMinuteBars cqg_subminute_bars, Int32 index_);

        void SummariesStatementResolved(CQGSummariesStatement cqg_summaries_statement, CQGError cqg_error);

        void TFlowBarsAdded(CQGTFlowBars cqg_tflow_bars);

        void TFlowBarsInserted(CQGTFlowBars cqg_tflow_bars, Int32 index_);

        void TFlowBarsRemoved(CQGTFlowBars cqg_tflow_bars, Int32 index_);

        void TFlowBarsResolved(CQGTFlowBars cqg_tflow_bars, CQGError cqg_error);

        void TFlowBarsUpdated(CQGTFlowBars cqg_tflow_bars, Int32 index_);

        void TicksAdded(CQGTicks cqg_ticks, Int32 added_ticks_count);

        void TicksResolved(CQGTicks cqg_ticks, CQGError cqg_error);

        void TimedBarsAdded(CQGTimedBars cqg_timed_bars);

        void TimedBarsInserted(CQGTimedBars cqg_timed_bars, Int32 index_);

        void TimedBarsRemoved(CQGTimedBars cqg_timed_bars, Int32 index_);

        void TimedBarsResolved(CQGTimedBars cqg_timed_bars, CQGError cqg_error);

        void TimedBarsUpdated(CQGTimedBars cqg_timed_bars, Int32 index_);

        void TradableCommoditiesResolved(Int32 gw_account_id, CQGCommodities cqg_commodities, CQGError cqg_error);

        void TradableExchangesResolved(Int32 gw_account_id, CQGExchanges cqg_exchanges, CQGError cqg_error);

        void TradingSystemAddNotification(CQGTradingSystem cqg_trading_system, CQGTradingSystemAddInfo cqg_trading_system_add_info);

        void TradingSystemDefinitionsResolved(CQGTradingSystemDefinitions cqg_trading_system_definitions, CQGError cqg_error);

        void TradingSystemInsertNotification(CQGTradingSystem cqg_trading_system, CQGTradingSystemInsertInfo cqg_trading_system_insert_info);

        void TradingSystemRemoveNotification(CQGTradingSystem cqg_trading_system, CQGTradingSystemRemoveInfo cqg_trading_system_remove_info);

        void TradingSystemResolved(CQGTradingSystem cqg_trading_system, CQGError cqg_error);

        void TradingSystemTradeRelationAddNotification(CQGTradingSystem cqg_trading_system, CQGTradingSystemRelationAddInfo cqg_trading_system_relation_add_info);

        void TradingSystemUpdateNotification(CQGTradingSystem cqg_trading_system, CQGTradingSystemUpdateInfo cqg_trading_system_update_info);

        void YieldsAdded(CQGYields cqg_yields);

        void YieldsInserted(CQGYields cqg_yields, Int32 index_);

        void YieldsRemoved(CQGYields cqg_yields, Int32 index_);

        void YieldsResolved(CQGYields cqg_yields, CQGError cqg_error);

        void YieldsUpdated(CQGYields cqg_yields, Int32 index_);

        #endregion

    }

    public interface _ICQGCELEvents_Event
    {
        #region Events
        event _ICQGCELEvents_AccountChangedEventHandler AccountChanged;

        event _ICQGCELEvents_AdvancedStudyAddedEventHandler AdvancedStudyAdded;

        event _ICQGCELEvents_AdvancedStudyDefinitionsResolvedEventHandler AdvancedStudyDefinitionsResolved;

        event _ICQGCELEvents_AdvancedStudyInsertedEventHandler AdvancedStudyInserted;

        event _ICQGCELEvents_AdvancedStudyRemovedEventHandler AdvancedStudyRemoved;

        event _ICQGCELEvents_AdvancedStudyResolvedEventHandler AdvancedStudyResolved;

        event _ICQGCELEvents_AdvancedStudyUpdatedEventHandler AdvancedStudyUpdated;

        event _ICQGCELEvents_AlgorithmicOrderPlacedEventHandler AlgorithmicOrderPlaced;

        event _ICQGCELEvents_AlgorithmicOrderRegistrationCompleteEventHandler AlgorithmicOrderRegistrationComplete;

        event _ICQGCELEvents_AllOrdersCanceledEventHandler AllOrdersCanceled;

        event _ICQGCELEvents_AuthenticationStatusChangedEventHandler AuthenticationStatusChanged;

        event _ICQGCELEvents_BarsTimestampsResolvedEventHandler BarsTimestampsResolved;

        event _ICQGCELEvents_CELStartedEventHandler CELStarted;

        event _ICQGCELEvents_CommodityInstrumentsResolvedEventHandler CommodityInstrumentsResolved;

        event _ICQGCELEvents_ConditionAddedEventHandler ConditionAdded;

        event _ICQGCELEvents_ConditionDefinitionsResolvedEventHandler ConditionDefinitionsResolved;

        event _ICQGCELEvents_ConditionInsertedEventHandler ConditionInserted;

        event _ICQGCELEvents_ConditionRemovedEventHandler ConditionRemoved;

        event _ICQGCELEvents_ConditionResolvedEventHandler ConditionResolved;

        event _ICQGCELEvents_ConditionUpdatedEventHandler ConditionUpdated;

        event _ICQGCELEvents_ConstantVolumeBarsAddedEventHandler ConstantVolumeBarsAdded;

        event _ICQGCELEvents_ConstantVolumeBarsInsertedEventHandler ConstantVolumeBarsInserted;

        event _ICQGCELEvents_ConstantVolumeBarsRemovedEventHandler ConstantVolumeBarsRemoved;

        event _ICQGCELEvents_ConstantVolumeBarsResolvedEventHandler ConstantVolumeBarsResolved;

        event _ICQGCELEvents_ConstantVolumeBarsUpdatedEventHandler ConstantVolumeBarsUpdated;

        event _ICQGCELEvents_CurrencyRatesChangedEventHandler CurrencyRatesChanged;

        event _ICQGCELEvents_CustomSessionsResolvedEventHandler CustomSessionsResolved;

        event _ICQGCELEvents_CustomStudyAddedEventHandler CustomStudyAdded;

        event _ICQGCELEvents_CustomStudyDefinitionsResolvedEventHandler CustomStudyDefinitionsResolved;

        event _ICQGCELEvents_CustomStudyInsertedEventHandler CustomStudyInserted;

        event _ICQGCELEvents_CustomStudyRemovedEventHandler CustomStudyRemoved;

        event _ICQGCELEvents_CustomStudyResolvedEventHandler CustomStudyResolved;

        event _ICQGCELEvents_CustomStudyUpdatedEventHandler CustomStudyUpdated;

        event _ICQGCELEvents_DataConnectionStatusChangedEventHandler DataConnectionStatusChanged;

        event _ICQGCELEvents_DataErrorEventHandler DataError;

        event _ICQGCELEvents_DataSourcesResolvedEventHandler DataSourcesResolved;

        event _ICQGCELEvents_DataSourceSymbolsResolvedEventHandler DataSourceSymbolsResolved;

        event _ICQGCELEvents_ExpressionAddedEventHandler ExpressionAdded;

        event _ICQGCELEvents_ExpressionInsertedEventHandler ExpressionInserted;

        event _ICQGCELEvents_ExpressionRemovedEventHandler ExpressionRemoved;

        event _ICQGCELEvents_ExpressionResolvedEventHandler ExpressionResolved;

        event _ICQGCELEvents_ExpressionUpdatedEventHandler ExpressionUpdated;

        event _ICQGCELEvents_GWConnectionStatusChangedEventHandler GWConnectionStatusChanged;

        event _ICQGCELEvents_GWEnvironmentChangedEventHandler GWEnvironmentChanged;

        event _ICQGCELEvents_HistoricalSessionsResolvedEventHandler HistoricalSessionsResolved;

        event _ICQGCELEvents_ICConnectionStatusChangedEventHandler ICConnectionStatusChanged;

        event _ICQGCELEvents_IncorrectSymbolEventHandler IncorrectSymbol;

        event _ICQGCELEvents_InstrumentChangedEventHandler InstrumentChanged;

        event _ICQGCELEvents_InstrumentDOMChangedEventHandler InstrumentDOMChanged;

        event _ICQGCELEvents_InstrumentsGroupChangedEventHandler InstrumentsGroupChanged;

        event _ICQGCELEvents_InstrumentsGroupResolvedEventHandler InstrumentsGroupResolved;

        event _ICQGCELEvents_InstrumentSubscribedEventHandler InstrumentSubscribed;

        event _ICQGCELEvents_IsReadyEventHandler IsReady;

        event _ICQGCELEvents_LineTimeChangedEventHandler LineTimeChanged;

        event _ICQGCELEvents_ManualFillChangedEventHandler ManualFillChanged;

        event _ICQGCELEvents_ManualFillsResolvedEventHandler ManualFillsResolved;

        event _ICQGCELEvents_ManualFillUpdateResolvedEventHandler ManualFillUpdateResolved;

        event _ICQGCELEvents_OnIdleEventHandler OnIdle;

        event _ICQGCELEvents_OnQueryProgressEventHandler OnQueryProgress;

        event _ICQGCELEvents_OrderChangedEventHandler OrderChanged;

        event _ICQGCELEvents_PasswordChangedEventHandler PasswordChanged;

        event _ICQGCELEvents_PointAndFigureBarsAddedEventHandler PointAndFigureBarsAdded;

        event _ICQGCELEvents_PointAndFigureBarsInsertedEventHandler PointAndFigureBarsInserted;

        event _ICQGCELEvents_PointAndFigureBarsRemovedEventHandler PointAndFigureBarsRemoved;

        event _ICQGCELEvents_PointAndFigureBarsResolvedEventHandler PointAndFigureBarsResolved;

        event _ICQGCELEvents_PointAndFigureBarsUpdatedEventHandler PointAndFigureBarsUpdated;

        event _ICQGCELEvents_PositionsStatementResolvedEventHandler PositionsStatementResolved;

        event _ICQGCELEvents_QFormulaDefinitionsResolvedEventHandler QFormulaDefinitionsResolved;

        event _ICQGCELEvents_StrategyDefinitionProgressEventHandler StrategyDefinitionProgress;

        event _ICQGCELEvents_SubMinuteBarsAddedEventHandler SubMinuteBarsAdded;

        event _ICQGCELEvents_SubMinuteBarsInsertedEventHandler SubMinuteBarsInserted;

        event _ICQGCELEvents_SubMinuteBarsRemovedEventHandler SubMinuteBarsRemoved;

        event _ICQGCELEvents_SubMinuteBarsResolvedEventHandler SubMinuteBarsResolved;

        event _ICQGCELEvents_SubMinuteBarsUpdatedEventHandler SubMinuteBarsUpdated;

        event _ICQGCELEvents_SummariesStatementResolvedEventHandler SummariesStatementResolved;

        event _ICQGCELEvents_TFlowBarsAddedEventHandler TFlowBarsAdded;

        event _ICQGCELEvents_TFlowBarsInsertedEventHandler TFlowBarsInserted;

        event _ICQGCELEvents_TFlowBarsRemovedEventHandler TFlowBarsRemoved;

        event _ICQGCELEvents_TFlowBarsResolvedEventHandler TFlowBarsResolved;

        event _ICQGCELEvents_TFlowBarsUpdatedEventHandler TFlowBarsUpdated;

        event _ICQGCELEvents_TicksAddedEventHandler TicksAdded;

        event _ICQGCELEvents_TicksResolvedEventHandler TicksResolved;

        event _ICQGCELEvents_TimedBarsAddedEventHandler TimedBarsAdded;

        event _ICQGCELEvents_TimedBarsInsertedEventHandler TimedBarsInserted;

        event _ICQGCELEvents_TimedBarsRemovedEventHandler TimedBarsRemoved;

        event _ICQGCELEvents_TimedBarsResolvedEventHandler TimedBarsResolved;

        event _ICQGCELEvents_TimedBarsUpdatedEventHandler TimedBarsUpdated;

        event _ICQGCELEvents_TradableCommoditiesResolvedEventHandler TradableCommoditiesResolved;

        event _ICQGCELEvents_TradableExchangesResolvedEventHandler TradableExchangesResolved;

        event _ICQGCELEvents_TradingSystemAddNotificationEventHandler TradingSystemAddNotification;

        event _ICQGCELEvents_TradingSystemDefinitionsResolvedEventHandler TradingSystemDefinitionsResolved;

        event _ICQGCELEvents_TradingSystemInsertNotificationEventHandler TradingSystemInsertNotification;

        event _ICQGCELEvents_TradingSystemRemoveNotificationEventHandler TradingSystemRemoveNotification;

        event _ICQGCELEvents_TradingSystemResolvedEventHandler TradingSystemResolved;

        event _ICQGCELEvents_TradingSystemTradeRelationAddNotificationEventHandler TradingSystemTradeRelationAddNotification;

        event _ICQGCELEvents_TradingSystemUpdateNotificationEventHandler TradingSystemUpdateNotification;

        event _ICQGCELEvents_YieldsAddedEventHandler YieldsAdded;

        event _ICQGCELEvents_YieldsInsertedEventHandler YieldsInserted;

        event _ICQGCELEvents_YieldsRemovedEventHandler YieldsRemoved;

        event _ICQGCELEvents_YieldsResolvedEventHandler YieldsResolved;

        event _ICQGCELEvents_YieldsUpdatedEventHandler YieldsUpdated;

        #endregion

    }

    public interface _ICQGCELGeneralEvents
    {
        #region Methods
        void CELStarted();

        void CurrencyRatesChanged(CQGCurrencyRates cqg_currency_rates);

        void DataConnectionStatusChanged(eConnectionStatus new_status);

        void DataError(Object cqg_error, String error_description);

        void GWConnectionStatusChanged(eConnectionStatus new_status);

        void IsReady(ref eReadyStatus ready_status);

        void LineTimeChanged(DateTime new_line_time);

        void OnIdle();

        #endregion

    }

    public interface _ICQGCELGeneralEvents_Event
    {
        #region Events
        event _ICQGCELGeneralEvents_CELStartedEventHandler CELStarted;

        event _ICQGCELGeneralEvents_CurrencyRatesChangedEventHandler CurrencyRatesChanged;

        event _ICQGCELGeneralEvents_DataConnectionStatusChangedEventHandler DataConnectionStatusChanged;

        event _ICQGCELGeneralEvents_DataErrorEventHandler DataError;

        event _ICQGCELGeneralEvents_GWConnectionStatusChangedEventHandler GWConnectionStatusChanged;

        event _ICQGCELGeneralEvents_IsReadyEventHandler IsReady;

        event _ICQGCELGeneralEvents_LineTimeChangedEventHandler LineTimeChanged;

        event _ICQGCELGeneralEvents_OnIdleEventHandler OnIdle;

        #endregion

    }

    public interface _ICQGCELInstrumentEvents
    {
        #region Methods
        void CommodityInstrumentsResolved(String commodity_name, eInstrumentType instrument_types, CQGCommodityInstruments cqg_commodity_intruments);

        void IncorrectSymbol(String symbol_);

        void InstrumentChanged(CQGInstrument cqg_instrument, CQGQuotes cqg_quotes, CQGInstrumentProperties cqg_instrument_properties);

        void InstrumentDOMChanged(CQGInstrument cqg_instrument, CQGDOMQuotes prev_asks, CQGDOMQuotes prev_bids);

        void InstrumentsGroupChanged(eChangeType change_type, CQGInstrumentsGroup instruments_group, CQGStringCollection instruments_names);

        void InstrumentsGroupResolved(CQGInstrumentsGroup instruments_group, CQGError cqg_error);

        void InstrumentSubscribed(String symbol_, CQGInstrument cqg_instrument);

        #endregion

    }

    public interface _ICQGCELInstrumentEvents_Event
    {
        #region Events
        event _ICQGCELInstrumentEvents_CommodityInstrumentsResolvedEventHandler CommodityInstrumentsResolved;

        event _ICQGCELInstrumentEvents_IncorrectSymbolEventHandler IncorrectSymbol;

        event _ICQGCELInstrumentEvents_InstrumentChangedEventHandler InstrumentChanged;

        event _ICQGCELInstrumentEvents_InstrumentDOMChangedEventHandler InstrumentDOMChanged;

        event _ICQGCELInstrumentEvents_InstrumentsGroupChangedEventHandler InstrumentsGroupChanged;

        event _ICQGCELInstrumentEvents_InstrumentsGroupResolvedEventHandler InstrumentsGroupResolved;

        event _ICQGCELInstrumentEvents_InstrumentSubscribedEventHandler InstrumentSubscribed;

        #endregion

    }

    public interface CQGAccount : ICQGAccount
    {
    }

    public interface CQGAccounts : ICQGAccounts, IEnumerable
    {
    }

    public interface CQGAccountSummaries : ICQGAccountSummaries, IEnumerable
    {
    }

    public interface CQGAccountSummary : ICQGAccountSummary
    {
    }

    public interface CQGAdvancedStudies : ICQGAdvancedStudies, IEnumerable
    {
    }

    public interface CQGAdvancedStudy : ICQGAdvancedStudy, IEnumerable
    {
    }

    public interface CQGAdvancedStudyDefinition : ICQGAdvancedStudyDefinition
    {
    }

    public interface CQGAdvancedStudyDefinitions : ICQGAdvancedStudyDefinitions, IEnumerable
    {
    }

    public interface CQGAdvancedStudyRequest : ICQGAdvancedStudyRequest
    {
    }

    public interface CQGAlgorithmicOrderDefinition : ICQGAlgorithmicOrderDefinition
    {
    }

    public interface CQGAlgorithmicOrderDefinitions : ICQGAlgorithmicOrderDefinitions, IEnumerable
    {
    }

    public interface CQGAlgorithmicOrderParameters : ICQGAlgorithmicOrderParameters
    {
    }

    public interface CQGAlgorithmicOrderProperties : ICQGAlgorithmicOrderProperties, IEnumerable
    {
    }

    public interface CQGAlgorithmicOrderProperty : ICQGAlgorithmicOrderProperty
    {
    }

    public interface CQGAlgoSupplier
    {
    }

    public interface CQGAPIConfig : ICQGAPIConfig
    {
    }

    public interface CQGBarsTimestamps : ICQGBarsTimestamps, IEnumerable
    {
    }

    public interface CQGCEL : ICQGCEL, _ICQGCELEvents_Event
    {
    }

    public interface CQGChangedTradeEntries : ICQGChangedTradeEntries, IEnumerable
    {
    }

    public interface CQGChangedTradeEntry : ICQGChangedTradeEntry
    {
    }

    public interface CQGChangedTradeExit : ICQGChangedTradeExit
    {
    }

    public interface CQGChangedTradeExits : ICQGChangedTradeExits, IEnumerable
    {
    }

    public interface CQGCommodities : ICQGCommodities, IEnumerable
    {
    }

    public interface CQGCommodityInstruments : ICQGCommodityInstruments, IEnumerable
    {
    }

    public interface CQGCondition : ICQGCondition, IEnumerable
    {
    }

    public interface CQGConditionDefinition : ICQGConditionDefinition
    {
    }

    public interface CQGConditionDefinitions : ICQGConditionDefinitions, IEnumerable
    {
    }

    public interface CQGConditionRequest : ICQGConditionRequest
    {
    }

    public interface CQGConditionResult : ICQGConditionResult
    {
    }

    public interface CQGConditions : ICQGConditions, IEnumerable
    {
    }

    public interface CQGConstantVolumeBar : ICQGConstantVolumeBar
    {
    }

    public interface CQGConstantVolumeBars : ICQGConstantVolumeBars, IEnumerable
    {
    }

    public interface CQGConstantVolumeBarsCollection : ICQGConstantVolumeBarsCollection, IEnumerable
    {
    }

    public interface CQGConstantVolumeBarsRequest : ICQGConstantVolumeBarsRequest
    {
    }

    public interface CQGCurrencyRate : ICQGCurrencyRate
    {
    }

    public interface CQGCurrencyRates : ICQGCurrencyRates, IEnumerable
    {
    }

    public interface CQGCurveDefinition : ICQGCurveDefinition
    {
    }

    public interface CQGCurveDefinitions : ICQGCurveDefinitions, IEnumerable
    {
    }

    public interface CQGCurveHeaders : ICQGCurveHeaders, IEnumerable
    {
    }

    public interface CQGCurves : ICQGCurves, IEnumerable
    {
    }

    public interface CQGCustomStudies : ICQGCustomStudies, IEnumerable
    {
    }

    public interface CQGCustomStudy : ICQGCustomStudy, IEnumerable
    {
    }

    public interface CQGCustomStudyDefinition : ICQGCustomStudyDefinition
    {
    }

    public interface CQGCustomStudyDefinitions : ICQGCustomStudyDefinitions, IEnumerable
    {
    }

    public interface CQGCustomStudyRequest : ICQGCustomStudyRequest
    {
    }

    public interface CQGDataSource : ICQGDataSource
    {
    }

    public interface CQGDataSources : ICQGDataSources, IEnumerable
    {
    }

    public interface CQGDataSourceSymbol : ICQGDataSourceSymbol
    {
    }

    public interface CQGDataSourceSymbols : ICQGDataSourceSymbols, IEnumerable
    {
    }

    public interface CQGDirectEventsAccessor : ICQGDirectEventsAccessor, _ICQGCELInstrumentEvents_Event
    {
    }

    public interface CQGDOMQuotes : ICQGDOMQuotes, IEnumerable
    {
    }

    public interface CQGEnvironment : ICQGEnvironment
    {
    }

    public interface CQGError : ICQGError
    {
    }

    public interface CQGExchanges : ICQGExchanges, IEnumerable
    {
    }

    public interface CQGExecutionPattern : ICQGExecutionPattern
    {
    }

    public interface CQGExecutionPatternParameter : ICQGExecutionPatternParameter
    {
    }

    public interface CQGExecutionPatternParameters : ICQGExecutionPatternParameters, IEnumerable
    {
    }

    public interface CQGExpression : ICQGExpression, IEnumerable
    {
    }

    public interface CQGExpressionOutputHeaders : ICQGExpressionOutputHeaders, IEnumerable
    {
    }

    public interface CQGExpressionOutputs : ICQGExpressionOutputs, IEnumerable
    {
    }

    public interface CQGExpressionRequest : ICQGExpressionRequest
    {
    }

    public interface CQGExpressions : ICQGExpressions, IEnumerable
    {
    }

    public interface CQGFill : ICQGFill
    {
    }

    public interface CQGFills : ICQGFills, IEnumerable
    {
    }

    public interface CQGGWTrade : ICQGGWTrade
    {
    }

    public interface CQGGWTrades : ICQGGWTrades, IEnumerable
    {
    }

    public interface CQGHistoricalSessionsRequest : ICQGHistoricalSessionsRequest
    {
    }

    public interface CQGHoliday : ICQGHoliday
    {
    }

    public interface CQGHolidays : ICQGHolidays, IEnumerable
    {
    }

    public interface CQGInstrument : ICQGInstrument
    {
    }

    public interface CQGInstrumentProperties : ICQGInstrumentProperties, IEnumerable
    {
    }

    public interface CQGInstrumentProperty : ICQGInstrumentProperty
    {
    }

    public interface CQGInstruments : ICQGInstruments, IEnumerable
    {
    }

    public interface CQGInstrumentsGroup : ICQGInstrumentsGroup
    {
    }

    public interface CQGInstrumentsGroupRequest : ICQGInstrumentsGroupRequest
    {
    }

    public interface CQGInstrumentsGroups : ICQGInstrumentsGroups, IEnumerable
    {
    }

    public interface CQGInstrumentSubscriptionRequest : ICQGInstrumentSubscriptionRequest
    {
    }

    public interface CQGIntegerCollection : ICQGIntegerCollection, IEnumerable
    {
    }

    public interface CQGLogger : ICQGLogger
    {
    }

    public interface CQGManualFill : ICQGManualFill
    {
    }

    public interface CQGManualFillRequest : ICQGManualFillRequest
    {
    }

    public interface CQGManualFills : ICQGManualFills, IEnumerable
    {
    }

    public interface CQGManualFillsCollection : ICQGManualFillsCollection, IEnumerable
    {
    }

    public interface CQGModifiedProperties : ICQGModifiedProperties, IEnumerable
    {
    }

    public interface CQGModifiedProperty : ICQGModifiedProperty
    {
    }

    public interface CQGOrder : ICQGOrder
    {
    }

    public interface CQGOrderActionRequest : ICQGOrderActionRequest
    {
    }

    public interface CQGOrderChain : ICQGOrderChain
    {
    }

    public interface CQGOrderModify : ICQGOrderModify
    {
    }

    public interface CQGOrderProperties : ICQGOrderProperties, IEnumerable
    {
    }

    public interface CQGOrderProperty : ICQGOrderProperty
    {
    }

    public interface CQGOrders : ICQGOrders, IEnumerable
    {
    }

    public interface CQGOrdersQuery : ICQGOrdersQuery
    {
    }

    public interface CQGOrderStatistics : ICQGOrderStatistics
    {
    }

    public interface CQGParameterDefinition : ICQGParameterDefinition
    {
    }

    public interface CQGParameterDefinitions : ICQGParameterDefinitions, IEnumerable
    {
    }

    public interface CQGPointAndFigureBar : ICQGPointAndFigureBar
    {
    }

    public interface CQGPointAndFigureBars : ICQGPointAndFigureBars, IEnumerable
    {
    }

    public interface CQGPointAndFigureBarsCollection : ICQGPointAndFigureBarsCollection, IEnumerable
    {
    }

    public interface CQGPointAndFigureBarsRequest : ICQGPointAndFigureBarsRequest
    {
    }

    public interface CQGPosition : ICQGPosition
    {
    }

    public interface CQGPositions : ICQGPositions, IEnumerable
    {
    }

    public interface CQGPositionsStatement : ICQGPositionsStatement
    {
    }

    public interface CQGQFormulaDefinition : ICQGQFormulaDefinition
    {
    }

    public interface CQGQFormulaDefinitions : ICQGQFormulaDefinitions, IEnumerable
    {
    }

    public interface CQGQuote : ICQGQuote
    {
    }

    public interface CQGQuotes : ICQGQuotes, IEnumerable
    {
    }

    public interface CQGRemoteOpenAPISession : ICQGRemoteOpenAPISession
    {
    }

    public interface CQGSession : ICQGSession
    {
    }

    public interface CQGSessions : ICQGSessions, IEnumerable
    {
    }

    public interface CQGSessionsCollection : ICQGSessionsCollection, IEnumerable
    {
    }

    public interface CQGStrategyDefinition : ICQGStrategyDefinition
    {
    }

    public interface CQGStrategyDefinitions : ICQGStrategyDefinitions, IEnumerable
    {
    }

    public interface CQGStrategyLegFill : ICQGStrategyLegFill
    {
    }

    public interface CQGStrategyLegFills : ICQGStrategyLegFills
    {
    }

    public interface CQGStringCollection : ICQGStringCollection, IEnumerable
    {
    }

    public interface CQGSubMinuteBar : ICQGSubMinuteBar
    {
    }

    public interface CQGSubMinuteBars : ICQGSubMinuteBars, IEnumerable
    {
    }

    public interface CQGSubMinuteBarsCollection : ICQGSubMinuteBarsCollection, IEnumerable
    {
    }

    public interface CQGSubMinuteBarsRequest : ICQGSubMinuteBarsRequest
    {
    }

    public interface CQGSummariesStatement : ICQGSummariesStatement
    {
    }

    public interface CQGTFlowBar : ICQGTFlowBar
    {
    }

    public interface CQGTFlowBars : ICQGTFlowBars, IEnumerable
    {
    }

    public interface CQGTFlowBarsCollection : ICQGTFlowBarsCollection, IEnumerable
    {
    }

    public interface CQGTFlowBarsRequest : ICQGTFlowBarsRequest
    {
    }

    public interface CQGTick : ICQGTick
    {
    }

    public interface CQGTicks : ICQGTicks, IEnumerable
    {
    }

    public interface CQGTicksCollection : ICQGTicksCollection, IEnumerable
    {
    }

    public interface CQGTicksRequest : ICQGTicksRequest
    {
    }

    public interface CQGTimedBar : ICQGTimedBar
    {
    }

    public interface CQGTimedBars : ICQGTimedBars, IEnumerable
    {
    }

    public interface CQGTimedBarsCollection : ICQGTimedBarsCollection, IEnumerable
    {
    }

    public interface CQGTimedBarsRequest : ICQGTimedBarsRequest
    {
    }

    public interface CQGTrade : ICQGTrade
    {
    }

    public interface CQGTradeEntries : ICQGTradeEntries, IEnumerable
    {
    }

    public interface CQGTradeEntry : ICQGTradeEntry
    {
    }

    public interface CQGTradeEntryDefinition : ICQGTradeEntryDefinition
    {
    }

    public interface CQGTradeExit : ICQGTradeExit
    {
    }

    public interface CQGTradeExitDefinition : ICQGTradeExitDefinition
    {
    }

    public interface CQGTradeExitDefinitions : ICQGTradeExitDefinitions, IEnumerable
    {
    }

    public interface CQGTradeExits : ICQGTradeExits, IEnumerable
    {
    }

    public interface CQGTrades : ICQGTrades, IEnumerable
    {
    }

    public interface CQGTradingSystem : ICQGTradingSystem
    {
    }

    public interface CQGTradingSystemAddInfo : ICQGTradingSystemAddInfo
    {
    }

    public interface CQGTradingSystemBaseBarParameter : ICQGTradingSystemBaseBarParameter
    {
    }

    public interface CQGTradingSystemBaseBarParameters : ICQGTradingSystemBaseBarParameters, IEnumerable
    {
    }

    public interface CQGTradingSystemDefinition : ICQGTradingSystemDefinition
    {
    }

    public interface CQGTradingSystemDefinitions : ICQGTradingSystemDefinitions, IEnumerable
    {
    }

    public interface CQGTradingSystemInsertInfo : ICQGTradingSystemInsertInfo
    {
    }

    public interface CQGTradingSystemRelationAddInfo : ICQGTradingSystemRelationAddInfo
    {
    }

    public interface CQGTradingSystemRemoveInfo : ICQGTradingSystemRemoveInfo
    {
    }

    public interface CQGTradingSystemRequest : ICQGTradingSystemRequest
    {
    }

    public interface CQGTradingSystems : ICQGTradingSystems, IEnumerable
    {
    }

    public interface CQGTradingSystemStatistics : ICQGTradingSystemStatistics
    {
    }

    public interface CQGTradingSystemStatisticsChangeInfo : ICQGTradingSystemStatisticsChangeInfo
    {
    }

    public interface CQGTradingSystemStatisticsCollection : ICQGTradingSystemStatisticsCollection, IEnumerable
    {
    }

    public interface CQGTradingSystemTrade : ICQGTradingSystemTrade
    {
    }

    public interface CQGTradingSystemTradeDefinition : ICQGTradingSystemTradeDefinition
    {
    }

    public interface CQGTradingSystemTradeDefinitions : ICQGTradingSystemTradeDefinitions, IEnumerable
    {
    }

    public interface CQGTradingSystemTradesRow : ICQGTradingSystemTradesRow, IEnumerable
    {
    }

    public interface CQGTradingSystemTradesRows : ICQGTradingSystemTradesRows, IEnumerable
    {
    }

    public interface CQGTradingSystemUpdateInfo : ICQGTradingSystemUpdateInfo
    {
    }

    public interface CQGTransaction : ICQGTransaction
    {
    }

    public interface CQGTransactions : ICQGTransactions, IEnumerable
    {
    }

    public interface CQGYield : ICQGYield
    {
    }

    public interface CQGYields : ICQGYields, IEnumerable
    {
    }

    public interface CQGYieldsCollection : ICQGYieldsCollection, IEnumerable
    {
    }

    public interface CQGYieldsRequest : ICQGYieldsRequest
    {
    }

    public interface ICQGAccount
    {
        #region Properties
        eAccountMarginDetailing AccountMarginDetailing
        {
            get;
            set;
        }

        CQGStringCollection AuthorizedTraders
        {
            get;
        }

        Boolean AutoSubscribeInstruments
        {
            get;
            set;
        }

        CQGCEL CEL
        {
            get;
        }

        CQGAccountSummaries CurrencySummaries
        {
            get;
        }

        DateTime DateOfLastStatement
        {
            get;
        }

        String FcmAccountID
        {
            get;
        }

        eFcmClass FcmClass
        {
            get;
        }

        Int32 FcmID
        {
            get;
        }

        String FcmName
        {
            get;
        }

        Int32 GWAccountID
        {
            get;
        }

        String GWAccountName
        {
            get;
        }

        CQGOrders InternalOrders
        {
            get;
        }

        CQGOrders Orders
        {
            get;
        }

        CQGPositions Positions
        {
            get;
        }

        ePositionSubscriptionLevel PositionSubcriptionLevel
        {
            get;
            set;
        }

        String ReportingCurrency
        {
            get;
        }

        DateTime ServerTimestamp
        {
            get;
        }

        CQGAccountSummary Summary
        {
            get;
        }

        DateTime Timestamp
        {
            get;
        }

        Double TotalMarginValue
        {
            get;
        }

        Double TotalPurchasingPower
        {
            get;
        }

        #endregion

    }

    public interface ICQGAccounts : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGAccount this[Int32 gw_account_id]
        {
            get;
        }

        CQGAccount this[String fcm_account_id, Int32 fcm_id]
        {
            get;
        }

        #endregion

        #region Methods
        void Add(CQGAccount cqg_account);

        CQGAccount get_ItemByFCM(String fcm_account_id, Int32 fcm_id);

        CQGAccount get_ItemByIndex(Int32 index_);

        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGAccountSummaries : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGAccountSummary this[Object index_]
        {
            get;
        }

        #endregion

        #region Methods
        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGAccountSummary
    {
        #region Properties
        CQGAccount Account
        {
            get;
        }

        String CurrencyName
        {
            get;
        }

        Boolean ManualFillsInvolved
        {
            get;
        }

        #endregion

        #region Methods
        Double Balance(Int32 day_ = 0);

        Double CashExcess(Int32 day_ = 1);

        Double Collaterals(Int32 day_ = 1);

        Double InitialMargin(Int32 day_ = 1);

        Double MaintenanceMargin(Int32 day_ = 1);

        Double MVO(Int32 day_ = 0);

        Double NLV(Int32 day_ = 0);

        Double OTE(Int32 day_ = 0);

        Double ProfitLoss(Int32 day_ = 1);

        Double UPL(Int32 day_ = 0);

        #endregion

    }

    public interface ICQGAdvancedStudies : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGAdvancedStudy this[Int32 index_]
        {
            get;
        }

        CQGAdvancedStudy this[String id_]
        {
            get;
        }

        #endregion

        #region Methods
        CQGAdvancedStudy get_ItemById(String id_);

        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGAdvancedStudy : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGCurveHeaders CurveHeaders
        {
            get;
        }

        CQGAdvancedStudyDefinition Definition
        {
            get;
        }

        DateTime EndTimestamp
        {
            get;
        }

        String Id
        {
            get;
        }

        CQGCurves this[Int32 index_]
        {
            get;
        }

        CQGError LastError
        {
            get;
        }

        CQGAdvancedStudyRequest Request
        {
            get;
        }

        DateTime StartTimestamp
        {
            get;
        }

        eRequestStatus Status
        {
            get;
        }

        Object this[String tag_name]
        {
            get;
            set;
        }

        #endregion

        #region Methods
        Object get_Tag(String tag_name);

        new IEnumerator GetEnumerator();

        Int32 IndexForDate(DateTime date_);

        void set_Tag(String tag_name, Object pVal);

        #endregion

    }

    public interface ICQGAdvancedStudyDefinition
    {
        #region Properties
        String Abbreviation
        {
            get;
        }

        CQGCurveDefinitions CurveDefinitions
        {
            get;
        }

        String Name
        {
            get;
        }

        CQGParameterDefinitions ParameterDefinitions
        {
            get;
        }

        #endregion

    }

    public interface ICQGAdvancedStudyDefinitions : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGAdvancedStudyDefinition this[Int32 index_]
        {
            get;
        }

        CQGAdvancedStudyDefinition this[String advanced_study_abbreviation]
        {
            get;
        }

        #endregion

        #region Methods
        CQGAdvancedStudyDefinition get_ItemByAbbreviation(String advanced_study_abbreviation);

        CQGAdvancedStudyDefinition get_ItemByName(String advanced_study_name);

        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGAdvancedStudyRequest
    {
        #region Properties
        String BaseExpression
        {
            get;
            set;
        }

        eTimeSeriesContinuationType Continuation
        {
            get;
            set;
        }

        Int32 DaysBeforeExpiration
        {
            get;
            set;
        }

        CQGAdvancedStudyDefinition Definition
        {
            get;
        }

        Boolean EqualizeCloses
        {
            get;
            set;
        }

        eHistoricalPeriod HistoricalPeriod
        {
            get;
            set;
        }

        Boolean IncludeEnd
        {
            get;
            set;
        }

        Int32 IntradayPeriod
        {
            get;
            set;
        }

        Object this[Object key_]
        {
            get;
            set;
        }

        Object RangeEnd
        {
            get;
            set;
        }

        Object RangeStart
        {
            get;
            set;
        }

        Int32 RecalcPeriod
        {
            get;
            set;
        }

        eSessionFlag SessionFlags
        {
            get;
            set;
        }

        Object SessionsFilter
        {
            get;
            set;
        }

        eTimeSeriesSubscriptionLevel SubscriptionLevel
        {
            get;
            set;
        }

        Boolean UpdatesEnabled
        {
            get;
            set;
        }

        #endregion

        #region Methods
        Object get_Parameter(Object key_);

        void IncludeCurve(Object curve_key);

        Boolean IsCurveIncluded(Object curve_key);

        void set_Parameter(Object key_, Object pVal);

        #endregion

    }

    public interface ICQGAlgorithmicOrderDefinition
    {
        #region Properties
        Object DefaultValue
        {
            get;
            set;
        }

        Int32 DefaultValueIndex
        {
            get;
            set;
        }

        String Name
        {
            get;
            set;
        }

        eAlgorithmicOrderPropertyType Type
        {
            get;
            set;
        }

        String Unit
        {
            get;
            set;
        }

        CQGStringCollection Values
        {
            get;
        }

        #endregion

        #region Methods
        void AddValue(String value_);

        #endregion

    }

    public interface ICQGAlgorithmicOrderDefinitions : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGAlgorithmicOrderDefinition this[Int32 index_]
        {
            get;
        }

        #endregion

        #region Methods
        void Add(CQGAlgorithmicOrderDefinition definition_);

        CQGAlgorithmicOrderDefinition CreateDefinition();

        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGAlgorithmicOrderParameters
    {
        #region Properties
        eOrderDuration DurationType
        {
            get;
        }

        eOrderExecutionInstruction ExecutionInstructions
        {
            get;
        }

        String ExecutionPattern
        {
            get;
        }

        DateTime GTD
        {
            get;
        }

        Int32 GWAccountID
        {
            get;
        }

        String InstrumentName
        {
            get;
        }

        Boolean Parked
        {
            get;
        }

        eOrderTrailingPeg PreferredTrailingPeg
        {
            get;
        }

        Double Price
        {
            get;
        }

        Int32 Quantity
        {
            get;
        }

        eOrderSide Side
        {
            get;
        }

        Double StopLimitPrice
        {
            get;
        }

        Double TrailingOffset
        {
            get;
        }

        Int32 TriggerQuantity
        {
            get;
        }

        eOrderType Type
        {
            get;
        }

        Int32 VisibleQuantity
        {
            get;
        }

        #endregion

    }

    public interface ICQGAlgorithmicOrderProperties : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGAlgorithmicOrderProperty this[Int32 index_]
        {
            get;
        }

        #endregion

        #region Methods
        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGAlgorithmicOrderProperty
    {
        #region Properties
        String Name
        {
            get;
        }

        Object Value
        {
            get;
        }

        #endregion

    }

    public interface ICQGAPIConfig
    {
        #region Properties
        Int32 AccountMarginAndPositionsThrottleInterval
        {
            get;
            set;
        }

        Int32 AgeToDeleteLogFileDays
        {
            get;
            set;
        }

        Boolean ApplyDaylightSavingChanges
        {
            get;
            set;
        }

        Boolean CollectionsThrowException
        {
            get;
            set;
        }

        eAccountMarginDetailing DefaultAccountMarginDetailing
        {
            get;
            set;
        }

        eDOMandBBAType DefaultInstrumentBBAType
        {
            get;
            set;
        }

        eDataSubscriptionLevel DefaultInstrumentSubscriptionLevel
        {
            get;
            set;
        }

        ePositionSubscriptionLevel DefPositionSubscriptionLevel
        {
            get;
            set;
        }

        eDOMUpdatesMode DOMUpdatesMode
        {
            get;
            set;
        }

        Int32 DOMUpdatesPeriod
        {
            get;
            set;
        }

        Boolean FireEventOnChangedPrices
        {
            get;
            set;
        }

        Boolean GatewayEnabled
        {
            get;
            set;
        }

        Boolean IncludeOrderTransactions
        {
            get;
            set;
        }

        eLogSeverity LogSeverity
        {
            get;
            set;
        }

        Int32 MaxLogFileCount
        {
            get;
            set;
        }

        DateTime MaxLogFileDuration
        {
            get;
            set;
        }

        Int32 MaxLogFileSize
        {
            get;
            set;
        }

        Int32 MessageProcessingTimeout
        {
            get;
            set;
        }

        Boolean MetaDataEnabled
        {
            get;
            set;
        }

        Boolean NewInstrumentChangeMode
        {
            get;
            set;
        }

        Boolean NewInstrumentMode
        {
            get;
            set;
        }

        Boolean NonsynchronizedData
        {
            get;
            set;
        }

        Boolean PendingOrderActionEnabled
        {
            get;
            set;
        }

        ePositionDetailing PositionDetailing
        {
            get;
            set;
        }

        ePriceMode PriceMode
        {
            get;
            set;
        }

        String ProviderPassword
        {
            get;
            set;
        }

        Boolean QueryAllAuthorizedTraders
        {
            get;
            set;
        }

        eReadyStatusCheck ReadyStatusCheck
        {
            get;
            set;
        }

        String RemoteOpenAPILoginService
        {
            get;
            set;
        }

        String RemoteOpenAPIServer
        {
            get;
            set;
        }

        CQGStringCollection RemoteOpenAPIServers
        {
            get;
        }

        Boolean ReplaceLoginSession
        {
            get;
            set;
        }

        Int32 SnapshotPeriod
        {
            get;
            set;
        }

        Boolean StrategyManagerEnabled
        {
            get;
            set;
        }

        eTimeZone TimeZoneCode
        {
            get;
            set;
        }

        Boolean UsedFromATLClient
        {
            get;
            set;
        }

        Boolean UseOrderSide
        {
            get;
            set;
        }

        #endregion

        #region Methods
        void AddRemoteOpenAPIServer(String server_address);

        void ClearRemoteOpenAPIServers();

        #endregion

    }

    public interface ICQGBarsTimestamps : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        String Id
        {
            get;
        }

        DateTime this[Int32 index_]
        {
            get;
        }

        CQGError LastError
        {
            get;
        }

        eRequestStatus Status
        {
            get;
        }

        #endregion

        #region Methods
        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGCEL
    {
        #region Properties
        CQGAccounts Accounts
        {
            get;
        }

        eAccountSubscriptionLevel AccountSubscriptionLevel
        {
            get;
            set;
        }

        CQGAdvancedStudies AllAdvancedStudies
        {
            get;
        }

        CQGConditions AllConditions
        {
            get;
        }

        CQGConstantVolumeBarsCollection AllConstantVolumeBars
        {
            get;
        }

        CQGCustomStudies AllCustomStudies
        {
            get;
        }

        CQGExpressions AllExpressions
        {
            get;
        }

        CQGInstrumentsGroups AllInstrumentsGroups
        {
            get;
        }

        CQGManualFillsCollection AllManualFills
        {
            get;
        }

        CQGPointAndFigureBarsCollection AllPointAndFigureBars
        {
            get;
        }

        CQGStrategyDefinitions AllStrategyDefinitions
        {
            get;
        }

        CQGSubMinuteBarsCollection AllSubMinuteBars
        {
            get;
        }

        CQGTFlowBarsCollection AllTFlowBars
        {
            get;
        }

        CQGTicksCollection AllTicks
        {
            get;
        }

        CQGTimedBarsCollection AllTimedBars
        {
            get;
        }

        CQGTradingSystems AllTradingSystems
        {
            get;
        }

        CQGYieldsCollection AllYields
        {
            get;
        }

        CQGAPIConfig APIConfiguration
        {
            get;
        }

        CQGCELConfiguration Configuration
        {
            get;
            set;
        }

        CQGCurrencyRates CurrencyRates
        {
            get;
        }

        CQGDirectEventsAccessor DirectEventsAccessor
        {
            get;
        }

        CQGEnvironment Environment
        {
            get;
        }

        CQGInstruments Instruments
        {
            get;
        }

        CQGOrders InternalOrders
        {
            get;
        }

        Boolean IsStarted
        {
            get;
        }

        CQGLogger Logger
        {
            get;
        }

        CQGOrders Orders
        {
            get;
        }

        Boolean OTPRequired
        {
            get;
        }

        #endregion

        #region Methods
        void ActivateAllOrders(CQGAccount cqg_account = null, CQGInstrument cqg_instrument = null, Boolean from_all_traders = false, eOrderSide order_side = eOrderSide.osdUndefined);

        void ActivateAllOrdersEx(CQGOrderActionRequest cqg_order_action_request);

        void CancelAllOrders(CQGAccount cqg_account = null, CQGInstrument cqg_instrument = null, Boolean from_all_traders = false, Boolean parked_ = false, eOrderSide order_side = eOrderSide.osdUndefined);

        void CancelAllOrdersEx(CQGOrderActionRequest cqg_order_action_request);

        void ChangePassword(String username_, String old_password, String new_password);

        void ChangeRemoteOpenAPIServer(String server_address);

        CQGAccounts CreateAccountsCollection();

        CQGAdvancedStudyRequest CreateAdvancedStudyRequest(String name_or_abbr);

        CQGAlgorithmicOrderDefinitions CreateAlgorithmicOrderDefinitions();

        CQGConditionRequest CreateConditionRequest(String condition_name);

        CQGConstantVolumeBarsRequest CreateConstantVolumeBarsRequest();

        CQGCustomStudyRequest CreateCustomStudyRequest(String name_or_abbr);

        CQGExecutionPattern CreateExecutionPattern(CQGStrategyDefinition cqg_definition = null, eOrderType order_type = eOrderType.otUndefined);

        CQGExpressionRequest CreateExpressionRequest();

        CQGHistoricalSessionsRequest CreateHistoricalSessionsRequest();

        CQGInstrumentSubscriptionRequest CreateInstrumentRequest();

        CQGInstrumentsGroupRequest CreateInstrumentsGroupRequest();

        CQGManualFillRequest CreateManualFillRequest(eManualFillUpdateType update_type, CQGManualFill manual_fill = null);

        CQGOrder CreateOrder(eOrderType order_type, CQGInstrument cqg_instrument, CQGAccount cqg_account, Int32 order_quantity, eOrderSide order_side = eOrderSide.osdUndefined, Double limit_price = 0, Double stop_price = 0, String ue_name_part = "");

        CQGOrderActionRequest CreateOrderActionRequest();

        CQGOrder CreateOrderByInstrumentName(eOrderType order_type, String instrument_name, CQGAccount cqg_account, Int32 order_quantity, eOrderSide order_side = eOrderSide.osdUndefined, Double limit_price = 0, Double stop_price = 0, String ue_name_part = "");

        CQGOrderChain CreateOrderChain();

        CQGPointAndFigureBarsRequest CreatePointAndFigureBarsRequest();

        CQGOrder CreateStrategyOrder(eOrderType order_type, CQGStrategyDefinition cqg_definition, CQGAccount cqg_account, CQGAccounts cqg_accounts, Int32 order_quantity, eOrderSide order_side = eOrderSide.osdUndefined, Double limit_price = -2147483647, Double stop_price = -2147483647, String ue_name_part = "");

        CQGOrder CreateStrategyOrderByExpression(eOrderType order_type, String expression_string, CQGAccount cqg_account, CQGAccounts cqg_accounts, Int32 order_quantity, eOrderSide order_side = eOrderSide.osdUndefined, Double limit_price = -2147483647, Double stop_price = -2147483647, String ue_name_part = "");

        CQGSubMinuteBarsRequest CreateSubMinuteBarsRequest();

        CQGTFlowBarsRequest CreateTFlowBarsRequest();

        CQGTicksRequest CreateTicksRequest();

        CQGTimedBarsRequest CreateTimedBarsRequest();

        CQGTradingSystemRequest CreateTradingSystemRequest(String name_or_abbr);

        CQGYieldsRequest CreateYieldsRequest();

        CQGStrategyDefinition DefineStrategy(String request_string_);

        void GWLogoff();

        void GWLogon(String username_, String password_);

        void GWOTPLogon(String username_, String password_, String otpassword_);

        Boolean IsValid(Object value_or_object);

        void LogOn(String username_, String password_);

        void ModifyCompoundOrder(Int32 compound_order_id, String compound_order_guid, CQGOrderChain order_chain);

        void NewInstrument(String symbol_);

        void PlaceCompoundOrder(CQGOrderChain order_chain);

        CQGOrdersQuery QueryOrders(CQGAccount cqg_account, CQGInstrument cqg_instrument = null, eOrderStatusFilter status_filter = eOrderStatusFilter.osfAll, DateTime date_ = default(DateTime), eOrderSide order_side = eOrderSide.osdUndefined);

        void QueryPositionsStatement(Int32 gw_account_id, DateTime date_);

        void QuerySummariesStatement(Int32 gw_account_id, DateTime date_);

        void RegisterAlgorithmicOrder(String guid_, String name_, String abbrv_, String description_, CQGAlgorithmicOrderDefinitions definitions_, Int32 icon_index = 0);

        void RemoveAdvancedStudy(CQGAdvancedStudy cqg_advanced_study);

        void RemoveAllAdvancedStudies();

        void RemoveAllConditions();

        void RemoveAllConstantVolumeBars();

        void RemoveAllCustomStudies();

        void RemoveAllExpressions();

        void RemoveAllInstruments();

        void RemoveAllPointAndFigureBars();

        void RemoveAllSubMinuteBars();

        void RemoveAllTFlowBars();

        void RemoveAllTicks();

        void RemoveAllTimedBars();

        void RemoveAllTradingSystems();

        void RemoveAllYields();

        void RemoveCondition(CQGCondition cqg_condition);

        void RemoveConstantVolumeBars(CQGConstantVolumeBars cqg_constant_volume_bars);

        void RemoveCustomStudy(CQGCustomStudy cqg_custom_study);

        void RemoveExpression(CQGExpression cqg_expression);

        void RemoveInstrument(CQGInstrument cqg_instrument);

        void RemoveInstrumentsGroup(CQGInstrumentsGroup instruments_group);

        void RemovePointAndFigureBars(CQGPointAndFigureBars cqg_point_and_figure_bars);

        void RemoveSubMinuteBars(CQGSubMinuteBars cqg_subminute_bars);

        void RemoveTFlowBars(CQGTFlowBars cqg_tflow_bars);

        void RemoveTicks(CQGTicks cqg_ticks);

        void RemoveTimedBars(CQGTimedBars cqg_timed_bars);

        void RemoveTradingSystem(CQGTradingSystem cqg_trading_system);

        void RemoveYields(CQGYields cqg_yields);

        CQGAdvancedStudy RequestAdvancedStudy(CQGAdvancedStudyRequest cqg_advanced_study_request);

        void RequestAdvancedStudyDefinitions();

        CQGBarsTimestamps RequestBarsTimestamps(CQGTimedBarsRequest cqg_timestamps_request);

        void RequestCommodityInstruments(String commodity_name, eInstrumentType instrument_types, Boolean tradable_only = false);

        CQGCondition RequestCondition(CQGConditionRequest cqg_condition_request);

        void RequestConditionDefinitions();

        CQGConstantVolumeBars RequestConstantVolumeBars(CQGConstantVolumeBarsRequest cqg_constant_volume_bars_request);

        void RequestCustomSessions();

        CQGCustomStudy RequestCustomStudy(CQGCustomStudyRequest cqg_custom_study_request);

        void RequestCustomStudyDefinitions();

        void RequestDataSources();

        void RequestDataSourceSymbols(String data_source_abbreviation);

        CQGExpression RequestExpression(CQGExpressionRequest cqg_expression_request);

        void RequestHistoricalSessions(CQGHistoricalSessionsRequest cqg_historical_sessions_request);

        void RequestInstrumentsGroup(CQGInstrumentsGroupRequest group_request, Boolean trace_group_changes);

        void RequestManualFills(Int32 gw_account_id, eManualFillsDataLevel update_level);

        void RequestManualFillUpdate(CQGManualFillRequest cqg_manual_fill_request);

        CQGPointAndFigureBars RequestPointAndFigureBars(CQGPointAndFigureBarsRequest cqg_point_and_figure_bars_request);

        void RequestQFormulaDefinitions();

        CQGSubMinuteBars RequestSubMinuteBars(CQGSubMinuteBarsRequest cqg_subminute_bars_request);

        CQGTFlowBars RequestTFlowBars(CQGTFlowBarsRequest cqg_tflow_bars_request);

        CQGTicks RequestTicks(CQGTicksRequest cqg_ticks_request);

        CQGTimedBars RequestTimedBars(CQGTimedBarsRequest cqg_timed_bars_request);

        void RequestTradableCommodities(Int32 gw_account_id = 0);

        void RequestTradableExchanges(Int32 gw_account_id = 0);

        CQGTradingSystem RequestTradingSystem(CQGTradingSystemRequest cqg_trading_system_request);

        void RequestTradingSystemDefinitions();

        CQGYields RequestYields(CQGYieldsRequest cqg_yields_request);

        void Shutdown();

        void Startup();

        void SubscribeNewInstrument(CQGInstrumentSubscriptionRequest instrument_request);

        void TerminateCQGIC(Boolean start_again = false);

        void UnregisterAlgorithmicOrder(String guid_);

        #endregion

    }

    public interface ICQGChangedTradeEntries : IEnumerable
    {
        #region Properties
        eTradeChangeCategory ChangeFilter
        {
            get;
        }

        Int32 Count
        {
            get;
        }

        CQGChangedTradeEntry this[Int32 index_]
        {
            get;
        }

        #endregion

        #region Methods
        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGChangedTradeEntry
    {
        #region Properties
        eTradeChangeCategory ChangeCategory
        {
            get;
        }

        CQGTradeEntry TradeEntry
        {
            get;
        }

        #endregion

    }

    public interface ICQGChangedTradeExit
    {
        #region Properties
        eTradeChangeCategory ChangeCategory
        {
            get;
        }

        CQGTradeExit TradeExit
        {
            get;
        }

        #endregion

    }

    public interface ICQGChangedTradeExits : IEnumerable
    {
        #region Properties
        eTradeChangeCategory ChangeFilter
        {
            get;
        }

        Int32 Count
        {
            get;
        }

        CQGChangedTradeExit this[Int32 index_]
        {
            get;
        }

        #endregion

        #region Methods
        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGCommodities : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        Int32 GWAccountID
        {
            get;
        }

        String this[Int32 index_]
        {
            get;
        }

        #endregion

        #region Methods
        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGCommodityInstruments : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        Boolean IsTradableOnly
        {
            get;
        }

        String this[Int32 index_]
        {
            get;
        }

        #endregion

        #region Methods
        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGCondition : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGConditionDefinition Definition
        {
            get;
        }

        DateTime EndTimestamp
        {
            get;
        }

        String Id
        {
            get;
        }

        CQGConditionResult this[Int32 index_]
        {
            get;
        }

        CQGError LastError
        {
            get;
        }

        CQGConditionRequest Request
        {
            get;
        }

        DateTime StartTimestamp
        {
            get;
        }

        eRequestStatus Status
        {
            get;
        }

        Object this[String tag_name]
        {
            get;
            set;
        }

        #endregion

        #region Methods
        Object get_Tag(String tag_name);

        new IEnumerator GetEnumerator();

        Int32 IndexForDate(DateTime date_);

        void set_Tag(String tag_name, Object pVal);

        #endregion

    }

    public interface ICQGConditionDefinition
    {
        #region Properties
        String Name
        {
            get;
        }

        CQGParameterDefinitions ParameterDefinitions
        {
            get;
        }

        #endregion

    }

    public interface ICQGConditionDefinitions : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGConditionDefinition this[Int32 index_]
        {
            get;
        }

        CQGConditionDefinition this[String condition_name]
        {
            get;
        }

        #endregion

        #region Methods
        CQGConditionDefinition get_ItemByName(String condition_name);

        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGConditionRequest
    {
        #region Properties
        String BaseExpression
        {
            get;
            set;
        }

        eTimeSeriesContinuationType Continuation
        {
            get;
            set;
        }

        Int32 DaysBeforeExpiration
        {
            get;
            set;
        }

        CQGConditionDefinition Definition
        {
            get;
        }

        Boolean EqualizeCloses
        {
            get;
            set;
        }

        eHistoricalPeriod HistoricalPeriod
        {
            get;
            set;
        }

        Boolean IncludeEnd
        {
            get;
            set;
        }

        Int32 IntradayPeriod
        {
            get;
            set;
        }

        Object this[Object key_]
        {
            get;
            set;
        }

        Object RangeEnd
        {
            get;
            set;
        }

        Object RangeStart
        {
            get;
            set;
        }

        Int32 RecalcPeriod
        {
            get;
            set;
        }

        eSessionFlag SessionFlags
        {
            get;
            set;
        }

        Object SessionsFilter
        {
            get;
            set;
        }

        eTimeSeriesSubscriptionLevel SubscriptionLevel
        {
            get;
            set;
        }

        Boolean UpdatesEnabled
        {
            get;
            set;
        }

        #endregion

        #region Methods
        Object get_Parameter(Object key_);

        void set_Parameter(Object key_, Object pVal);

        #endregion

    }

    public interface ICQGConditionResult
    {
        #region Properties
        DateTime Timestamp
        {
            get;
        }

        Boolean Value
        {
            get;
        }

        #endregion

    }

    public interface ICQGConditions : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGCondition this[Int32 index_]
        {
            get;
        }

        CQGCondition this[String id_]
        {
            get;
        }

        #endregion

        #region Methods
        CQGCondition get_ItemById(String id_);

        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGConstantVolumeBar
    {
        #region Properties
        Int32 ActualVolume
        {
            get;
        }

        Int32 AskVolume
        {
            get;
        }

        Double Avg
        {
            get;
        }

        Int32 BidVolume
        {
            get;
        }

        Double Close
        {
            get;
        }

        Double High
        {
            get;
        }

        Double HLC3
        {
            get;
        }

        Double Low
        {
            get;
        }

        Double Mid
        {
            get;
        }

        Double Open
        {
            get;
        }

        Double Range
        {
            get;
        }

        Int32 TickVolume
        {
            get;
        }

        DateTime Timestamp
        {
            get;
        }

        Int32 TimestampOffset
        {
            get;
        }

        Double TrueHigh
        {
            get;
        }

        Double TrueLow
        {
            get;
        }

        Double TrueRange
        {
            get;
        }

        #endregion

    }

    public interface ICQGConstantVolumeBars : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        DateTime EndTimestamp
        {
            get;
        }

        String Id
        {
            get;
        }

        CQGConstantVolumeBar this[Int32 index_]
        {
            get;
        }

        CQGError LastError
        {
            get;
        }

        CQGConstantVolumeBarsRequest Request
        {
            get;
        }

        DateTime StartTimestamp
        {
            get;
        }

        eRequestStatus Status
        {
            get;
        }

        Object this[String tag_name]
        {
            get;
            set;
        }

        #endregion

        #region Methods
        Object get_Tag(String tag_name);

        new IEnumerator GetEnumerator();

        void set_Tag(String tag_name, Object pVal);

        #endregion

    }

    public interface ICQGConstantVolumeBarsCollection : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGConstantVolumeBars this[Int32 index_]
        {
            get;
        }

        CQGConstantVolumeBars this[String id_]
        {
            get;
        }

        #endregion

        #region Methods
        CQGConstantVolumeBars get_ItemById(String id_);

        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGConstantVolumeBarsRequest
    {
        #region Properties
        eTimeSeriesContinuationType Continuation
        {
            get;
            set;
        }

        Int32 DaysBeforeExpiration
        {
            get;
            set;
        }

        Boolean EqualizeCloses
        {
            get;
            set;
        }

        Boolean IncludeEnd
        {
            get;
            set;
        }

        Boolean IncludeFlatTicks
        {
            get;
            set;
        }

        Object RangeEnd
        {
            get;
            set;
        }

        Object RangeStart
        {
            get;
            set;
        }

        Int32 RecalcPeriod
        {
            get;
            set;
        }

        eSessionFlag SessionFlags
        {
            get;
            set;
        }

        Object SessionsFilter
        {
            get;
            set;
        }

        eTimeSeriesSubscriptionLevel SubscriptionLevel
        {
            get;
            set;
        }

        String Symbol
        {
            get;
            set;
        }

        Boolean UpdatesEnabled
        {
            get;
            set;
        }

        Int32 VolumeLevel
        {
            get;
            set;
        }

        eCvbVolumeType VolumeType
        {
            get;
            set;
        }

        #endregion

    }

    public interface ICQGCurrencyRate
    {
        #region Properties
        String BaseCurrencyName
        {
            get;
        }

        CQGCEL CEL
        {
            get;
        }

        String CurrencyName
        {
            get;
        }

        Int32 FcmID
        {
            get;
        }

        Double Rate
        {
            get;
        }

        DateTime ServerTimestamp
        {
            get;
        }

        DateTime Timestamp
        {
            get;
        }

        #endregion

    }

    public interface ICQGCurrencyRates : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGCurrencyRate this[Int32 fcm_id, String currency_, String base_currency = ""]
        {
            get;
        }

        #endregion

        #region Methods
        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGCurveDefinition
    {
        #region Properties
        String Name
        {
            get;
        }

        #endregion

    }

    public interface ICQGCurveDefinitions : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGCurveDefinition this[Int32 index_]
        {
            get;
        }

        CQGCurveDefinition this[String curve_name]
        {
            get;
        }

        #endregion

        #region Methods
        CQGCurveDefinition get_ItemByName(String curve_name);

        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGCurveHeaders : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        String this[Int32 index_]
        {
            get;
        }

        #endregion

        #region Methods
        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGCurves : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        Double this[Object key_]
        {
            get;
        }

        DateTime Timestamp
        {
            get;
        }

        Int32 TimestampOffset
        {
            get;
        }

        #endregion

        #region Methods
        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGCustomStudies : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGCustomStudy this[Int32 index_]
        {
            get;
        }

        CQGCustomStudy this[String id_]
        {
            get;
        }

        #endregion

        #region Methods
        CQGCustomStudy get_ItemById(String id_);

        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGCustomStudy : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGCurveHeaders CurveHeaders
        {
            get;
        }

        CQGCustomStudyDefinition Definition
        {
            get;
        }

        DateTime EndTimestamp
        {
            get;
        }

        String Id
        {
            get;
        }

        CQGCurves this[Int32 index_]
        {
            get;
        }

        CQGError LastError
        {
            get;
        }

        CQGCustomStudyRequest Request
        {
            get;
        }

        DateTime StartTimestamp
        {
            get;
        }

        eRequestStatus Status
        {
            get;
        }

        Object this[String tag_name]
        {
            get;
            set;
        }

        #endregion

        #region Methods
        Object get_Tag(String tag_name);

        new IEnumerator GetEnumerator();

        Int32 IndexForDate(DateTime date_);

        void set_Tag(String tag_name, Object pVal);

        #endregion

    }

    public interface ICQGCustomStudyDefinition
    {
        #region Properties
        String Abbreviation
        {
            get;
        }

        CQGCurveDefinitions CurveDefinitions
        {
            get;
        }

        String Name
        {
            get;
        }

        CQGParameterDefinitions ParameterDefinitions
        {
            get;
        }

        #endregion

    }

    public interface ICQGCustomStudyDefinitions : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGCustomStudyDefinition this[Int32 index_]
        {
            get;
        }

        CQGCustomStudyDefinition this[String custom_study_abbreviation]
        {
            get;
        }

        #endregion

        #region Methods
        CQGCustomStudyDefinition get_ItemByAbbreviation(String custom_study_abbreviation);

        CQGCustomStudyDefinition get_ItemByName(String custom_study_name);

        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGCustomStudyRequest
    {
        #region Properties
        String BaseExpression
        {
            get;
            set;
        }

        eTimeSeriesContinuationType Continuation
        {
            get;
            set;
        }

        Int32 DaysBeforeExpiration
        {
            get;
            set;
        }

        CQGCustomStudyDefinition Definition
        {
            get;
        }

        Boolean EqualizeCloses
        {
            get;
            set;
        }

        eHistoricalPeriod HistoricalPeriod
        {
            get;
            set;
        }

        Boolean IncludeEnd
        {
            get;
            set;
        }

        Int32 IntradayPeriod
        {
            get;
            set;
        }

        Object this[Object key_]
        {
            get;
            set;
        }

        Object RangeEnd
        {
            get;
            set;
        }

        Object RangeStart
        {
            get;
            set;
        }

        Int32 RecalcPeriod
        {
            get;
            set;
        }

        eSessionFlag SessionFlags
        {
            get;
            set;
        }

        Object SessionsFilter
        {
            get;
            set;
        }

        eTimeSeriesSubscriptionLevel SubscriptionLevel
        {
            get;
            set;
        }

        Boolean UpdatesEnabled
        {
            get;
            set;
        }

        #endregion

        #region Methods
        Object get_Parameter(Object key_);

        void IncludeCurve(Object curve_key);

        Boolean IsCurveIncluded(Object curve_key);

        void set_Parameter(Object key_, Object pVal);

        #endregion

    }

    public interface ICQGDataSource
    {
        #region Properties
        String Abbreviation
        {
            get;
        }

        String Name
        {
            get;
        }

        eDataSourceStatus Status
        {
            get;
        }

        eSymbolType SymbolTypes
        {
            get;
        }

        #endregion

    }

    public interface ICQGDataSources : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGDataSource this[Int32 index_]
        {
            get;
        }

        CQGDataSource this[String data_source_abbreviation]
        {
            get;
        }

        #endregion

        #region Methods
        CQGDataSource get_ItemByAbbreviation(String data_source_abbreviation);

        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGDataSourceSymbol
    {
        #region Properties
        String Abbreviation
        {
            get;
        }

        String Description
        {
            get;
        }

        eSymbolType Type
        {
            get;
        }

        #endregion

    }

    public interface ICQGDataSourceSymbols : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        String DataSourceAbbreviation
        {
            get;
        }

        CQGDataSourceSymbol this[Int32 index_]
        {
            get;
        }

        #endregion

        #region Methods
        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGDirectEventsAccessor
    {
    }

    public interface ICQGDOMQuotes : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGQuote this[Int32 index_]
        {
            get;
        }

        CQGQuote this[Double price_, Boolean round_to_better = true]
        {
            get;
        }

        #endregion

        #region Methods
        CQGQuote get_ItemByPrice(Double price_, Boolean round_to_better = true);

        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGEnvironment
    {
        #region Properties
        CQGCEL CEL
        {
            get;
        }

        String CELVersion
        {
            get;
        }

        Int32 CQGSerialNumber
        {
            get;
        }

        String CQGVersion
        {
            get;
        }

        eConnectionStatus DataConnectionStatus
        {
            get;
        }

        eConnectionStatus GWConnectionStatus
        {
            get;
        }

        String GWLogonName
        {
            get;
        }

        CQGError LastError
        {
            get;
        }

        DateTime LineTime
        {
            get;
        }

        DateTime LocalTime
        {
            get;
        }

        Int32 MessagesPending
        {
            get;
        }

        Int32 OrdersPending
        {
            get;
        }

        CQGRemoteOpenAPISession RemoteOpenAPISession
        {
            get;
        }

        #endregion

    }

    public interface ICQGError
    {
        #region Properties
        Int32 Code
        {
            get;
        }

        String Description
        {
            get;
        }

        Object Owner
        {
            get;
        }

        #endregion

    }

    public interface ICQGExchanges : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        Int32 GWAccountID
        {
            get;
        }

        String this[Int32 index_]
        {
            get;
        }

        #endregion

        #region Methods
        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGExecutionPattern
    {
        #region Properties
        CQGExecutionPatternParameters Parameters
        {
            get;
        }

        String PatternString
        {
            get;
        }

        #endregion

    }

    public interface ICQGExecutionPatternParameter
    {
        #region Properties
        String Name
        {
            get;
        }

        CQGExecutionPatternParameters Parameters
        {
            get;
        }

        eExecutionPatternParameterType Type
        {
            get;
        }

        String Value
        {
            get;
            set;
        }

        #endregion

    }

    public interface ICQGExecutionPatternParameters : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGExecutionPatternParameter this[Object index_]
        {
            get;
        }

        #endregion

        #region Methods
        CQGExecutionPatternParameter Add(String name_, eExecutionPatternParameterType type_, String value_ = "");

        new IEnumerator GetEnumerator();

        void Remove(Object index_);

        #endregion

    }

    public interface ICQGExpression : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        DateTime EndTimestamp
        {
            get;
        }

        String Id
        {
            get;
        }

        CQGExpressionOutputs this[Int32 index_]
        {
            get;
        }

        CQGError LastError
        {
            get;
        }

        CQGExpressionOutputHeaders OutputHeaders
        {
            get;
        }

        CQGExpressionRequest Request
        {
            get;
        }

        DateTime StartTimestamp
        {
            get;
        }

        eRequestStatus Status
        {
            get;
        }

        Object this[String tag_name]
        {
            get;
            set;
        }

        #endregion

        #region Methods
        Object get_Tag(String tag_name);

        new IEnumerator GetEnumerator();

        Int32 IndexForDate(DateTime date_);

        void set_Tag(String tag_name, Object pVal);

        #endregion

    }

    public interface ICQGExpressionOutputHeaders : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        String this[Int32 index_]
        {
            get;
        }

        #endregion

        #region Methods
        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGExpressionOutputs : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        Double this[Object key_]
        {
            get;
        }

        DateTime Timestamp
        {
            get;
        }

        Int32 TimestampOffset
        {
            get;
        }

        #endregion

        #region Methods
        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGExpressionRequest
    {
        #region Properties
        eTimeSeriesContinuationType Continuation
        {
            get;
            set;
        }

        Int32 DaysBeforeExpiration
        {
            get;
            set;
        }

        Boolean EqualizeCloses
        {
            get;
            set;
        }

        eHistoricalPeriod HistoricalPeriod
        {
            get;
            set;
        }

        Boolean IncludeEnd
        {
            get;
            set;
        }

        Int32 IntradayPeriod
        {
            get;
            set;
        }

        Object RangeEnd
        {
            get;
            set;
        }

        Object RangeStart
        {
            get;
            set;
        }

        Int32 RecalcPeriod
        {
            get;
            set;
        }

        eSessionFlag SessionFlags
        {
            get;
            set;
        }

        Object SessionsFilter
        {
            get;
            set;
        }

        String this[Int32 index_]
        {
            get;
        }

        Int32 SubExpressionCount
        {
            get;
        }

        eTimeSeriesSubscriptionLevel SubscriptionLevel
        {
            get;
            set;
        }

        Boolean UpdatesEnabled
        {
            get;
            set;
        }

        #endregion

        #region Methods
        void AddSubExpression(String sub_expression, String alias_ = "");

        String get_SubExpression(Int32 index_);

        String get_SubExpressionAlias(Int32 index_);

        #endregion

    }

    public interface ICQGExpressions : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGExpression this[Int32 index_]
        {
            get;
        }

        CQGExpression this[String id_]
        {
            get;
        }

        #endregion

        #region Methods
        CQGExpression get_ItemById(String id_);

        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGFill
    {
        #region Properties
        Int32 this[Int32 leg_]
        {
            get;
        }

        String Id
        {
            get;
        }

        Int32 LegCount
        {
            get;
        }

        CQGOrder Order
        {
            get;
        }

        String RefFillId
        {
            get;
        }

        DateTime ServerTimestamp
        {
            get;
        }

        eFillStatus Status
        {
            get;
        }

        DateTime Timestamp
        {
            get;
        }

        #endregion

        #region Methods
        Boolean get_Aggressive(Int32 leg_ = 0);

        String get_Currency(Int32 leg_ = 0);

        String get_DisplayPrice(Int32 leg_ = 0);

        DateTime get_ExchangeTradeDate(Int32 leg_ = 0);

        String get_GWTradeId(Int32 leg_ = 0);

        CQGGWTrades get_GWTrades(Int32 leg_ = 0);

        Int32 get_GWTradesCount(Int32 leg_);

        String get_InstrumentName(Int32 leg_ = 0);

        Double get_Price(Int32 leg_ = 0);

        Int32 get_Quantity(Int32 leg_ = 0);

        eOrderSide get_Side(Int32 leg_ = 0);

        DateTime get_StatementDate(Int32 leg_ = 0);

        #endregion

    }

    public interface ICQGFills : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGFill this[String fill_id]
        {
            get;
        }

        CQGFill this[Int32 index_]
        {
            get;
        }

        #endregion

        #region Methods
        CQGFill get_ItemByIndex(Int32 index_);

        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGGWTrade
    {
        #region Properties
        Boolean Aggressive
        {
            get;
        }

        String Currency
        {
            get;
        }

        String DisplayPrice
        {
            get;
        }

        DateTime ExchangeTradeDate
        {
            get;
        }

        CQGFill Fill
        {
            get;
        }

        String Id
        {
            get;
        }

        String InstrumentName
        {
            get;
        }

        Int32 Leg
        {
            get;
        }

        Double Price
        {
            get;
        }

        Int32 Quantity
        {
            get;
        }

        eOrderSide Side
        {
            get;
        }

        DateTime StatementDate
        {
            get;
        }

        #endregion

    }

    public interface ICQGGWTrades : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGGWTrade this[String trade_gw_id]
        {
            get;
        }

        CQGGWTrade this[Int32 index_]
        {
            get;
        }

        #endregion

        #region Methods
        CQGGWTrade get_ItemByIndex(Int32 index_);

        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGHistoricalSessionsRequest
    {
        #region Properties
        DateTime RangeEnd
        {
            get;
            set;
        }

        DateTime RangeStart
        {
            get;
            set;
        }

        String Symbol
        {
            get;
            set;
        }

        eHistoricalSessionsRequestType Type
        {
            get;
            set;
        }

        #endregion

    }

    public interface ICQGHoliday
    {
        #region Properties
        DateTime HolidayDate
        {
            get;
        }

        Boolean IsDaily
        {
            get;
        }

        eSessionWeekDays SessionMask
        {
            get;
        }

        #endregion

    }

    public interface ICQGHolidays : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGHoliday this[Int32 index_]
        {
            get;
        }

        CQGSessions Sessions
        {
            get;
        }

        #endregion

        #region Methods
        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGInstrument
    {
        #region Properties
        CQGQuote Ask
        {
            get;
        }

        eDOMandBBAType BBAType
        {
            get;
            set;
        }

        CQGQuote Bid
        {
            get;
        }

        CQGCEL CEL
        {
            get;
        }

        String Commodity
        {
            get;
        }

        String Country
        {
            get;
        }

        String Currency
        {
            get;
        }

        eDataSubscriptionLevel DataSubscriptionLevel
        {
            get;
            set;
        }

        String Description
        {
            get;
        }

        CQGDOMQuotes DOMAsks
        {
            get;
        }

        CQGDOMQuotes DOMBids
        {
            get;
        }

        Int32 DOMBookLimit
        {
            get;
            set;
        }

        Boolean DOMStatus
        {
            get;
            set;
        }

        Int32 DTE
        {
            get;
        }

        String ExchangeAbbreviation
        {
            get;
        }

        Int32 ExchangeID
        {
            get;
        }

        DateTime ExpirationDate
        {
            get;
        }

        String FullName
        {
            get;
        }

        Double InitialMargin
        {
            get;
        }

        Int32 InstrumentID
        {
            get;
        }

        eInstrumentType InstrumentType
        {
            get;
        }

        Boolean IsDownTick
        {
            get;
        }

        Boolean IsFastMarket
        {
            get;
        }

        Boolean IsUpTick
        {
            get;
        }

        Double MaintenanceMargin
        {
            get;
        }

        Int32 Month
        {
            get;
        }

        String MonthChar
        {
            get;
        }

        Double NetChange
        {
            get;
        }

        String PreferredSessionsName
        {
            get;
        }

        CQGInstrumentProperties Properties
        {
            get;
        }

        ePropertySubscriptionLevel PropertyLevel
        {
            get;
        }

        eQuoteSubscriptionLevel QuoteLevel
        {
            get;
        }

        CQGQuotes Quotes
        {
            get;
        }

        Int16 Scale
        {
            get;
        }

        DateTime ServerTimestamp
        {
            get;
        }

        Int32 SessionMask
        {
            get;
        }

        Int32 SessionNumber
        {
            get;
        }

        CQGSessions Sessions
        {
            get;
        }

        Int32 Strike
        {
            get;
        }

        Object this[String tagName]
        {
            get;
            set;
        }

        Double TickSize
        {
            get;
        }

        Int32 TickSizeFractionDenominator
        {
            get;
        }

        Int32 TickSizeFractionNumerator
        {
            get;
        }

        Double TickValue
        {
            get;
        }

        DateTime Timestamp
        {
            get;
        }

        Double TodayCTotalVolume
        {
            get;
        }

        CQGQuote Trade
        {
            get;
        }

        CQGInstrument UnderlyingInstrument
        {
            get;
        }

        String UnderlyingInstrumentName
        {
            get;
        }

        Double YCOI
        {
            get;
        }

        Int32 Year
        {
            get;
        }

        String YearString
        {
            get;
        }

        Double YesterdayCTotalVolume
        {
            get;
        }

        #endregion

        #region Methods
        Double FromDisplayPrice(String display_price);

        Object get_Tag(String tagName);

        Double GetNearestTradeablePrice(Double price_);

        Double GetTickSizeFor(Double Price);

        Double GetTickValueFor(Double Price);

        void set_Tag(String tagName, Object pVal);

        String ToDisplayPrice(Double correct_price);

        #endregion

    }

    public interface ICQGInstrumentProperties : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGInstrumentProperty this[eInstrumentProperty instrument_property]
        {
            get;
        }

        #endregion

        #region Methods
        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGInstrumentProperty
    {
        #region Properties
        CQGInstrument Instrument
        {
            get;
        }

        String Name
        {
            get;
        }

        DateTime ServerTimestamp
        {
            get;
        }

        DateTime Timestamp
        {
            get;
        }

        eInstrumentProperty Type
        {
            get;
        }

        Object Value
        {
            get;
        }

        #endregion

    }

    public interface ICQGInstruments : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGInstrument this[Object index_]
        {
            get;
        }

        #endregion

        #region Methods
        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGInstrumentsGroup
    {
        #region Properties
        String Id
        {
            get;
        }

        CQGInstruments Instruments
        {
            get;
        }

        CQGInstrumentsGroupRequest Request
        {
            get;
        }

        #endregion

    }

    public interface ICQGInstrumentsGroupRequest
    {
        #region Properties
        String Commodity
        {
            get;
            set;
        }

        eInstrumentType InstrumentTypes
        {
            get;
            set;
        }

        Object RangeEnd
        {
            get;
            set;
        }

        Object RangeStart
        {
            get;
            set;
        }

        eGroupSubscriptionLevel SubscriptionLevel
        {
            get;
            set;
        }

        #endregion

    }

    public interface ICQGInstrumentsGroups : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGInstrumentsGroup this[Object index_]
        {
            get;
        }

        #endregion

        #region Methods
        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGInstrumentSubscriptionRequest
    {
        #region Properties
        eDOMandBBAType DOMBBAType
        {
            get;
            set;
        }

        Boolean DOMStatus
        {
            get;
            set;
        }

        ePropertySubscriptionLevel PropertyLevel
        {
            get;
            set;
        }

        eQuoteSubscriptionLevel QuoteLevel
        {
            get;
            set;
        }

        String Symbol
        {
            get;
            set;
        }

        #endregion

    }

    public interface ICQGIntegerCollection : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        Int32 this[Int32 index_]
        {
            get;
        }

        #endregion

        #region Methods
        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGLogger
    {
        #region Properties
        CQGCEL CEL
        {
            get;
        }

        #endregion

        #region Methods
        void Log(String content_, eLogSeverity severity_ = eLogSeverity.lsInfo);

        #endregion

    }

    public interface ICQGManualFill
    {
        #region Properties
        String DisplayPrice
        {
            get;
        }

        Int32 GWAccountID
        {
            get;
        }

        String InstrumentName
        {
            get;
        }

        String Note
        {
            get;
        }

        Double Price
        {
            get;
        }

        Int32 Quantity
        {
            get;
        }

        eOrderSide Side
        {
            get;
        }

        DateTime StatementDate
        {
            get;
        }

        Int32 TradeId
        {
            get;
        }

        DateTime TradeTimestamp
        {
            get;
        }

        #endregion

    }

    public interface ICQGManualFillRequest
    {
        #region Properties
        Int32 GWAccountID
        {
            get;
            set;
        }

        String InstrumentName
        {
            get;
            set;
        }

        String Note
        {
            get;
            set;
        }

        Double Price
        {
            get;
            set;
        }

        Int32 Quantity
        {
            get;
            set;
        }

        eOrderSide Side
        {
            get;
            set;
        }

        DateTime StatementDate
        {
            get;
            set;
        }

        Int32 TradeId
        {
            get;
            set;
        }

        DateTime TradeTimestamp
        {
            get;
            set;
        }

        #endregion

    }

    public interface ICQGManualFills : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        eManualFillsDataLevel DataLevel
        {
            get;
        }

        Int32 GWAccountID
        {
            get;
        }

        CQGManualFill this[Int32 trade_id]
        {
            get;
        }

        #endregion

        #region Methods
        CQGManualFill get_ItemByIndex(Int32 index_);

        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGManualFillsCollection : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGManualFills this[Int32 account_id]
        {
            get;
        }

        #endregion

        #region Methods
        CQGManualFills get_ItemByIndex(Int32 index_);

        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGModifiedProperties : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGModifiedProperty this[eOrderProperty property_type]
        {
            get;
        }

        CQGModifiedProperty this[Int32 index_]
        {
            get;
        }

        #endregion

        #region Methods
        CQGModifiedProperty get_ItemByIndex(Int32 index_);

        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGModifiedProperty
    {
        #region Properties
        String Description
        {
            get;
        }

        String Name
        {
            get;
        }

        Object NewValue
        {
            get;
        }

        Object PreviousValue
        {
            get;
        }

        eOrderProperty Type
        {
            get;
        }

        #endregion

    }

    public interface ICQGOrder
    {
        #region Properties
        CQGAccount Account
        {
            get;
            set;
        }

        UInt32 AlgorithmID
        {
            get;
            set;
        }

        String AlgorithmStringID
        {
            get;
            set;
        }

        Boolean CanBeCanceled
        {
            get;
        }

        Boolean CanBeModified
        {
            get;
        }

        Boolean CanBeReplaced
        {
            get;
        }

        eOrderCancelationType CancelationInstruction
        {
            get;
            set;
        }

        String Description
        {
            get;
            set;
        }

        eOrderDuration DurationType
        {
            get;
            set;
        }

        Int32 FilledQuantity
        {
            get;
        }

        CQGFills Fills
        {
            get;
        }

        String GUID
        {
            get;
        }

        String GWOrderID
        {
            get;
        }

        eOrderStatus GWStatus
        {
            get;
        }

        CQGInstrument Instrument
        {
            get;
            set;
        }

        String InstrumentName
        {
            get;
        }

        Boolean IsExternal
        {
            get;
        }

        Boolean IsFinal
        {
            get;
        }

        CQGError LastError
        {
            get;
        }

        eOrderEvent LastEvent
        {
            get;
        }

        Double LimitPrice
        {
            get;
            set;
        }

        Boolean OrderCheckMark
        {
            get;
            set;
        }

        String OriginalOrderID
        {
            get;
        }

        DateTime PlaceTime
        {
            get;
        }

        CQGOrderProperties Properties
        {
            get;
        }

        Int32 Quantity
        {
            get;
            set;
        }

        Int32 RemainingQuantity
        {
            get;
        }

        DateTime ServerTimestamp
        {
            get;
        }

        eOrderSide Side
        {
            get;
            set;
        }

        eOrderLocalState State
        {
            get;
        }

        Double StopPrice
        {
            get;
            set;
        }

        Object this[String tag_name]
        {
            get;
            set;
        }

        DateTime TimeActiveAt
        {
            get;
        }

        DateTime Timestamp
        {
            get;
        }

        CQGTransactions Transactions
        {
            get;
        }

        eOrderType Type
        {
            get;
        }

        String UEName
        {
            get;
        }

        #endregion

        #region Methods
        void Activate();

        void Cancel();

        Object get_Tag(String tag_name);

        void Modify(CQGOrderModify cqg_order_modify);

        void Place();

        CQGOrderModify PrepareModify();

        void SendCareOrderAck();

        void set_Tag(String tag_name, Object pVal);

        #endregion

    }

    public interface ICQGOrderActionRequest
    {
        #region Properties
        CQGAccount Account
        {
            get;
            set;
        }

        UInt32 AlgorithmID
        {
            get;
            set;
        }

        String AlgorithmStringID
        {
            get;
            set;
        }

        Boolean FromAllTraders
        {
            get;
            set;
        }

        CQGInstrument Instrument
        {
            get;
            set;
        }

        eOrderSide OrderSide
        {
            get;
            set;
        }

        Boolean Parked
        {
            get;
            set;
        }

        #endregion

    }

    public interface ICQGOrderChain
    {
        #region Properties
        UInt32 AlgorithmID
        {
            get;
            set;
        }

        String AlgorithmStringID
        {
            get;
            set;
        }

        Int32 GWAccountID
        {
            get;
        }

        #endregion

        #region Methods
        void AddOrder(CQGOrder cqg_order);

        #endregion

    }

    public interface ICQGOrderModify
    {
        #region Properties
        CQGOrderProperties Properties
        {
            get;
        }

        #endregion

    }

    public interface ICQGOrderProperties : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGOrderProperty this[eOrderProperty order_property]
        {
            get;
        }

        #endregion

        #region Methods
        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGOrderProperty
    {
        #region Properties
        Boolean CanBeSet
        {
            get;
        }

        String Description
        {
            get;
        }

        String Name
        {
            get;
        }

        CQGOrder Order
        {
            get;
        }

        DateTime Timestamp
        {
            get;
        }

        eOrderProperty Type
        {
            get;
        }

        Object Value
        {
            get;
            set;
        }

        #endregion

    }

    public interface ICQGOrders : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGOrder this[String order_id]
        {
            get;
        }

        #endregion

        #region Methods
        void AddToLiveOrders();

        CQGOrder get_ItemByGuid(String order_guid);

        new IEnumerator GetEnumerator();

        CQGOrders SelectByInstrumentName(String instrument_name);

        CQGOrders SelectByOrderStatus(eOrderStatus order_status);

        CQGOrders SelectByOrderType(eOrderType order_type);

        CQGOrders SelectByProperty(eOrderProperty property_type, Object property_value);

        CQGOrders SelectBySide(eOrderSide order_side);

        CQGOrders SelectByTag(String tag_name, Object tag_value = null);

        #endregion

    }

    public interface ICQGOrdersQuery
    {
        #region Properties
        CQGAccount Account
        {
            get;
        }

        CQGCEL CEL
        {
            get;
        }

        CQGError FinalError
        {
            get;
        }

        CQGOrders LastChunk
        {
            get;
        }

        CQGOrders Orders
        {
            get;
        }

        Int32 QueryID
        {
            get;
        }

        DateTime ServerTimestamp
        {
            get;
        }

        eRequestStatus Status
        {
            get;
        }

        DateTime Timestamp
        {
            get;
        }

        #endregion

        #region Methods
        void Cancel();

        #endregion

    }

    public interface ICQGOrderStatistics
    {
        #region Properties
        Object this[String i_GUID]
        {
            get;
        }

        Boolean Switch
        {
            set;
        }

        #endregion

        #region Methods
        Object get_StatisticsOnReceive(String i_GUID);

        Object get_StatisticsOnSend(String i_GUID);

        #endregion

    }

    public interface ICQGParameterDefinition
    {
        #region Properties
        CQGStringCollection AvailableValues
        {
            get;
        }

        String Comment
        {
            get;
        }

        Object DefaultValue
        {
            get;
        }

        String Name
        {
            get;
        }

        eUserFormulaParameterType Type
        {
            get;
        }

        #endregion

    }

    public interface ICQGParameterDefinitions : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGParameterDefinition this[Int32 index_]
        {
            get;
        }

        CQGParameterDefinition this[String parameter_name]
        {
            get;
        }

        #endregion

        #region Methods
        CQGParameterDefinition get_ItemByName(String parameter_name);

        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGPointAndFigureBar
    {
        #region Properties
        Double High
        {
            get;
        }

        Double Low
        {
            get;
        }

        Double Mid
        {
            get;
        }

        Double PFHigh
        {
            get;
        }

        Double PFLow
        {
            get;
        }

        DateTime Timestamp
        {
            get;
        }

        Int32 TimestampOffset
        {
            get;
        }

        Boolean Up
        {
            get;
        }

        #endregion

    }

    public interface ICQGPointAndFigureBars : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        DateTime EndTimestamp
        {
            get;
        }

        String Id
        {
            get;
        }

        CQGPointAndFigureBar this[Int32 index_]
        {
            get;
        }

        CQGError LastError
        {
            get;
        }

        CQGPointAndFigureBarsRequest Request
        {
            get;
        }

        DateTime StartTimestamp
        {
            get;
        }

        eRequestStatus Status
        {
            get;
        }

        Object this[String tag_name]
        {
            get;
            set;
        }

        #endregion

        #region Methods
        Object get_Tag(String tag_name);

        new IEnumerator GetEnumerator();

        void set_Tag(String tag_name, Object pVal);

        #endregion

    }

    public interface ICQGPointAndFigureBarsCollection : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGPointAndFigureBars this[Int32 index_]
        {
            get;
        }

        CQGPointAndFigureBars this[String id_]
        {
            get;
        }

        #endregion

        #region Methods
        CQGPointAndFigureBars get_ItemById(String id_);

        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGPointAndFigureBarsRequest
    {
        #region Properties
        Int32 BoxSize
        {
            get;
            set;
        }

        ePfBoxUnits BoxUnits
        {
            get;
            set;
        }

        eTimeSeriesContinuationType Continuation
        {
            get;
            set;
        }

        ePfDataSource DataSource
        {
            get;
            set;
        }

        Int32 DaysBeforeExpiration
        {
            get;
            set;
        }

        Boolean EqualizeCloses
        {
            get;
            set;
        }

        Boolean IncludeEnd
        {
            get;
            set;
        }

        Object RangeEnd
        {
            get;
            set;
        }

        Object RangeStart
        {
            get;
            set;
        }

        Int32 RecalcPeriod
        {
            get;
            set;
        }

        Int32 Reversal
        {
            get;
            set;
        }

        eSessionFlag SessionFlags
        {
            get;
            set;
        }

        Object SessionsFilter
        {
            get;
            set;
        }

        eTimeSeriesSubscriptionLevel SubscriptionLevel
        {
            get;
            set;
        }

        String Symbol
        {
            get;
            set;
        }

        Boolean UpdatesEnabled
        {
            get;
            set;
        }

        #endregion

    }

    public interface ICQGPosition
    {
        #region Properties
        CQGAccount Account
        {
            get;
        }

        Double AveragePrice
        {
            get;
        }

        CQGInstrument Instrument
        {
            get;
        }

        String InstrumentName
        {
            get;
        }

        Boolean ManualFillsInvolved
        {
            get;
        }

        CQGTrades MatchedTrades
        {
            get;
        }

        Double MVO
        {
            get;
        }

        CQGTrades OpenTrades
        {
            get;
        }

        Double OTE
        {
            get;
        }

        Double ProfitLoss
        {
            get;
        }

        Int32 Quantity
        {
            get;
        }

        DateTime ServerTimestamp
        {
            get;
        }

        eOrderSide Side
        {
            get;
        }

        DateTime Timestamp
        {
            get;
        }

        Double UPL
        {
            get;
        }

        #endregion

    }

    public interface ICQGPositions : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGPosition this[String instrument_name]
        {
            get;
        }

        CQGPosition this[Int32 index_]
        {
            get;
        }

        #endregion

        #region Methods
        CQGPosition get_ItemByIndex(Int32 index_);

        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGPositionsStatement
    {
        #region Properties
        Int32 GWAccountID
        {
            get;
        }

        CQGPositions Positions
        {
            get;
        }

        DateTime StatementDate
        {
            get;
        }

        #endregion

    }

    public interface ICQGQFormulaDefinition
    {
        #region Properties
        String Expression
        {
            get;
        }

        String Name
        {
            get;
        }

        Int32 Number
        {
            get;
        }

        #endregion

    }

    public interface ICQGQFormulaDefinitions : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGQFormulaDefinition this[Int32 index_]
        {
            get;
        }

        CQGQFormulaDefinition this[String qformula_name]
        {
            get;
        }

        #endregion

        #region Methods
        CQGQFormulaDefinition get_ItemByName(String qformula_name);

        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGQuote
    {
        #region Properties
        Boolean HasVolume
        {
            get;
        }

        CQGInstrument Instrument
        {
            get;
        }

        Boolean IsValid
        {
            get;
        }

        String Name
        {
            get;
        }

        Double Price
        {
            get;
        }

        DateTime ServerTimestamp
        {
            get;
        }

        DateTime Timestamp
        {
            get;
        }

        eQuoteType Type
        {
            get;
        }

        Int32 Volume
        {
            get;
        }

        #endregion

    }

    public interface ICQGQuotes : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGQuote this[eQuoteType quote_type]
        {
            get;
        }

        #endregion

        #region Methods
        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGRemoteOpenAPISession
    {
        #region Properties
        String LogonName
        {
            get;
        }

        Int32 ROMNumber
        {
            get;
        }

        String ServerAddress
        {
            get;
        }

        #endregion

    }

    public interface ICQGSession
    {
        #region Properties
        DateTime ActivationDate
        {
            get;
        }

        SByte DayCloseOffset
        {
            get;
        }

        SByte DayStartOffset
        {
            get;
        }

        Boolean DayStartsYesterday
        {
            get;
        }

        DateTime EndTime
        {
            get;
        }

        CQGInstrument Instrument
        {
            get;
        }

        String Name
        {
            get;
        }

        Int16 Number
        {
            get;
        }

        Boolean PrimaryFlag
        {
            get;
        }

        DateTime StartTime
        {
            get;
        }

        eSymbolSessionType Type
        {
            get;
        }

        DateTime ValidEndTime
        {
            get;
        }

        DateTime ValidStartTime
        {
            get;
        }

        eSessionWeekDays WorkingWeekDays
        {
            get;
        }

        #endregion

        #region Methods
        Boolean IsTimeInSession(DateTime date_time, Boolean use_session_valid_times = false);

        #endregion

    }

    public interface ICQGSessions : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        DateTime DescriptionEnd
        {
            get;
        }

        Int32 DescriptionNumber
        {
            get;
        }

        DateTime DescriptionStart
        {
            get;
        }

        CQGHolidays Holidays
        {
            get;
        }

        CQGSession this[Object index_]
        {
            get;
        }

        String Name
        {
            get;
        }

        eSymbolSessionType Type
        {
            get;
        }

        #endregion

        #region Methods
        new IEnumerator GetEnumerator();

        Boolean IsTimeInSession(DateTime date_time, Boolean use_session_valid_times = false);

        #endregion

    }

    public interface ICQGSessionsCollection : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGSessions this[Object index_]
        {
            get;
        }

        #endregion

        #region Methods
        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGStrategyDefinition
    {
        #region Properties
        String ClientId
        {
            get;
        }

        String Id
        {
            get;
        }

        CQGError LastError
        {
            get;
        }

        String RequestString
        {
            get;
        }

        eStrategyRequestStatus Status
        {
            get;
        }

        String Symbol
        {
            get;
        }

        #endregion

    }

    public interface ICQGStrategyDefinitions : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGStrategyDefinition this[String id_]
        {
            get;
        }

        CQGStrategyDefinition this[Int32 index_]
        {
            get;
        }

        #endregion

        #region Methods
        CQGStrategyDefinition get_ItemByIndex(Int32 index_);

        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGStrategyLegFill
    {
        #region Properties
        String ExecutionId
        {
            get;
        }

        CQGOrder Order
        {
            get;
        }

        String OriginalOrderID
        {
            get;
        }

        Int32 Quantity
        {
            get;
        }

        #endregion

    }

    public interface ICQGStrategyLegFills
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGStrategyLegFill this[Int32 index_]
        {
            get;
        }

        #endregion

        #region Methods
        CQGStrategyLegFill get_ItemByIndex(Int32 index_);

        #endregion

    }

    public interface ICQGStringCollection : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        String this[Int32 index_]
        {
            get;
        }

        #endregion

        #region Methods
        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGSubMinuteBar
    {
        #region Properties
        Int32 AskVolume
        {
            get;
        }

        Double Avg
        {
            get;
        }

        Int32 BidVolume
        {
            get;
        }

        Double Close
        {
            get;
        }

        Double High
        {
            get;
        }

        Double HLC3
        {
            get;
        }

        Double Low
        {
            get;
        }

        Double Mid
        {
            get;
        }

        Double Open
        {
            get;
        }

        Double Range
        {
            get;
        }

        Int32 TickVolume
        {
            get;
        }

        DateTime Timestamp
        {
            get;
        }

        Int32 TimestampOffset
        {
            get;
        }

        Double TrueHigh
        {
            get;
        }

        Double TrueLow
        {
            get;
        }

        Double TrueRange
        {
            get;
        }

        Int32 Volume
        {
            get;
        }

        #endregion

    }

    public interface ICQGSubMinuteBars : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        DateTime EndTimestamp
        {
            get;
        }

        String Id
        {
            get;
        }

        CQGSubMinuteBar this[Int32 index_]
        {
            get;
        }

        CQGError LastError
        {
            get;
        }

        CQGSubMinuteBarsRequest Request
        {
            get;
        }

        DateTime StartTimestamp
        {
            get;
        }

        eRequestStatus Status
        {
            get;
        }

        Object this[String tag_name]
        {
            get;
            set;
        }

        #endregion

        #region Methods
        Object get_Tag(String tag_name);

        new IEnumerator GetEnumerator();

        void set_Tag(String tag_name, Object pVal);

        #endregion

    }

    public interface ICQGSubMinuteBarsCollection : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGSubMinuteBars this[Int32 index_]
        {
            get;
        }

        CQGSubMinuteBars this[String id_]
        {
            get;
        }

        #endregion

        #region Methods
        CQGSubMinuteBars get_ItemById(String id_);

        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGSubMinuteBarsRequest
    {
        #region Properties
        eTimeSeriesContinuationType Continuation
        {
            get;
            set;
        }

        Int32 DaysBeforeExpiration
        {
            get;
            set;
        }

        Boolean EqualizeCloses
        {
            get;
            set;
        }

        eGapFilter GapFilter
        {
            get;
            set;
        }

        Boolean IncludeEnd
        {
            get;
            set;
        }

        Int32 Interval
        {
            get;
            set;
        }

        Object RangeEnd
        {
            get;
            set;
        }

        Object RangeStart
        {
            get;
            set;
        }

        Int32 RecalcPeriod
        {
            get;
            set;
        }

        eSessionFlag SessionFlags
        {
            get;
            set;
        }

        Object SessionsFilter
        {
            get;
            set;
        }

        eTimeSeriesSubscriptionLevel SubscriptionLevel
        {
            get;
            set;
        }

        String Symbol
        {
            get;
            set;
        }

        eTickFilter TickFilter
        {
            get;
            set;
        }

        Boolean UpdatesEnabled
        {
            get;
            set;
        }

        #endregion

    }

    public interface ICQGSummariesStatement
    {
        #region Properties
        CQGAccountSummaries CurrencySummaries
        {
            get;
        }

        Int32 GWAccountID
        {
            get;
        }

        DateTime StatementDate
        {
            get;
        }

        CQGAccountSummary Summary
        {
            get;
        }

        #endregion

    }

    public interface ICQGTFlowBar
    {
        #region Properties
        Int32 AskVolume
        {
            get;
        }

        Double BestAskPrice
        {
            get;
        }

        Double BestBidPrice
        {
            get;
        }

        Int32 BidVolume
        {
            get;
        }

        Double Close
        {
            get;
        }

        Int32 DomAskCount
        {
            get;
        }

        Int32 this[Int32 index_]
        {
            get;
        }

        Int32 DomBidCount
        {
            get;
        }

        Double High
        {
            get;
        }

        Double Low
        {
            get;
        }

        Double Mid
        {
            get;
        }

        Double Open
        {
            get;
        }

        DateTime Timestamp
        {
            get;
        }

        Int32 TimestampOffset
        {
            get;
        }

        Double TrueHigh
        {
            get;
        }

        Double TrueLow
        {
            get;
        }

        Double TrueMid
        {
            get;
        }

        #endregion

        #region Methods
        Int32 get_DomAskVolume(Int32 index_);

        Int32 get_DomBidVolume(Int32 index_);

        #endregion

    }

    public interface ICQGTFlowBars : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        DateTime EndTimestamp
        {
            get;
        }

        String Id
        {
            get;
        }

        CQGTFlowBar this[Int32 index_]
        {
            get;
        }

        CQGError LastError
        {
            get;
        }

        CQGTFlowBarsRequest Request
        {
            get;
        }

        DateTime StartTimestamp
        {
            get;
        }

        eRequestStatus Status
        {
            get;
        }

        Object this[String tag_name]
        {
            get;
            set;
        }

        #endregion

        #region Methods
        Object get_Tag(String tag_name);

        new IEnumerator GetEnumerator();

        void set_Tag(String tag_name, Object pVal);

        #endregion

    }

    public interface ICQGTFlowBarsCollection : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGTFlowBars this[Int32 index_]
        {
            get;
        }

        CQGTFlowBars this[String id_]
        {
            get;
        }

        #endregion

        #region Methods
        CQGTFlowBars get_ItemById(String id_);

        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGTFlowBarsRequest
    {
        #region Properties
        eTfAggregation Aggregation
        {
            get;
            set;
        }

        Int32 AggregationLevel
        {
            get;
            set;
        }

        eTimeSeriesContinuationType Continuation
        {
            get;
            set;
        }

        Int32 DaysBeforeExpiration
        {
            get;
            set;
        }

        eTFlowRequestDomVolumeLevel DomAskVolumeLevel
        {
            get;
            set;
        }

        eTFlowRequestDomVolumeLevel DomBidVolumeLevel
        {
            get;
            set;
        }

        Boolean EqualizeCloses
        {
            get;
            set;
        }

        Boolean IncludeEnd
        {
            get;
            set;
        }

        Object RangeEnd
        {
            get;
            set;
        }

        Object RangeStart
        {
            get;
            set;
        }

        Int32 RecalcPeriod
        {
            get;
            set;
        }

        eSessionFlag SessionFlags
        {
            get;
            set;
        }

        Object SessionsFilter
        {
            get;
            set;
        }

        eTimeSeriesSubscriptionLevel SubscriptionLevel
        {
            get;
            set;
        }

        String Symbol
        {
            get;
            set;
        }

        Boolean UpdatesEnabled
        {
            get;
            set;
        }

        #endregion

    }

    public interface ICQGTick
    {
        #region Properties
        String ContributorId
        {
            get;
        }

        Int32 ContributorIdCode
        {
            get;
        }

        eTickCorrectionType CorrectionType
        {
            get;
        }

        eMarketState MarketState
        {
            get;
        }

        Double Price
        {
            get;
        }

        eTickPriceType PriceType
        {
            get;
        }

        Int32 SalesConditionCode
        {
            get;
        }

        String SalesConditionLabel
        {
            get;
        }

        DateTime Timestamp
        {
            get;
        }

        Int32 Volume
        {
            get;
        }

        #endregion

    }

    public interface ICQGTicks : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        DateTime EndTimestamp
        {
            get;
        }

        Boolean HasUpdates
        {
            get;
        }

        String Id
        {
            get;
        }

        CQGTick this[Int32 index_]
        {
            get;
        }

        CQGError LastError
        {
            get;
        }

        CQGTicksRequest Request
        {
            get;
        }

        DateTime StartTimestamp
        {
            get;
        }

        eRequestStatus Status
        {
            get;
        }

        Object this[String tag_name]
        {
            get;
            set;
        }

        #endregion

        #region Methods
        Object get_Tag(String tag_name);

        new IEnumerator GetEnumerator();

        Int32 IndexForDate(DateTime date_);

        void IndicesForDates(DateTime date_1, DateTime date_2, ref Int32 start_index, ref Int32 end_index);

        void set_Tag(String tag_name, Object pVal);

        #endregion

    }

    public interface ICQGTicksCollection : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGTicks this[Int32 index_]
        {
            get;
        }

        CQGTicks this[String id_]
        {
            get;
        }

        #endregion

        #region Methods
        CQGTicks get_ItemById(String id_);

        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGTicksRequest
    {
        #region Properties
        DateTime RangeEnd
        {
            get;
            set;
        }

        DateTime RangeStart
        {
            get;
            set;
        }

        Int32 SessionsFilter
        {
            get;
            set;
        }

        String Symbol
        {
            get;
            set;
        }

        eTickFilter TickFilter
        {
            get;
            set;
        }

        eTicksRequestType Type
        {
            get;
            set;
        }

        #endregion

    }

    public interface ICQGTimedBar
    {
        #region Properties
        Int32 ActualVolume
        {
            get;
        }

        Int32 AskVolume
        {
            get;
        }

        Double Avg
        {
            get;
        }

        Int32 BidVolume
        {
            get;
        }

        Double Close
        {
            get;
        }

        Int32 CommodityOpenInterest
        {
            get;
        }

        Int32 CommodityTickVolume
        {
            get;
        }

        Int32 CommodityVolume
        {
            get;
        }

        Int32 ContractOpenInterest
        {
            get;
        }

        Int32 ContractTickVolume
        {
            get;
        }

        Int32 ContractVolume
        {
            get;
        }

        Double High
        {
            get;
        }

        Double HLC3
        {
            get;
        }

        Double Low
        {
            get;
        }

        Double Mid
        {
            get;
        }

        Double Open
        {
            get;
        }

        Int32 OpenInterest
        {
            get;
        }

        Double Range
        {
            get;
        }

        Int32 TickVolume
        {
            get;
        }

        DateTime Timestamp
        {
            get;
        }

        Double TrueHigh
        {
            get;
        }

        Double TrueLow
        {
            get;
        }

        Double TrueRange
        {
            get;
        }

        #endregion

    }

    public interface ICQGTimedBars : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        DateTime EndTimestamp
        {
            get;
        }

        String Id
        {
            get;
        }

        CQGTimedBar this[Int32 index_]
        {
            get;
        }

        CQGError LastError
        {
            get;
        }

        CQGTimedBarsRequest Request
        {
            get;
        }

        DateTime StartTimestamp
        {
            get;
        }

        eRequestStatus Status
        {
            get;
        }

        Object this[String tag_name]
        {
            get;
            set;
        }

        #endregion

        #region Methods
        Object get_Tag(String tag_name);

        new IEnumerator GetEnumerator();

        Int32 IndexForDate(DateTime date_);

        void set_Tag(String tag_name, Object pVal);

        #endregion

    }

    public interface ICQGTimedBarsCollection : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGTimedBars this[Int32 index_]
        {
            get;
        }

        CQGTimedBars this[String id_]
        {
            get;
        }

        #endregion

        #region Methods
        CQGTimedBars get_ItemById(String id_);

        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGTimedBarsRequest
    {
        #region Properties
        eTimeSeriesContinuationType Continuation
        {
            get;
            set;
        }

        Int32 DaysBeforeExpiration
        {
            get;
            set;
        }

        Boolean EqualizeCloses
        {
            get;
            set;
        }

        eHistoricalPeriod HistoricalPeriod
        {
            get;
            set;
        }

        Boolean IgnoreEventsOnHistoricalBars
        {
            get;
            set;
        }

        Boolean IncludeEnd
        {
            get;
            set;
        }

        Int32 IntradayPeriod
        {
            get;
            set;
        }

        Object RangeEnd
        {
            get;
            set;
        }

        Object RangeStart
        {
            get;
            set;
        }

        eSessionFlag SessionFlags
        {
            get;
            set;
        }

        Object SessionsFilter
        {
            get;
            set;
        }

        String Symbol
        {
            get;
            set;
        }

        eTickFilter TickFilter
        {
            get;
            set;
        }

        Boolean UpdatesEnabled
        {
            get;
            set;
        }

        #endregion

        #region Methods
        void ExcludeAllOutputs();

        void IncludeOutput(eTimedBarsRequestOutputs timed_bar_output, Boolean include_output);

        Boolean IsOutputIncluded(eTimedBarsRequestOutputs timed_bar_output);

        #endregion

    }

    public interface ICQGTrade
    {
        #region Properties
        Int32 GroupID
        {
            get;
        }

        Boolean IsMatched
        {
            get;
        }

        Double Price
        {
            get;
        }

        Int32 Quantity
        {
            get;
        }

        DateTime ServerTimestamp
        {
            get;
        }

        eOrderSide Side
        {
            get;
        }

        DateTime Timestamp
        {
            get;
        }

        #endregion

    }

    public interface ICQGTradeEntries : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGTradeEntry this[Int32 index_]
        {
            get;
        }

        #endregion

        #region Methods
        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGTradeEntry
    {
        #region Properties
        Boolean CanPlaceOrderSignal
        {
            get;
        }

        CQGTradeEntryDefinition Definition
        {
            get;
        }

        Double Price
        {
            get;
        }

        Int32 Quantity
        {
            get;
        }

        CQGTradeExits RelatedExits
        {
            get;
        }

        Boolean Signal
        {
            get;
        }

        Double StopLimitPrice
        {
            get;
        }

        CQGTradingSystemTrade Trade
        {
            get;
        }

        #endregion

    }

    public interface ICQGTradeEntryDefinition
    {
        #region Properties
        Boolean AllowEntryOnExit
        {
            get;
        }

        Boolean AllowPyramids
        {
            get;
        }

        eOrderType OrderType
        {
            get;
        }

        #endregion

    }

    public interface ICQGTradeExit
    {
        #region Properties
        Boolean CanPlaceOrderSignal
        {
            get;
        }

        CQGTradeExitDefinition Definition
        {
            get;
        }

        Double Price
        {
            get;
        }

        Int32 Quantity
        {
            get;
        }

        CQGTradeEntries RelatedEntries
        {
            get;
        }

        Boolean Signal
        {
            get;
        }

        Double StopLimitPrice
        {
            get;
        }

        CQGTradingSystemTrade Trade
        {
            get;
        }

        #endregion

    }

    public interface ICQGTradeExitDefinition
    {
        #region Properties
        Boolean AllowExitOnEntry
        {
            get;
        }

        Boolean AllowMoreThanOnce
        {
            get;
        }

        String Name
        {
            get;
        }

        eOrderType OrderType
        {
            get;
        }

        #endregion

    }

    public interface ICQGTradeExitDefinitions : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGTradeExitDefinition this[Int32 index_]
        {
            get;
        }

        CQGTradeExitDefinition this[String exit_name]
        {
            get;
        }

        #endregion

        #region Methods
        CQGTradeExitDefinition get_ItemByName(String exit_name);

        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGTradeExits : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGTradeExit this[Int32 index_]
        {
            get;
        }

        CQGTradeExit this[String exit_name]
        {
            get;
        }

        #endregion

        #region Methods
        CQGTradeExit get_ItemByName(String exit_name);

        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGTrades : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGTrade this[Int32 index_]
        {
            get;
        }

        #endregion

        #region Methods
        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGTradingSystem
    {
        #region Properties
        CQGTradingSystemDefinition Definition
        {
            get;
        }

        String Id
        {
            get;
        }

        CQGError LastError
        {
            get;
        }

        CQGTradingSystemRequest Request
        {
            get;
        }

        CQGTradingSystemStatisticsCollection Statistics
        {
            get;
        }

        eRequestStatus Status
        {
            get;
        }

        Object this[String tag_name]
        {
            get;
            set;
        }

        CQGTradingSystemTradesRows TradesRows
        {
            get;
        }

        #endregion

        #region Methods
        Object get_Tag(String tag_name);

        void set_Tag(String tag_name, Object pVal);

        #endregion

    }

    public interface ICQGTradingSystemAddInfo
    {
    }

    public interface ICQGTradingSystemBaseBarParameter
    {
        #region Properties
        String Name
        {
            get;
        }

        eTradingSystemBaseBarParameter Type
        {
            get;
        }

        Object Value
        {
            get;
            set;
        }

        #endregion

    }

    public interface ICQGTradingSystemBaseBarParameters : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGTradingSystemBaseBarParameter this[eTradingSystemBaseBarParameter parameter_type]
        {
            get;
        }

        #endregion

        #region Methods
        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGTradingSystemDefinition
    {
        #region Properties
        String Abbreviation
        {
            get;
        }

        Double Commission
        {
            get;
        }

        eTradingSystemCommissionType CommissionType
        {
            get;
        }

        String Name
        {
            get;
        }

        CQGParameterDefinitions ParameterDefinitions
        {
            get;
        }

        CQGTradingSystemTradeDefinitions TradeDefinitions
        {
            get;
        }

        #endregion

    }

    public interface ICQGTradingSystemDefinitions : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGTradingSystemDefinition this[Int32 index_]
        {
            get;
        }

        CQGTradingSystemDefinition this[String trading_system_abbreviation]
        {
            get;
        }

        #endregion

        #region Methods
        CQGTradingSystemDefinition get_ItemByAbbreviation(String trading_system_abbreviation);

        CQGTradingSystemDefinition get_ItemByName(String trading_system_name);

        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGTradingSystemInsertInfo
    {
        #region Properties
        Int32 Index
        {
            get;
        }

        #endregion

    }

    public interface ICQGTradingSystemRelationAddInfo
    {
        #region Properties
        CQGTradeEntry Entry
        {
            get;
        }

        Int32 EntryRowIndex
        {
            get;
        }

        CQGTradeExit Exit
        {
            get;
        }

        Int32 ExitRowIndex
        {
            get;
        }

        #endregion

    }

    public interface ICQGTradingSystemRemoveInfo
    {
        #region Properties
        Int32 Index
        {
            get;
        }

        #endregion

    }

    public interface ICQGTradingSystemRequest
    {
        #region Properties
        CQGTradingSystemBaseBarParameters BaseBarParameters
        {
            get;
        }

        eTradingSystemBaseBar BaseBarType
        {
            get;
            set;
        }

        String BaseExpression
        {
            get;
            set;
        }

        eTimeSeriesContinuationType Continuation
        {
            get;
            set;
        }

        Int32 DaysBeforeExpiration
        {
            get;
            set;
        }

        CQGTradingSystemDefinition Definition
        {
            get;
        }

        Boolean EqualizeCloses
        {
            get;
            set;
        }

        eHistoricalPeriod HistoricalPeriod
        {
            get;
            set;
        }

        Boolean IncludeEnd
        {
            get;
            set;
        }

        Int32 IntradayPeriod
        {
            get;
            set;
        }

        Object this[Object key_]
        {
            get;
            set;
        }

        Object RangeEnd
        {
            get;
            set;
        }

        Object RangeStart
        {
            get;
            set;
        }

        Int32 RecalcPeriod
        {
            get;
            set;
        }

        eSessionFlag SessionFlags
        {
            get;
            set;
        }

        Object SessionsFilter
        {
            get;
            set;
        }

        eTimeSeriesSubscriptionLevel SubscriptionLevel
        {
            get;
            set;
        }

        #endregion

        #region Methods
        void ExcludeAllStatistics();

        Object get_Parameter(Object key_);

        void IncludeStatistic(eTradingSystemStatistic trading_system_statistic);

        Boolean IsStatisticIncluded(eTradingSystemStatistic trading_system_statistic);

        void set_Parameter(Object key_, Object pVal);

        #endregion

    }

    public interface ICQGTradingSystems : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGTradingSystem this[Int32 index_]
        {
            get;
        }

        CQGTradingSystem this[String id_]
        {
            get;
        }

        #endregion

        #region Methods
        CQGTradingSystem get_ItemById(String id_);

        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGTradingSystemStatistics
    {
        #region Properties
        Double AverageDuration
        {
            get;
        }

        Double AverageLoss
        {
            get;
        }

        Double AverageProfit
        {
            get;
        }

        Double AverageWin
        {
            get;
        }

        Double ClosedNetProfit
        {
            get;
        }

        Double CurConsecLosses
        {
            get;
        }

        Double CurConsecWins
        {
            get;
        }

        Double CurDrawDown
        {
            get;
        }

        Double LinearRegression
        {
            get;
        }

        Double MaxClosedDraw
        {
            get;
        }

        Double MaxConsecLosses
        {
            get;
        }

        Double MaxConsecWins
        {
            get;
        }

        Double MaxDrawAmount
        {
            get;
        }

        Double MaxDrawDuration
        {
            get;
        }

        Double MaximumLoss
        {
            get;
        }

        Double MaximumWin
        {
            get;
        }

        Double OpenPosition
        {
            get;
        }

        Double PercentLong
        {
            get;
        }

        Double PercentWinners
        {
            get;
        }

        Double ProfitLossRatio
        {
            get;
        }

        Double ProfitToMaxDraw
        {
            get;
        }

        Double RemoveToNeutral
        {
            get;
        }

        Double ReturnRetracement
        {
            get;
        }

        Double TimePercentage
        {
            get;
        }

        DateTime Timestamp
        {
            get;
        }

        Int32 TimestampOffset
        {
            get;
        }

        Double TotalNetProfit
        {
            get;
        }

        Double TotalTradeCount
        {
            get;
        }

        Double this[eTradingSystemStatistic ts_statistic]
        {
            get;
        }

        #endregion

        #region Methods
        Double get_Value(eTradingSystemStatistic ts_statistic);

        #endregion

    }

    public interface ICQGTradingSystemStatisticsChangeInfo
    {
        #region Properties
        CQGTradingSystemStatistics Statistics
        {
            get;
        }

        #endregion

        #region Methods
        Boolean IsStatisticChanged(eTradingSystemStatistic trading_system_statistic);

        #endregion

    }

    public interface ICQGTradingSystemStatisticsCollection : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGTradingSystemStatistics this[Int32 index_]
        {
            get;
        }

        #endregion

        #region Methods
        new IEnumerator GetEnumerator();

        Int32 IndexForDate(DateTime date_);

        void IndicesForDates(DateTime date_1, DateTime date_2, ref Int32 start_index, ref Int32 end_index);

        #endregion

    }

    public interface ICQGTradingSystemTrade
    {
        #region Properties
        CQGTradingSystemTradeDefinition Definition
        {
            get;
        }

        Boolean IsActive
        {
            get;
        }

        DateTime Timestamp
        {
            get;
        }

        Int32 TimestampOffset
        {
            get;
        }

        CQGTradeEntry TradeEntry
        {
            get;
        }

        CQGTradeExits TradeExits
        {
            get;
        }

        CQGTradingSystemTradesRow TradesRow
        {
            get;
        }

        #endregion

    }

    public interface ICQGTradingSystemTradeDefinition
    {
        #region Properties
        CQGTradeEntryDefinition Entry
        {
            get;
        }

        CQGTradeExitDefinitions Exits
        {
            get;
        }

        String Name
        {
            get;
        }

        eTradeSide Side
        {
            get;
        }

        #endregion

    }

    public interface ICQGTradingSystemTradeDefinitions : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGTradingSystemTradeDefinition this[Int32 index_]
        {
            get;
        }

        CQGTradingSystemTradeDefinition this[String trade_name]
        {
            get;
        }

        #endregion

        #region Methods
        CQGTradingSystemTradeDefinition get_ItemByName(String trade_name);

        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGTradingSystemTradesRow : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGTradingSystemTrade this[Int32 index_]
        {
            get;
        }

        CQGTradingSystemTrade this[String trade_name]
        {
            get;
        }

        DateTime Timestamp
        {
            get;
        }

        Int32 TimestampOffset
        {
            get;
        }

        #endregion

        #region Methods
        CQGTradingSystemTrade get_ItemByName(String trade_name);

        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGTradingSystemTradesRows : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGTradingSystemTradesRow this[Int32 index_]
        {
            get;
        }

        #endregion

        #region Methods
        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGTradingSystemUpdateInfo
    {
        #region Properties
        Int32 Index
        {
            get;
        }

        CQGTradingSystemStatisticsChangeInfo StatisticsChangeInfo
        {
            get;
        }

        #endregion

        #region Methods
        CQGChangedTradeEntries get_ChangedEntries(eTradeChangeCategory change_filter = eTradeChangeCategory.tccAll);

        CQGChangedTradeExits get_ChangedExits(eTradeChangeCategory change_filter = eTradeChangeCategory.tccAll);

        #endregion

    }

    public interface ICQGTransaction
    {
        #region Properties
        String ExecutionId
        {
            get;
        }

        CQGFill Fill
        {
            get;
        }

        CQGStringCollection HangOrderIds
        {
            get;
        }

        Int32 HangQuantity
        {
            get;
        }

        String Id
        {
            get;
        }

        CQGOrder Order
        {
            get;
        }

        CQGModifiedProperties Properties
        {
            get;
        }

        String RejectReason
        {
            get;
        }

        DateTime ServerTimestamp
        {
            get;
        }

        eOrderEvent Status
        {
            get;
        }

        CQGStrategyLegFills StrategyLegFills
        {
            get;
        }

        DateTime Timestamp
        {
            get;
        }

        #endregion

    }

    public interface ICQGTransactions : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGTransaction this[String id_]
        {
            get;
        }

        CQGTransaction this[Int32 index_]
        {
            get;
        }

        #endregion

        #region Methods
        CQGTransaction get_ItemByIndex(Int32 index_);

        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGYield
    {
        #region Properties
        Double Avg
        {
            get;
        }

        Double Close
        {
            get;
        }

        Double High
        {
            get;
        }

        Double HLC3
        {
            get;
        }

        Double Low
        {
            get;
        }

        Double Mid
        {
            get;
        }

        Double Open
        {
            get;
        }

        Double Range
        {
            get;
        }

        DateTime Timestamp
        {
            get;
        }

        Double TrueHigh
        {
            get;
        }

        Double TrueLow
        {
            get;
        }

        Double TrueRange
        {
            get;
        }

        #endregion

    }

    public interface ICQGYields : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        DateTime EndTimestamp
        {
            get;
        }

        String Id
        {
            get;
        }

        CQGYield this[Int32 index_]
        {
            get;
        }

        CQGError LastError
        {
            get;
        }

        CQGYieldsRequest Request
        {
            get;
        }

        DateTime StartTimestamp
        {
            get;
        }

        eRequestStatus Status
        {
            get;
        }

        Object this[String tag_name]
        {
            get;
            set;
        }

        #endregion

        #region Methods
        Object get_Tag(String tag_name);

        new IEnumerator GetEnumerator();

        Int32 IndexForDate(DateTime date_);

        void set_Tag(String tag_name, Object pVal);

        #endregion

    }

    public interface ICQGYieldsCollection : IEnumerable
    {
        #region Properties
        Int32 Count
        {
            get;
        }

        CQGYields this[Int32 index_]
        {
            get;
        }

        CQGYields this[String id_]
        {
            get;
        }

        #endregion

        #region Methods
        CQGYields get_ItemById(String id_);

        new IEnumerator GetEnumerator();

        #endregion

    }

    public interface ICQGYieldsRequest
    {
        #region Properties
        eYieldCompound Compound
        {
            get;
            set;
        }

        eTimeSeriesContinuationType Continuation
        {
            get;
            set;
        }

        Int32 DaysBeforeExpiration
        {
            get;
            set;
        }

        Boolean EqualizeCloses
        {
            get;
            set;
        }

        Boolean IncludeEnd
        {
            get;
            set;
        }

        eYieldModel Model
        {
            get;
            set;
        }

        Object RangeEnd
        {
            get;
            set;
        }

        Object RangeStart
        {
            get;
            set;
        }

        Int32 RecalcPeriod
        {
            get;
            set;
        }

        eSessionFlag SessionFlags
        {
            get;
            set;
        }

        Object SessionsFilter
        {
            get;
            set;
        }

        eTimeSeriesSubscriptionLevel SubscriptionLevel
        {
            get;
            set;
        }

        String Symbol
        {
            get;
            set;
        }

        Boolean UpdatesEnabled
        {
            get;
            set;
        }

        #endregion

    }

    #endregion

    #region Classes
    public class _ICQGCELEvents_SinkHelper : _ICQGCELEvents
    {
        private string thisObjUnqKey;

        #region Constructors
        internal _ICQGCELEvents_SinkHelper()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~_ICQGCELEvents_SinkHelper()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Methods
        public virtual void AccountChanged(eAccountChangeType arg1, CQGAccount arg2, CQGPosition arg3)
        {
            object[] args = new object[3] {arg1, arg2, arg3};
            string name = "AccountChanged";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void AdvancedStudyAdded(CQGAdvancedStudy arg1)
        {
            object[] args = new object[1] {arg1};
            string name = "AdvancedStudyAdded";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void AdvancedStudyDefinitionsResolved(CQGAdvancedStudyDefinitions arg1, CQGError arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "AdvancedStudyDefinitionsResolved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void AdvancedStudyInserted(CQGAdvancedStudy arg1, Int32 arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "AdvancedStudyInserted";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void AdvancedStudyRemoved(CQGAdvancedStudy arg1, Int32 arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "AdvancedStudyRemoved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void AdvancedStudyResolved(CQGAdvancedStudy arg1, CQGError arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "AdvancedStudyResolved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void AdvancedStudyUpdated(CQGAdvancedStudy arg1, Int32 arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "AdvancedStudyUpdated";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void AlgorithmicOrderPlaced(String arg1, CQGAlgorithmicOrderParameters arg2, CQGAlgorithmicOrderProperties arg3)
        {
            object[] args = new object[3] {arg1, arg2, arg3};
            string name = "AlgorithmicOrderPlaced";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void AlgorithmicOrderRegistrationComplete(String arg1, CQGError arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "AlgorithmicOrderRegistrationComplete";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void AllOrdersCanceled(eOrderSideFilter arg1, CQGIntegerCollection arg2, CQGStringCollection arg3)
        {
            object[] args = new object[3] {arg1, arg2, arg3};
            string name = "AllOrdersCanceled";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void AuthenticationStatusChanged(eSessionStatus arg1, CQGError arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "AuthenticationStatusChanged";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void BarsTimestampsResolved(CQGBarsTimestamps arg1, CQGError arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "BarsTimestampsResolved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void CELStarted()
        {
            string name = "CELStarted";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public virtual void CommodityInstrumentsResolved(String arg1, eInstrumentType arg2, CQGCommodityInstruments arg3)
        {
            object[] args = new object[3] {arg1, arg2, arg3};
            string name = "CommodityInstrumentsResolved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void ConditionAdded(CQGCondition arg1)
        {
            object[] args = new object[1] {arg1};
            string name = "ConditionAdded";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void ConditionDefinitionsResolved(CQGConditionDefinitions arg1, CQGError arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "ConditionDefinitionsResolved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void ConditionInserted(CQGCondition arg1, Int32 arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "ConditionInserted";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void ConditionRemoved(CQGCondition arg1, Int32 arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "ConditionRemoved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void ConditionResolved(CQGCondition arg1, CQGError arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "ConditionResolved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void ConditionUpdated(CQGCondition arg1, Int32 arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "ConditionUpdated";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void ConstantVolumeBarsAdded(CQGConstantVolumeBars arg1)
        {
            object[] args = new object[1] {arg1};
            string name = "ConstantVolumeBarsAdded";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void ConstantVolumeBarsInserted(CQGConstantVolumeBars arg1, Int32 arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "ConstantVolumeBarsInserted";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void ConstantVolumeBarsRemoved(CQGConstantVolumeBars arg1, Int32 arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "ConstantVolumeBarsRemoved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void ConstantVolumeBarsResolved(CQGConstantVolumeBars arg1, CQGError arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "ConstantVolumeBarsResolved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void ConstantVolumeBarsUpdated(CQGConstantVolumeBars arg1, Int32 arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "ConstantVolumeBarsUpdated";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void CurrencyRatesChanged(CQGCurrencyRates arg1)
        {
            object[] args = new object[1] {arg1};
            string name = "CurrencyRatesChanged";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void CustomSessionsResolved(CQGSessionsCollection arg1, CQGError arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "CustomSessionsResolved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void CustomStudyAdded(CQGCustomStudy arg1)
        {
            object[] args = new object[1] {arg1};
            string name = "CustomStudyAdded";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void CustomStudyDefinitionsResolved(CQGCustomStudyDefinitions arg1, CQGError arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "CustomStudyDefinitionsResolved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void CustomStudyInserted(CQGCustomStudy arg1, Int32 arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "CustomStudyInserted";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void CustomStudyRemoved(CQGCustomStudy arg1, Int32 arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "CustomStudyRemoved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void CustomStudyResolved(CQGCustomStudy arg1, CQGError arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "CustomStudyResolved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void CustomStudyUpdated(CQGCustomStudy arg1, Int32 arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "CustomStudyUpdated";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void DataConnectionStatusChanged(eConnectionStatus arg1)
        {
            object[] args = new object[1] {arg1};
            string name = "DataConnectionStatusChanged";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void DataError(Object arg1, String arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "DataError";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void DataSourcesResolved(CQGDataSources arg1, CQGError arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "DataSourcesResolved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void DataSourceSymbolsResolved(String arg1, CQGDataSourceSymbols arg2, CQGError arg3)
        {
            object[] args = new object[3] {arg1, arg2, arg3};
            string name = "DataSourceSymbolsResolved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual void ExpressionAdded(CQGExpression arg1)
        {
            object[] args = new object[1] {arg1};
            string name = "ExpressionAdded";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void ExpressionInserted(CQGExpression arg1, Int32 arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "ExpressionInserted";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void ExpressionRemoved(CQGExpression arg1, Int32 arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "ExpressionRemoved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void ExpressionResolved(CQGExpression arg1, CQGError arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "ExpressionResolved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void ExpressionUpdated(CQGExpression arg1, Int32 arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "ExpressionUpdated";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual void GWConnectionStatusChanged(eConnectionStatus arg1)
        {
            object[] args = new object[1] {arg1};
            string name = "GWConnectionStatusChanged";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void GWEnvironmentChanged(eGWEnvChangeCode arg1, Int32 arg2, Int32 arg3)
        {
            object[] args = new object[3] {arg1, arg2, arg3};
            string name = "GWEnvironmentChanged";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void HistoricalSessionsResolved(CQGSessionsCollection arg1, CQGHistoricalSessionsRequest arg2, CQGError arg3)
        {
            object[] args = new object[3] {arg1, arg2, arg3};
            string name = "HistoricalSessionsResolved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void ICConnectionStatusChanged(eICConnectionStatus arg1)
        {
            object[] args = new object[1] {arg1};
            string name = "ICConnectionStatusChanged";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void IncorrectSymbol(String arg1)
        {
            object[] args = new object[1] {arg1};
            string name = "IncorrectSymbol";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void InstrumentChanged(CQGInstrument arg1, CQGQuotes arg2, CQGInstrumentProperties arg3)
        {
            object[] args = new object[3] {arg1, arg2, arg3};
            string name = "InstrumentChanged";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void InstrumentDOMChanged(CQGInstrument arg1, CQGDOMQuotes arg2, CQGDOMQuotes arg3)
        {
            object[] args = new object[3] {arg1, arg2, arg3};
            string name = "InstrumentDOMChanged";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void InstrumentsGroupChanged(eChangeType arg1, CQGInstrumentsGroup arg2, CQGStringCollection arg3)
        {
            object[] args = new object[3] {arg1, arg2, arg3};
            string name = "InstrumentsGroupChanged";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void InstrumentsGroupResolved(CQGInstrumentsGroup arg1, CQGError arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "InstrumentsGroupResolved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void InstrumentSubscribed(String arg1, CQGInstrument arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "InstrumentSubscribed";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void IsReady(ref eReadyStatus arg1)
        {
            object[] args = new object[1] {arg1};
            string name = "IsReady";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void LineTimeChanged(DateTime arg1)
        {
            object[] args = new object[1] {arg1};
            string name = "LineTimeChanged";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void ManualFillChanged(CQGManualFill arg1, eManualFillUpdateType arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "ManualFillChanged";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void ManualFillsResolved(CQGManualFills arg1, CQGError arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "ManualFillsResolved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void ManualFillUpdateResolved(CQGManualFillRequest arg1, CQGError arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "ManualFillUpdateResolved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void OnIdle()
        {
            string name = "OnIdle";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public virtual void OnQueryProgress(CQGOrdersQuery arg1, CQGError arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "OnQueryProgress";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void OrderChanged(eChangeType arg1, CQGOrder arg2, CQGOrderProperties arg3, CQGFill arg4, CQGError arg5)
        {
            object[] args = new object[5] {arg1, arg2, arg3, arg4, arg5};
            string name = "OrderChanged";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void PasswordChanged(eSessionStatus arg1, CQGError arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "PasswordChanged";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void PointAndFigureBarsAdded(CQGPointAndFigureBars arg1)
        {
            object[] args = new object[1] {arg1};
            string name = "PointAndFigureBarsAdded";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void PointAndFigureBarsInserted(CQGPointAndFigureBars arg1, Int32 arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "PointAndFigureBarsInserted";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void PointAndFigureBarsRemoved(CQGPointAndFigureBars arg1, Int32 arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "PointAndFigureBarsRemoved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void PointAndFigureBarsResolved(CQGPointAndFigureBars arg1, CQGError arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "PointAndFigureBarsResolved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void PointAndFigureBarsUpdated(CQGPointAndFigureBars arg1, Int32 arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "PointAndFigureBarsUpdated";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void PositionsStatementResolved(CQGPositionsStatement arg1, CQGError arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "PositionsStatementResolved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void QFormulaDefinitionsResolved(CQGQFormulaDefinitions arg1, CQGError arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "QFormulaDefinitionsResolved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void StrategyDefinitionProgress(CQGStrategyDefinition arg1, CQGError arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "StrategyDefinitionProgress";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void SubMinuteBarsAdded(CQGSubMinuteBars arg1)
        {
            object[] args = new object[1] {arg1};
            string name = "SubMinuteBarsAdded";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void SubMinuteBarsInserted(CQGSubMinuteBars arg1, Int32 arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "SubMinuteBarsInserted";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void SubMinuteBarsRemoved(CQGSubMinuteBars arg1, Int32 arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "SubMinuteBarsRemoved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void SubMinuteBarsResolved(CQGSubMinuteBars arg1, CQGError arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "SubMinuteBarsResolved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void SubMinuteBarsUpdated(CQGSubMinuteBars arg1, Int32 arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "SubMinuteBarsUpdated";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void SummariesStatementResolved(CQGSummariesStatement arg1, CQGError arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "SummariesStatementResolved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void TFlowBarsAdded(CQGTFlowBars arg1)
        {
            object[] args = new object[1] {arg1};
            string name = "TFlowBarsAdded";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void TFlowBarsInserted(CQGTFlowBars arg1, Int32 arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "TFlowBarsInserted";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void TFlowBarsRemoved(CQGTFlowBars arg1, Int32 arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "TFlowBarsRemoved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void TFlowBarsResolved(CQGTFlowBars arg1, CQGError arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "TFlowBarsResolved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void TFlowBarsUpdated(CQGTFlowBars arg1, Int32 arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "TFlowBarsUpdated";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void TicksAdded(CQGTicks arg1, Int32 arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "TicksAdded";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void TicksResolved(CQGTicks arg1, CQGError arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "TicksResolved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void TimedBarsAdded(CQGTimedBars arg1)
        {
            object[] args = new object[1] {arg1};
            string name = "TimedBarsAdded";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void TimedBarsInserted(CQGTimedBars arg1, Int32 arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "TimedBarsInserted";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void TimedBarsRemoved(CQGTimedBars arg1, Int32 arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "TimedBarsRemoved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void TimedBarsResolved(CQGTimedBars arg1, CQGError arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "TimedBarsResolved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void TimedBarsUpdated(CQGTimedBars arg1, Int32 arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "TimedBarsUpdated";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual void TradableCommoditiesResolved(Int32 arg1, CQGCommodities arg2, CQGError arg3)
        {
            object[] args = new object[3] {arg1, arg2, arg3};
            string name = "TradableCommoditiesResolved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void TradableExchangesResolved(Int32 arg1, CQGExchanges arg2, CQGError arg3)
        {
            object[] args = new object[3] {arg1, arg2, arg3};
            string name = "TradableExchangesResolved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void TradingSystemAddNotification(CQGTradingSystem arg1, CQGTradingSystemAddInfo arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "TradingSystemAddNotification";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void TradingSystemDefinitionsResolved(CQGTradingSystemDefinitions arg1, CQGError arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "TradingSystemDefinitionsResolved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void TradingSystemInsertNotification(CQGTradingSystem arg1, CQGTradingSystemInsertInfo arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "TradingSystemInsertNotification";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void TradingSystemRemoveNotification(CQGTradingSystem arg1, CQGTradingSystemRemoveInfo arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "TradingSystemRemoveNotification";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void TradingSystemResolved(CQGTradingSystem arg1, CQGError arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "TradingSystemResolved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void TradingSystemTradeRelationAddNotification(CQGTradingSystem arg1, CQGTradingSystemRelationAddInfo arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "TradingSystemTradeRelationAddNotification";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void TradingSystemUpdateNotification(CQGTradingSystem arg1, CQGTradingSystemUpdateInfo arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "TradingSystemUpdateNotification";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void YieldsAdded(CQGYields arg1)
        {
            object[] args = new object[1] {arg1};
            string name = "YieldsAdded";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void YieldsInserted(CQGYields arg1, Int32 arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "YieldsInserted";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void YieldsRemoved(CQGYields arg1, Int32 arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "YieldsRemoved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void YieldsResolved(CQGYields arg1, CQGError arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "YieldsResolved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void YieldsUpdated(CQGYields arg1, Int32 arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "YieldsUpdated";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        #endregion

    }

    public class _ICQGCELGeneralEvents_SinkHelper : _ICQGCELGeneralEvents
    {
        private string thisObjUnqKey;

        #region Constructors
        internal _ICQGCELGeneralEvents_SinkHelper()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~_ICQGCELGeneralEvents_SinkHelper()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Methods
        public virtual void CELStarted()
        {
            string name = "CELStarted";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public virtual void CurrencyRatesChanged(CQGCurrencyRates arg1)
        {
            object[] args = new object[1] {arg1};
            string name = "CurrencyRatesChanged";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void DataConnectionStatusChanged(eConnectionStatus arg1)
        {
            object[] args = new object[1] {arg1};
            string name = "DataConnectionStatusChanged";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void DataError(Object arg1, String arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "DataError";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual void GWConnectionStatusChanged(eConnectionStatus arg1)
        {
            object[] args = new object[1] {arg1};
            string name = "GWConnectionStatusChanged";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void IsReady(ref eReadyStatus arg1)
        {
            object[] args = new object[1] {arg1};
            string name = "IsReady";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void LineTimeChanged(DateTime arg1)
        {
            object[] args = new object[1] {arg1};
            string name = "LineTimeChanged";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void OnIdle()
        {
            string name = "OnIdle";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class _ICQGCELInstrumentEvents_SinkHelper : _ICQGCELInstrumentEvents
    {
        private string thisObjUnqKey;

        #region Constructors
        internal _ICQGCELInstrumentEvents_SinkHelper()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~_ICQGCELInstrumentEvents_SinkHelper()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Methods
        public virtual void CommodityInstrumentsResolved(String arg1, eInstrumentType arg2, CQGCommodityInstruments arg3)
        {
            object[] args = new object[3] {arg1, arg2, arg3};
            string name = "CommodityInstrumentsResolved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual void IncorrectSymbol(String arg1)
        {
            object[] args = new object[1] {arg1};
            string name = "IncorrectSymbol";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void InstrumentChanged(CQGInstrument arg1, CQGQuotes arg2, CQGInstrumentProperties arg3)
        {
            object[] args = new object[3] {arg1, arg2, arg3};
            string name = "InstrumentChanged";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void InstrumentDOMChanged(CQGInstrument arg1, CQGDOMQuotes arg2, CQGDOMQuotes arg3)
        {
            object[] args = new object[3] {arg1, arg2, arg3};
            string name = "InstrumentDOMChanged";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void InstrumentsGroupChanged(eChangeType arg1, CQGInstrumentsGroup arg2, CQGStringCollection arg3)
        {
            object[] args = new object[3] {arg1, arg2, arg3};
            string name = "InstrumentsGroupChanged";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void InstrumentsGroupResolved(CQGInstrumentsGroup arg1, CQGError arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "InstrumentsGroupResolved";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void InstrumentSubscribed(String arg1, CQGInstrument arg2)
        {
            object[] args = new object[2] {arg1, arg2};
            string name = "InstrumentSubscribed";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGAccountClass : ICQGAccount, CQGAccount
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGAccountClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGAccountClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public eAccountMarginDetailing AccountMarginDetailing
        {
            get
            {
                string name = "AccountMarginDetailing";
                var result = (eAccountMarginDetailing)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "AccountMarginDetailing";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public CQGStringCollection AuthorizedTraders
        {
            get
            {
                string name = "AuthorizedTraders";
                var result = (CQGStringCollection)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Boolean AutoSubscribeInstruments
        {
            get
            {
                string name = "AutoSubscribeInstruments";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "AutoSubscribeInstruments";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public CQGCEL CEL
        {
            get
            {
                string name = "CEL";
                var result = (CQGCEL)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGAccountSummaries CurrencySummaries
        {
            get
            {
                string name = "CurrencySummaries";
                var result = (CQGAccountSummaries)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime DateOfLastStatement
        {
            get
            {
                string name = "DateOfLastStatement";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String FcmAccountID
        {
            get
            {
                string name = "FcmAccountID";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eFcmClass FcmClass
        {
            get
            {
                string name = "FcmClass";
                var result = (eFcmClass)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 FcmID
        {
            get
            {
                string name = "FcmID";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String FcmName
        {
            get
            {
                string name = "FcmName";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 GWAccountID
        {
            get
            {
                string name = "GWAccountID";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String GWAccountName
        {
            get
            {
                string name = "GWAccountName";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGOrders InternalOrders
        {
            get
            {
                string name = "InternalOrders";
                var result = (CQGOrders)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGOrders Orders
        {
            get
            {
                string name = "Orders";
                var result = (CQGOrders)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGPositions Positions
        {
            get
            {
                string name = "Positions";
                var result = (CQGPositions)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public ePositionSubscriptionLevel PositionSubcriptionLevel
        {
            get
            {
                string name = "PositionSubcriptionLevel";
                var result = (ePositionSubscriptionLevel)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "PositionSubcriptionLevel";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public String ReportingCurrency
        {
            get
            {
                string name = "ReportingCurrency";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime ServerTimestamp
        {
            get
            {
                string name = "ServerTimestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGAccountSummary Summary
        {
            get
            {
                string name = "Summary";
                var result = (CQGAccountSummary)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime Timestamp
        {
            get
            {
                string name = "Timestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double TotalMarginValue
        {
            get
            {
                string name = "TotalMarginValue";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double TotalPurchasingPower
        {
            get
            {
                string name = "TotalPurchasingPower";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGAccountsClass : ICQGAccounts, IEnumerable, CQGAccounts
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGAccountsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGAccountsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGAccount this[Int32 gw_account_id]
        {
            get
            {
                string name = "Item";
                var result = (CQGAccount)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGAccount this[String fcm_account_id, Int32 fcm_id]
        {
            get
            {
                string name = "ItemByFCM";
                var result = (CQGAccount)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual void Add(CQGAccount cqg_account)
        {
            object[] args = new object[1] {cqg_account};
            string name = "Add";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGAccount get_ItemByFCM(String fcm_account_id, Int32 fcm_id)
        {
            object[] args = new object[2] {fcm_account_id, fcm_id};
            string name = "get_ItemByFCM";
            var result = (CQGAccount)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGAccount get_ItemByIndex(Int32 index_)
        {
            object[] args = new object[1] {index_};
            string name = "get_ItemByIndex";
            var result = (CQGAccount)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGAccountSummariesClass : ICQGAccountSummaries, IEnumerable, CQGAccountSummaries
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGAccountSummariesClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGAccountSummariesClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGAccountSummary this[Object index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGAccountSummary)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGAccountSummaryClass : ICQGAccountSummary, CQGAccountSummary
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGAccountSummaryClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGAccountSummaryClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public CQGAccount Account
        {
            get
            {
                string name = "Account";
                var result = (CQGAccount)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String CurrencyName
        {
            get
            {
                string name = "CurrencyName";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Boolean ManualFillsInvolved
        {
            get
            {
                string name = "ManualFillsInvolved";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual Double Balance(Int32 day_ = 0)
        {
            object[] args = new object[1] {day_};
            string name = "Balance";
            var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Double CashExcess(Int32 day_ = 1)
        {
            object[] args = new object[1] {day_};
            string name = "CashExcess";
            var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Double Collaterals(Int32 day_ = 1)
        {
            object[] args = new object[1] {day_};
            string name = "Collaterals";
            var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Double InitialMargin(Int32 day_ = 1)
        {
            object[] args = new object[1] {day_};
            string name = "InitialMargin";
            var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Double MaintenanceMargin(Int32 day_ = 1)
        {
            object[] args = new object[1] {day_};
            string name = "MaintenanceMargin";
            var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Double MVO(Int32 day_ = 0)
        {
            object[] args = new object[1] {day_};
            string name = "MVO";
            var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Double NLV(Int32 day_ = 0)
        {
            object[] args = new object[1] {day_};
            string name = "NLV";
            var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Double OTE(Int32 day_ = 0)
        {
            object[] args = new object[1] {day_};
            string name = "OTE";
            var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Double ProfitLoss(Int32 day_ = 1)
        {
            object[] args = new object[1] {day_};
            string name = "ProfitLoss";
            var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Double UPL(Int32 day_ = 0)
        {
            object[] args = new object[1] {day_};
            string name = "UPL";
            var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        #endregion

    }

    public class CQGAdvancedStudiesClass : ICQGAdvancedStudies, IEnumerable, CQGAdvancedStudies
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGAdvancedStudiesClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGAdvancedStudiesClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGAdvancedStudy this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGAdvancedStudy)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGAdvancedStudy this[String id_]
        {
            get
            {
                string name = "ItemById";
                var result = (CQGAdvancedStudy)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGAdvancedStudy get_ItemById(String id_)
        {
            object[] args = new object[1] {id_};
            string name = "get_ItemById";
            var result = (CQGAdvancedStudy)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGAdvancedStudyClass : ICQGAdvancedStudy, IEnumerable, CQGAdvancedStudy
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGAdvancedStudyClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGAdvancedStudyClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGCurveHeaders CurveHeaders
        {
            get
            {
                string name = "CurveHeaders";
                var result = (CQGCurveHeaders)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGAdvancedStudyDefinition Definition
        {
            get
            {
                string name = "Definition";
                var result = (CQGAdvancedStudyDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime EndTimestamp
        {
            get
            {
                string name = "EndTimestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Id
        {
            get
            {
                string name = "Id";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGCurves this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGCurves)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGError LastError
        {
            get
            {
                string name = "LastError";
                var result = (CQGError)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGAdvancedStudyRequest Request
        {
            get
            {
                string name = "Request";
                var result = (CQGAdvancedStudyRequest)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime StartTimestamp
        {
            get
            {
                string name = "StartTimestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eRequestStatus Status
        {
            get
            {
                string name = "Status";
                var result = (eRequestStatus)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Object this[String tag_name]
        {
            get
            {
                string name = "Tag";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Tag";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Object get_Tag(String tag_name)
        {
            object[] args = new object[1] {tag_name};
            string name = "get_Tag";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Int32 IndexForDate(DateTime date_)
        {
            object[] args = new object[1] {date_};
            string name = "IndexForDate";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual void set_Tag(String tag_name, Object pVal)
        {
            object[] args = new object[2] {tag_name, pVal};
            string name = "set_Tag";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGAdvancedStudyDefinitionClass : ICQGAdvancedStudyDefinition, CQGAdvancedStudyDefinition
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGAdvancedStudyDefinitionClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGAdvancedStudyDefinitionClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public String Abbreviation
        {
            get
            {
                string name = "Abbreviation";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGCurveDefinitions CurveDefinitions
        {
            get
            {
                string name = "CurveDefinitions";
                var result = (CQGCurveDefinitions)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Name
        {
            get
            {
                string name = "Name";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGParameterDefinitions ParameterDefinitions
        {
            get
            {
                string name = "ParameterDefinitions";
                var result = (CQGParameterDefinitions)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGAdvancedStudyDefinitionsClass : ICQGAdvancedStudyDefinitions, IEnumerable, CQGAdvancedStudyDefinitions
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGAdvancedStudyDefinitionsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGAdvancedStudyDefinitionsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGAdvancedStudyDefinition this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGAdvancedStudyDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGAdvancedStudyDefinition this[String advanced_study_abbreviation]
        {
            get
            {
                string name = "ItemByAbbreviation";
                var result = (CQGAdvancedStudyDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGAdvancedStudyDefinition get_ItemByAbbreviation(String advanced_study_abbreviation)
        {
            object[] args = new object[1] {advanced_study_abbreviation};
            string name = "get_ItemByAbbreviation";
            var result = (CQGAdvancedStudyDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGAdvancedStudyDefinition get_ItemByName(String advanced_study_name)
        {
            object[] args = new object[1] {advanced_study_name};
            string name = "get_ItemByName";
            var result = (CQGAdvancedStudyDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGAdvancedStudyRequestClass : ICQGAdvancedStudyRequest, CQGAdvancedStudyRequest
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGAdvancedStudyRequestClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGAdvancedStudyRequestClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public String BaseExpression
        {
            get
            {
                string name = "BaseExpression";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "BaseExpression";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eTimeSeriesContinuationType Continuation
        {
            get
            {
                string name = "Continuation";
                var result = (eTimeSeriesContinuationType)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Continuation";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 DaysBeforeExpiration
        {
            get
            {
                string name = "DaysBeforeExpiration";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "DaysBeforeExpiration";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public CQGAdvancedStudyDefinition Definition
        {
            get
            {
                string name = "Definition";
                var result = (CQGAdvancedStudyDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Boolean EqualizeCloses
        {
            get
            {
                string name = "EqualizeCloses";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "EqualizeCloses";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eHistoricalPeriod HistoricalPeriod
        {
            get
            {
                string name = "HistoricalPeriod";
                var result = (eHistoricalPeriod)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "HistoricalPeriod";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean IncludeEnd
        {
            get
            {
                string name = "IncludeEnd";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "IncludeEnd";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 IntradayPeriod
        {
            get
            {
                string name = "IntradayPeriod";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "IntradayPeriod";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object this[Object key_]
        {
            get
            {
                string name = "Parameter";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Parameter";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object RangeEnd
        {
            get
            {
                string name = "RangeEnd";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RangeEnd";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object RangeStart
        {
            get
            {
                string name = "RangeStart";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RangeStart";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 RecalcPeriod
        {
            get
            {
                string name = "RecalcPeriod";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RecalcPeriod";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eSessionFlag SessionFlags
        {
            get
            {
                string name = "SessionFlags";
                var result = (eSessionFlag)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "SessionFlags";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object SessionsFilter
        {
            get
            {
                string name = "SessionsFilter";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "SessionsFilter";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eTimeSeriesSubscriptionLevel SubscriptionLevel
        {
            get
            {
                string name = "SubscriptionLevel";
                var result = (eTimeSeriesSubscriptionLevel)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "SubscriptionLevel";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean UpdatesEnabled
        {
            get
            {
                string name = "UpdatesEnabled";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "UpdatesEnabled";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Object get_Parameter(Object key_)
        {
            object[] args = new object[1] {key_};
            string name = "get_Parameter";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual void IncludeCurve(Object curve_key)
        {
            object[] args = new object[1] {curve_key};
            string name = "IncludeCurve";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Boolean IsCurveIncluded(Object curve_key)
        {
            object[] args = new object[1] {curve_key};
            string name = "IsCurveIncluded";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual void set_Parameter(Object key_, Object pVal)
        {
            object[] args = new object[2] {key_, pVal};
            string name = "set_Parameter";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGAlgorithmicOrderDefinitionClass : ICQGAlgorithmicOrderDefinition, CQGAlgorithmicOrderDefinition
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGAlgorithmicOrderDefinitionClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGAlgorithmicOrderDefinitionClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Object DefaultValue
        {
            get
            {
                string name = "DefaultValue";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "DefaultValue";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 DefaultValueIndex
        {
            get
            {
                string name = "DefaultValueIndex";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "DefaultValueIndex";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public String Name
        {
            get
            {
                string name = "Name";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Name";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eAlgorithmicOrderPropertyType Type
        {
            get
            {
                string name = "Type";
                var result = (eAlgorithmicOrderPropertyType)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Type";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public String Unit
        {
            get
            {
                string name = "Unit";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Unit";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public CQGStringCollection Values
        {
            get
            {
                string name = "Values";
                var result = (CQGStringCollection)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual void AddValue(String value_)
        {
            object[] args = new object[1] {value_};
            string name = "AddValue";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGAlgorithmicOrderDefinitionsClass : ICQGAlgorithmicOrderDefinitions, IEnumerable, CQGAlgorithmicOrderDefinitions
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGAlgorithmicOrderDefinitionsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGAlgorithmicOrderDefinitionsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGAlgorithmicOrderDefinition this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGAlgorithmicOrderDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual void Add(CQGAlgorithmicOrderDefinition definition_)
        {
            object[] args = new object[1] {definition_};
            string name = "Add";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual CQGAlgorithmicOrderDefinition CreateDefinition()
        {
            string name = "CreateDefinition";
            var result = (CQGAlgorithmicOrderDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGAlgorithmicOrderParametersClass : ICQGAlgorithmicOrderParameters, CQGAlgorithmicOrderParameters
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGAlgorithmicOrderParametersClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGAlgorithmicOrderParametersClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public eOrderDuration DurationType
        {
            get
            {
                string name = "DurationType";
                var result = (eOrderDuration)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eOrderExecutionInstruction ExecutionInstructions
        {
            get
            {
                string name = "ExecutionInstructions";
                var result = (eOrderExecutionInstruction)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String ExecutionPattern
        {
            get
            {
                string name = "ExecutionPattern";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime GTD
        {
            get
            {
                string name = "GTD";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 GWAccountID
        {
            get
            {
                string name = "GWAccountID";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String InstrumentName
        {
            get
            {
                string name = "InstrumentName";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Boolean Parked
        {
            get
            {
                string name = "Parked";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eOrderTrailingPeg PreferredTrailingPeg
        {
            get
            {
                string name = "PreferredTrailingPeg";
                var result = (eOrderTrailingPeg)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Price
        {
            get
            {
                string name = "Price";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 Quantity
        {
            get
            {
                string name = "Quantity";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eOrderSide Side
        {
            get
            {
                string name = "Side";
                var result = (eOrderSide)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double StopLimitPrice
        {
            get
            {
                string name = "StopLimitPrice";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double TrailingOffset
        {
            get
            {
                string name = "TrailingOffset";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 TriggerQuantity
        {
            get
            {
                string name = "TriggerQuantity";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eOrderType Type
        {
            get
            {
                string name = "Type";
                var result = (eOrderType)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 VisibleQuantity
        {
            get
            {
                string name = "VisibleQuantity";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGAlgorithmicOrderPropertiesClass : ICQGAlgorithmicOrderProperties, IEnumerable, CQGAlgorithmicOrderProperties
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGAlgorithmicOrderPropertiesClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGAlgorithmicOrderPropertiesClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGAlgorithmicOrderProperty this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGAlgorithmicOrderProperty)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGAlgorithmicOrderPropertyClass : ICQGAlgorithmicOrderProperty, CQGAlgorithmicOrderProperty
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGAlgorithmicOrderPropertyClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGAlgorithmicOrderPropertyClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public String Name
        {
            get
            {
                string name = "Name";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Object Value
        {
            get
            {
                string name = "Value";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGAlgoSupplierClass : CQGAlgoSupplier
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGAlgoSupplierClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGAlgoSupplierClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGAPIConfigClass : ICQGAPIConfig, CQGAPIConfig
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGAPIConfigClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGAPIConfigClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 AccountMarginAndPositionsThrottleInterval
        {
            get
            {
                string name = "AccountMarginAndPositionsThrottleInterval";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "AccountMarginAndPositionsThrottleInterval";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 AgeToDeleteLogFileDays
        {
            get
            {
                string name = "AgeToDeleteLogFileDays";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "AgeToDeleteLogFileDays";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean ApplyDaylightSavingChanges
        {
            get
            {
                string name = "ApplyDaylightSavingChanges";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "ApplyDaylightSavingChanges";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean CollectionsThrowException
        {
            get
            {
                string name = "CollectionsThrowException";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "CollectionsThrowException";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eAccountMarginDetailing DefaultAccountMarginDetailing
        {
            get
            {
                string name = "DefaultAccountMarginDetailing";
                var result = (eAccountMarginDetailing)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "DefaultAccountMarginDetailing";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eDOMandBBAType DefaultInstrumentBBAType
        {
            get
            {
                string name = "DefaultInstrumentBBAType";
                var result = (eDOMandBBAType)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "DefaultInstrumentBBAType";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eDataSubscriptionLevel DefaultInstrumentSubscriptionLevel
        {
            get
            {
                string name = "DefaultInstrumentSubscriptionLevel";
                var result = (eDataSubscriptionLevel)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "DefaultInstrumentSubscriptionLevel";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public ePositionSubscriptionLevel DefPositionSubscriptionLevel
        {
            get
            {
                string name = "DefPositionSubscriptionLevel";
                var result = (ePositionSubscriptionLevel)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "DefPositionSubscriptionLevel";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eDOMUpdatesMode DOMUpdatesMode
        {
            get
            {
                string name = "DOMUpdatesMode";
                var result = (eDOMUpdatesMode)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "DOMUpdatesMode";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 DOMUpdatesPeriod
        {
            get
            {
                string name = "DOMUpdatesPeriod";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "DOMUpdatesPeriod";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean FireEventOnChangedPrices
        {
            get
            {
                string name = "FireEventOnChangedPrices";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "FireEventOnChangedPrices";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean GatewayEnabled
        {
            get
            {
                string name = "GatewayEnabled";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "GatewayEnabled";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean IncludeOrderTransactions
        {
            get
            {
                string name = "IncludeOrderTransactions";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "IncludeOrderTransactions";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eLogSeverity LogSeverity
        {
            get
            {
                string name = "LogSeverity";
                var result = (eLogSeverity)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "LogSeverity";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 MaxLogFileCount
        {
            get
            {
                string name = "MaxLogFileCount";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "MaxLogFileCount";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public DateTime MaxLogFileDuration
        {
            get
            {
                string name = "MaxLogFileDuration";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "MaxLogFileDuration";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 MaxLogFileSize
        {
            get
            {
                string name = "MaxLogFileSize";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "MaxLogFileSize";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 MessageProcessingTimeout
        {
            get
            {
                string name = "MessageProcessingTimeout";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "MessageProcessingTimeout";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean MetaDataEnabled
        {
            get
            {
                string name = "MetaDataEnabled";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "MetaDataEnabled";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean NewInstrumentChangeMode
        {
            get
            {
                string name = "NewInstrumentChangeMode";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "NewInstrumentChangeMode";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean NewInstrumentMode
        {
            get
            {
                string name = "NewInstrumentMode";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "NewInstrumentMode";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean NonsynchronizedData
        {
            get
            {
                string name = "NonsynchronizedData";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "NonsynchronizedData";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean PendingOrderActionEnabled
        {
            get
            {
                string name = "PendingOrderActionEnabled";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "PendingOrderActionEnabled";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public ePositionDetailing PositionDetailing
        {
            get
            {
                string name = "PositionDetailing";
                var result = (ePositionDetailing)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "PositionDetailing";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public ePriceMode PriceMode
        {
            get
            {
                string name = "PriceMode";
                var result = (ePriceMode)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "PriceMode";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public String ProviderPassword
        {
            get
            {
                string name = "ProviderPassword";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "ProviderPassword";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean QueryAllAuthorizedTraders
        {
            get
            {
                string name = "QueryAllAuthorizedTraders";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "QueryAllAuthorizedTraders";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eReadyStatusCheck ReadyStatusCheck
        {
            get
            {
                string name = "ReadyStatusCheck";
                var result = (eReadyStatusCheck)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "ReadyStatusCheck";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public String RemoteOpenAPILoginService
        {
            get
            {
                string name = "RemoteOpenAPILoginService";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RemoteOpenAPILoginService";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public String RemoteOpenAPIServer
        {
            get
            {
                string name = "RemoteOpenAPIServer";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RemoteOpenAPIServer";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public CQGStringCollection RemoteOpenAPIServers
        {
            get
            {
                string name = "RemoteOpenAPIServers";
                var result = (CQGStringCollection)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Boolean ReplaceLoginSession
        {
            get
            {
                string name = "ReplaceLoginSession";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "ReplaceLoginSession";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 SnapshotPeriod
        {
            get
            {
                string name = "SnapshotPeriod";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "SnapshotPeriod";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean StrategyManagerEnabled
        {
            get
            {
                string name = "StrategyManagerEnabled";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "StrategyManagerEnabled";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eTimeZone TimeZoneCode
        {
            get
            {
                string name = "TimeZoneCode";
                var result = (eTimeZone)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "TimeZoneCode";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean UsedFromATLClient
        {
            get
            {
                string name = "UsedFromATLClient";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "UsedFromATLClient";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean UseOrderSide
        {
            get
            {
                string name = "UseOrderSide";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "UseOrderSide";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        #endregion

        #region Methods
        public virtual void AddRemoteOpenAPIServer(String server_address)
        {
            object[] args = new object[1] {server_address};
            string name = "AddRemoteOpenAPIServer";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void ClearRemoteOpenAPIServers()
        {
            string name = "ClearRemoteOpenAPIServers";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGBarsTimestampsClass : ICQGBarsTimestamps, IEnumerable, CQGBarsTimestamps
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGBarsTimestampsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGBarsTimestampsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Id
        {
            get
            {
                string name = "Id";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGError LastError
        {
            get
            {
                string name = "LastError";
                var result = (CQGError)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eRequestStatus Status
        {
            get
            {
                string name = "Status";
                var result = (eRequestStatus)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGCELClass : ICQGCEL, CQGCEL, _ICQGCELEvents_Event
    {
        private string thisObjUnqKey;

        private System.Timers.Timer eventCheckingTimer;

        #region Constructors
        public CQGCELClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
            string name = "CQG.CQGCELClass";
            string v = (string)CQG.ExecuteTheQuery(QueryInfo.QueryType.Constructor, thisObjUnqKey, name);
            eventCheckingTimer = new System.Timers.Timer();
            eventCheckingTimer.Interval = 30;
            eventCheckingTimer.Elapsed += eventCheckingTimer_Tick;
            eventCheckingTimer.AutoReset = true;
            eventCheckingTimer.Enabled = true;
        }

        #endregion

        #region Destructor
        ~CQGCELClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public CQGAccounts Accounts
        {
            get
            {
                string name = "Accounts";
                var result = (CQGAccounts)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eAccountSubscriptionLevel AccountSubscriptionLevel
        {
            get
            {
                string name = "AccountSubscriptionLevel";
                var result = (eAccountSubscriptionLevel)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "AccountSubscriptionLevel";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public CQGAdvancedStudies AllAdvancedStudies
        {
            get
            {
                string name = "AllAdvancedStudies";
                var result = (CQGAdvancedStudies)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGConditions AllConditions
        {
            get
            {
                string name = "AllConditions";
                var result = (CQGConditions)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGConstantVolumeBarsCollection AllConstantVolumeBars
        {
            get
            {
                string name = "AllConstantVolumeBars";
                var result = (CQGConstantVolumeBarsCollection)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGCustomStudies AllCustomStudies
        {
            get
            {
                string name = "AllCustomStudies";
                var result = (CQGCustomStudies)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGExpressions AllExpressions
        {
            get
            {
                string name = "AllExpressions";
                var result = (CQGExpressions)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGInstrumentsGroups AllInstrumentsGroups
        {
            get
            {
                string name = "AllInstrumentsGroups";
                var result = (CQGInstrumentsGroups)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGManualFillsCollection AllManualFills
        {
            get
            {
                string name = "AllManualFills";
                var result = (CQGManualFillsCollection)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGPointAndFigureBarsCollection AllPointAndFigureBars
        {
            get
            {
                string name = "AllPointAndFigureBars";
                var result = (CQGPointAndFigureBarsCollection)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGStrategyDefinitions AllStrategyDefinitions
        {
            get
            {
                string name = "AllStrategyDefinitions";
                var result = (CQGStrategyDefinitions)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGSubMinuteBarsCollection AllSubMinuteBars
        {
            get
            {
                string name = "AllSubMinuteBars";
                var result = (CQGSubMinuteBarsCollection)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTFlowBarsCollection AllTFlowBars
        {
            get
            {
                string name = "AllTFlowBars";
                var result = (CQGTFlowBarsCollection)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTicksCollection AllTicks
        {
            get
            {
                string name = "AllTicks";
                var result = (CQGTicksCollection)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTimedBarsCollection AllTimedBars
        {
            get
            {
                string name = "AllTimedBars";
                var result = (CQGTimedBarsCollection)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTradingSystems AllTradingSystems
        {
            get
            {
                string name = "AllTradingSystems";
                var result = (CQGTradingSystems)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGYieldsCollection AllYields
        {
            get
            {
                string name = "AllYields";
                var result = (CQGYieldsCollection)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGAPIConfig APIConfiguration
        {
            get
            {
                string name = "APIConfiguration";
                var result = (CQGAPIConfig)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGCELConfiguration Configuration
        {
            get
            {
                string name = "Configuration";
                var result = (CQGCELConfiguration)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Configuration";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public CQGCurrencyRates CurrencyRates
        {
            get
            {
                string name = "CurrencyRates";
                var result = (CQGCurrencyRates)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGDirectEventsAccessor DirectEventsAccessor
        {
            get
            {
                string name = "DirectEventsAccessor";
                var result = (CQGDirectEventsAccessor)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGEnvironment Environment
        {
            get
            {
                string name = "Environment";
                var result = (CQGEnvironment)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGInstruments Instruments
        {
            get
            {
                string name = "Instruments";
                var result = (CQGInstruments)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGOrders InternalOrders
        {
            get
            {
                string name = "InternalOrders";
                var result = (CQGOrders)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Boolean IsStarted
        {
            get
            {
                string name = "IsStarted";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGLogger Logger
        {
            get
            {
                string name = "Logger";
                var result = (CQGLogger)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGOrders Orders
        {
            get
            {
                string name = "Orders";
                var result = (CQGOrders)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Boolean OTPRequired
        {
            get
            {
                string name = "OTPRequired";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Events
        public event _ICQGCELEvents_AccountChangedEventHandler AccountChanged;

        public event _ICQGCELEvents_AdvancedStudyAddedEventHandler AdvancedStudyAdded;

        public event _ICQGCELEvents_AdvancedStudyDefinitionsResolvedEventHandler AdvancedStudyDefinitionsResolved;

        public event _ICQGCELEvents_AdvancedStudyInsertedEventHandler AdvancedStudyInserted;

        public event _ICQGCELEvents_AdvancedStudyRemovedEventHandler AdvancedStudyRemoved;

        public event _ICQGCELEvents_AdvancedStudyResolvedEventHandler AdvancedStudyResolved;

        public event _ICQGCELEvents_AdvancedStudyUpdatedEventHandler AdvancedStudyUpdated;

        public event _ICQGCELEvents_AlgorithmicOrderPlacedEventHandler AlgorithmicOrderPlaced;

        public event _ICQGCELEvents_AlgorithmicOrderRegistrationCompleteEventHandler AlgorithmicOrderRegistrationComplete;

        public event _ICQGCELEvents_AllOrdersCanceledEventHandler AllOrdersCanceled;

        public event _ICQGCELEvents_AuthenticationStatusChangedEventHandler AuthenticationStatusChanged;

        public event _ICQGCELEvents_BarsTimestampsResolvedEventHandler BarsTimestampsResolved;

        public event _ICQGCELEvents_CELStartedEventHandler CELStarted;

        public event _ICQGCELEvents_CommodityInstrumentsResolvedEventHandler CommodityInstrumentsResolved;

        public event _ICQGCELEvents_ConditionAddedEventHandler ConditionAdded;

        public event _ICQGCELEvents_ConditionDefinitionsResolvedEventHandler ConditionDefinitionsResolved;

        public event _ICQGCELEvents_ConditionInsertedEventHandler ConditionInserted;

        public event _ICQGCELEvents_ConditionRemovedEventHandler ConditionRemoved;

        public event _ICQGCELEvents_ConditionResolvedEventHandler ConditionResolved;

        public event _ICQGCELEvents_ConditionUpdatedEventHandler ConditionUpdated;

        public event _ICQGCELEvents_ConstantVolumeBarsAddedEventHandler ConstantVolumeBarsAdded;

        public event _ICQGCELEvents_ConstantVolumeBarsInsertedEventHandler ConstantVolumeBarsInserted;

        public event _ICQGCELEvents_ConstantVolumeBarsRemovedEventHandler ConstantVolumeBarsRemoved;

        public event _ICQGCELEvents_ConstantVolumeBarsResolvedEventHandler ConstantVolumeBarsResolved;

        public event _ICQGCELEvents_ConstantVolumeBarsUpdatedEventHandler ConstantVolumeBarsUpdated;

        public event _ICQGCELEvents_CurrencyRatesChangedEventHandler CurrencyRatesChanged;

        public event _ICQGCELEvents_CustomSessionsResolvedEventHandler CustomSessionsResolved;

        public event _ICQGCELEvents_CustomStudyAddedEventHandler CustomStudyAdded;

        public event _ICQGCELEvents_CustomStudyDefinitionsResolvedEventHandler CustomStudyDefinitionsResolved;

        public event _ICQGCELEvents_CustomStudyInsertedEventHandler CustomStudyInserted;

        public event _ICQGCELEvents_CustomStudyRemovedEventHandler CustomStudyRemoved;

        public event _ICQGCELEvents_CustomStudyResolvedEventHandler CustomStudyResolved;

        public event _ICQGCELEvents_CustomStudyUpdatedEventHandler CustomStudyUpdated;

        public event _ICQGCELEvents_DataConnectionStatusChangedEventHandler DataConnectionStatusChanged;

        public event _ICQGCELEvents_DataErrorEventHandler DataError;

        public event _ICQGCELEvents_DataSourcesResolvedEventHandler DataSourcesResolved;

        public event _ICQGCELEvents_DataSourceSymbolsResolvedEventHandler DataSourceSymbolsResolved;

        public event _ICQGCELEvents_ExpressionAddedEventHandler ExpressionAdded;

        public event _ICQGCELEvents_ExpressionInsertedEventHandler ExpressionInserted;

        public event _ICQGCELEvents_ExpressionRemovedEventHandler ExpressionRemoved;

        public event _ICQGCELEvents_ExpressionResolvedEventHandler ExpressionResolved;

        public event _ICQGCELEvents_ExpressionUpdatedEventHandler ExpressionUpdated;

        public event _ICQGCELEvents_GWConnectionStatusChangedEventHandler GWConnectionStatusChanged;

        public event _ICQGCELEvents_GWEnvironmentChangedEventHandler GWEnvironmentChanged;

        public event _ICQGCELEvents_HistoricalSessionsResolvedEventHandler HistoricalSessionsResolved;

        public event _ICQGCELEvents_ICConnectionStatusChangedEventHandler ICConnectionStatusChanged;

        public event _ICQGCELEvents_IncorrectSymbolEventHandler IncorrectSymbol;

        public event _ICQGCELEvents_InstrumentChangedEventHandler InstrumentChanged;

        public event _ICQGCELEvents_InstrumentDOMChangedEventHandler InstrumentDOMChanged;

        public event _ICQGCELEvents_InstrumentsGroupChangedEventHandler InstrumentsGroupChanged;

        public event _ICQGCELEvents_InstrumentsGroupResolvedEventHandler InstrumentsGroupResolved;

        public event _ICQGCELEvents_InstrumentSubscribedEventHandler InstrumentSubscribed;

        public event _ICQGCELEvents_IsReadyEventHandler IsReady;

        public event _ICQGCELEvents_LineTimeChangedEventHandler LineTimeChanged;

        public event _ICQGCELEvents_ManualFillChangedEventHandler ManualFillChanged;

        public event _ICQGCELEvents_ManualFillsResolvedEventHandler ManualFillsResolved;

        public event _ICQGCELEvents_ManualFillUpdateResolvedEventHandler ManualFillUpdateResolved;

        public event _ICQGCELEvents_OnIdleEventHandler OnIdle;

        public event _ICQGCELEvents_OnQueryProgressEventHandler OnQueryProgress;

        public event _ICQGCELEvents_OrderChangedEventHandler OrderChanged;

        public event _ICQGCELEvents_PasswordChangedEventHandler PasswordChanged;

        public event _ICQGCELEvents_PointAndFigureBarsAddedEventHandler PointAndFigureBarsAdded;

        public event _ICQGCELEvents_PointAndFigureBarsInsertedEventHandler PointAndFigureBarsInserted;

        public event _ICQGCELEvents_PointAndFigureBarsRemovedEventHandler PointAndFigureBarsRemoved;

        public event _ICQGCELEvents_PointAndFigureBarsResolvedEventHandler PointAndFigureBarsResolved;

        public event _ICQGCELEvents_PointAndFigureBarsUpdatedEventHandler PointAndFigureBarsUpdated;

        public event _ICQGCELEvents_PositionsStatementResolvedEventHandler PositionsStatementResolved;

        public event _ICQGCELEvents_QFormulaDefinitionsResolvedEventHandler QFormulaDefinitionsResolved;

        public event _ICQGCELEvents_StrategyDefinitionProgressEventHandler StrategyDefinitionProgress;

        public event _ICQGCELEvents_SubMinuteBarsAddedEventHandler SubMinuteBarsAdded;

        public event _ICQGCELEvents_SubMinuteBarsInsertedEventHandler SubMinuteBarsInserted;

        public event _ICQGCELEvents_SubMinuteBarsRemovedEventHandler SubMinuteBarsRemoved;

        public event _ICQGCELEvents_SubMinuteBarsResolvedEventHandler SubMinuteBarsResolved;

        public event _ICQGCELEvents_SubMinuteBarsUpdatedEventHandler SubMinuteBarsUpdated;

        public event _ICQGCELEvents_SummariesStatementResolvedEventHandler SummariesStatementResolved;

        public event _ICQGCELEvents_TFlowBarsAddedEventHandler TFlowBarsAdded;

        public event _ICQGCELEvents_TFlowBarsInsertedEventHandler TFlowBarsInserted;

        public event _ICQGCELEvents_TFlowBarsRemovedEventHandler TFlowBarsRemoved;

        public event _ICQGCELEvents_TFlowBarsResolvedEventHandler TFlowBarsResolved;

        public event _ICQGCELEvents_TFlowBarsUpdatedEventHandler TFlowBarsUpdated;

        public event _ICQGCELEvents_TicksAddedEventHandler TicksAdded;

        public event _ICQGCELEvents_TicksResolvedEventHandler TicksResolved;

        public event _ICQGCELEvents_TimedBarsAddedEventHandler TimedBarsAdded;

        public event _ICQGCELEvents_TimedBarsInsertedEventHandler TimedBarsInserted;

        public event _ICQGCELEvents_TimedBarsRemovedEventHandler TimedBarsRemoved;

        public event _ICQGCELEvents_TimedBarsResolvedEventHandler TimedBarsResolved;

        public event _ICQGCELEvents_TimedBarsUpdatedEventHandler TimedBarsUpdated;

        public event _ICQGCELEvents_TradableCommoditiesResolvedEventHandler TradableCommoditiesResolved;

        public event _ICQGCELEvents_TradableExchangesResolvedEventHandler TradableExchangesResolved;

        public event _ICQGCELEvents_TradingSystemAddNotificationEventHandler TradingSystemAddNotification;

        public event _ICQGCELEvents_TradingSystemDefinitionsResolvedEventHandler TradingSystemDefinitionsResolved;

        public event _ICQGCELEvents_TradingSystemInsertNotificationEventHandler TradingSystemInsertNotification;

        public event _ICQGCELEvents_TradingSystemRemoveNotificationEventHandler TradingSystemRemoveNotification;

        public event _ICQGCELEvents_TradingSystemResolvedEventHandler TradingSystemResolved;

        public event _ICQGCELEvents_TradingSystemTradeRelationAddNotificationEventHandler TradingSystemTradeRelationAddNotification;

        public event _ICQGCELEvents_TradingSystemUpdateNotificationEventHandler TradingSystemUpdateNotification;

        public event _ICQGCELEvents_YieldsAddedEventHandler YieldsAdded;

        public event _ICQGCELEvents_YieldsInsertedEventHandler YieldsInserted;

        public event _ICQGCELEvents_YieldsRemovedEventHandler YieldsRemoved;

        public event _ICQGCELEvents_YieldsResolvedEventHandler YieldsResolved;

        public event _ICQGCELEvents_YieldsUpdatedEventHandler YieldsUpdated;

        #endregion

        #region Methods
        public virtual void ActivateAllOrders(CQGAccount cqg_account = null, CQGInstrument cqg_instrument = null, Boolean from_all_traders = false, eOrderSide order_side = eOrderSide.osdUndefined)
        {
            object[] args = new object[4] {cqg_account, cqg_instrument, from_all_traders, order_side};
            string name = "ActivateAllOrders";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void ActivateAllOrdersEx(CQGOrderActionRequest cqg_order_action_request)
        {
            object[] args = new object[1] {cqg_order_action_request};
            string name = "ActivateAllOrdersEx";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void CancelAllOrders(CQGAccount cqg_account = null, CQGInstrument cqg_instrument = null, Boolean from_all_traders = false, Boolean parked_ = false, eOrderSide order_side = eOrderSide.osdUndefined)
        {
            object[] args = new object[5] {cqg_account, cqg_instrument, from_all_traders, parked_, order_side};
            string name = "CancelAllOrders";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void CancelAllOrdersEx(CQGOrderActionRequest cqg_order_action_request)
        {
            object[] args = new object[1] {cqg_order_action_request};
            string name = "CancelAllOrdersEx";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void ChangePassword(String username_, String old_password, String new_password)
        {
            object[] args = new object[3] {username_, old_password, new_password};
            string name = "ChangePassword";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void ChangeRemoteOpenAPIServer(String server_address)
        {
            object[] args = new object[1] {server_address};
            string name = "ChangeRemoteOpenAPIServer";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual CQGAccounts CreateAccountsCollection()
        {
            string name = "CreateAccountsCollection";
            var result = (CQGAccounts)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual CQGAdvancedStudyRequest CreateAdvancedStudyRequest(String name_or_abbr)
        {
            object[] args = new object[1] {name_or_abbr};
            string name = "CreateAdvancedStudyRequest";
            var result = (CQGAdvancedStudyRequest)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGAlgorithmicOrderDefinitions CreateAlgorithmicOrderDefinitions()
        {
            string name = "CreateAlgorithmicOrderDefinitions";
            var result = (CQGAlgorithmicOrderDefinitions)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual CQGConditionRequest CreateConditionRequest(String condition_name)
        {
            object[] args = new object[1] {condition_name};
            string name = "CreateConditionRequest";
            var result = (CQGConditionRequest)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGConstantVolumeBarsRequest CreateConstantVolumeBarsRequest()
        {
            string name = "CreateConstantVolumeBarsRequest";
            var result = (CQGConstantVolumeBarsRequest)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual CQGCustomStudyRequest CreateCustomStudyRequest(String name_or_abbr)
        {
            object[] args = new object[1] {name_or_abbr};
            string name = "CreateCustomStudyRequest";
            var result = (CQGCustomStudyRequest)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGExecutionPattern CreateExecutionPattern(CQGStrategyDefinition cqg_definition = null, eOrderType order_type = eOrderType.otUndefined)
        {
            object[] args = new object[2] {cqg_definition, order_type};
            string name = "CreateExecutionPattern";
            var result = (CQGExecutionPattern)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGExpressionRequest CreateExpressionRequest()
        {
            string name = "CreateExpressionRequest";
            var result = (CQGExpressionRequest)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual CQGHistoricalSessionsRequest CreateHistoricalSessionsRequest()
        {
            string name = "CreateHistoricalSessionsRequest";
            var result = (CQGHistoricalSessionsRequest)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual CQGInstrumentSubscriptionRequest CreateInstrumentRequest()
        {
            string name = "CreateInstrumentRequest";
            var result = (CQGInstrumentSubscriptionRequest)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual CQGInstrumentsGroupRequest CreateInstrumentsGroupRequest()
        {
            string name = "CreateInstrumentsGroupRequest";
            var result = (CQGInstrumentsGroupRequest)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual CQGManualFillRequest CreateManualFillRequest(eManualFillUpdateType update_type, CQGManualFill manual_fill = null)
        {
            object[] args = new object[2] {update_type, manual_fill};
            string name = "CreateManualFillRequest";
            var result = (CQGManualFillRequest)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGOrder CreateOrder(eOrderType order_type, CQGInstrument cqg_instrument, CQGAccount cqg_account, Int32 order_quantity, eOrderSide order_side = eOrderSide.osdUndefined, Double limit_price = 0, Double stop_price = 0, String ue_name_part = "")
        {
            object[] args = new object[8] {order_type, cqg_instrument, cqg_account, order_quantity, order_side, limit_price, stop_price, ue_name_part};
            string name = "CreateOrder";
            var result = (CQGOrder)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGOrderActionRequest CreateOrderActionRequest()
        {
            string name = "CreateOrderActionRequest";
            var result = (CQGOrderActionRequest)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual CQGOrder CreateOrderByInstrumentName(eOrderType order_type, String instrument_name, CQGAccount cqg_account, Int32 order_quantity, eOrderSide order_side = eOrderSide.osdUndefined, Double limit_price = 0, Double stop_price = 0, String ue_name_part = "")
        {
            object[] args = new object[8] {order_type, instrument_name, cqg_account, order_quantity, order_side, limit_price, stop_price, ue_name_part};
            string name = "CreateOrderByInstrumentName";
            var result = (CQGOrder)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGOrderChain CreateOrderChain()
        {
            string name = "CreateOrderChain";
            var result = (CQGOrderChain)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual CQGPointAndFigureBarsRequest CreatePointAndFigureBarsRequest()
        {
            string name = "CreatePointAndFigureBarsRequest";
            var result = (CQGPointAndFigureBarsRequest)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual CQGOrder CreateStrategyOrder(eOrderType order_type, CQGStrategyDefinition cqg_definition, CQGAccount cqg_account, CQGAccounts cqg_accounts, Int32 order_quantity, eOrderSide order_side = eOrderSide.osdUndefined, Double limit_price = -2147483647, Double stop_price = -2147483647, String ue_name_part = "")
        {
            object[] args = new object[9] {order_type, cqg_definition, cqg_account, cqg_accounts, order_quantity, order_side, limit_price, stop_price, ue_name_part};
            string name = "CreateStrategyOrder";
            var result = (CQGOrder)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGOrder CreateStrategyOrderByExpression(eOrderType order_type, String expression_string, CQGAccount cqg_account, CQGAccounts cqg_accounts, Int32 order_quantity, eOrderSide order_side = eOrderSide.osdUndefined, Double limit_price = -2147483647, Double stop_price = -2147483647, String ue_name_part = "")
        {
            object[] args = new object[9] {order_type, expression_string, cqg_account, cqg_accounts, order_quantity, order_side, limit_price, stop_price, ue_name_part};
            string name = "CreateStrategyOrderByExpression";
            var result = (CQGOrder)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGSubMinuteBarsRequest CreateSubMinuteBarsRequest()
        {
            string name = "CreateSubMinuteBarsRequest";
            var result = (CQGSubMinuteBarsRequest)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual CQGTFlowBarsRequest CreateTFlowBarsRequest()
        {
            string name = "CreateTFlowBarsRequest";
            var result = (CQGTFlowBarsRequest)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual CQGTicksRequest CreateTicksRequest()
        {
            string name = "CreateTicksRequest";
            var result = (CQGTicksRequest)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual CQGTimedBarsRequest CreateTimedBarsRequest()
        {
            string name = "CreateTimedBarsRequest";
            var result = (CQGTimedBarsRequest)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual CQGTradingSystemRequest CreateTradingSystemRequest(String name_or_abbr)
        {
            object[] args = new object[1] {name_or_abbr};
            string name = "CreateTradingSystemRequest";
            var result = (CQGTradingSystemRequest)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGYieldsRequest CreateYieldsRequest()
        {
            string name = "CreateYieldsRequest";
            var result = (CQGYieldsRequest)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual CQGStrategyDefinition DefineStrategy(String request_string_)
        {
            object[] args = new object[1] {request_string_};
            string name = "DefineStrategy";
            var result = (CQGStrategyDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual void GWLogoff()
        {
            string name = "GWLogoff";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public virtual void GWLogon(String username_, String password_)
        {
            object[] args = new object[2] {username_, password_};
            string name = "GWLogon";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void GWOTPLogon(String username_, String password_, String otpassword_)
        {
            object[] args = new object[3] {username_, password_, otpassword_};
            string name = "GWOTPLogon";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Boolean IsValid(Object value_or_object)
        {
            object[] args = new object[1] {value_or_object};
            string name = "IsValid";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual void LogOn(String username_, String password_)
        {
            object[] args = new object[2] {username_, password_};
            string name = "LogOn";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void ModifyCompoundOrder(Int32 compound_order_id, String compound_order_guid, CQGOrderChain order_chain)
        {
            object[] args = new object[3] {compound_order_id, compound_order_guid, order_chain};
            string name = "ModifyCompoundOrder";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void NewInstrument(String symbol_)
        {
            object[] args = new object[1] {symbol_};
            string name = "NewInstrument";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void PlaceCompoundOrder(CQGOrderChain order_chain)
        {
            object[] args = new object[1] {order_chain};
            string name = "PlaceCompoundOrder";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual CQGOrdersQuery QueryOrders(CQGAccount cqg_account, CQGInstrument cqg_instrument = null, eOrderStatusFilter status_filter = eOrderStatusFilter.osfAll, DateTime date_ = default(DateTime), eOrderSide order_side = eOrderSide.osdUndefined)
        {
            object[] args = new object[5] {cqg_account, cqg_instrument, status_filter, date_, order_side};
            string name = "QueryOrders";
            var result = (CQGOrdersQuery)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual void QueryPositionsStatement(Int32 gw_account_id, DateTime date_)
        {
            object[] args = new object[2] {gw_account_id, date_};
            string name = "QueryPositionsStatement";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void QuerySummariesStatement(Int32 gw_account_id, DateTime date_)
        {
            object[] args = new object[2] {gw_account_id, date_};
            string name = "QuerySummariesStatement";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void RegisterAlgorithmicOrder(String guid_, String name_, String abbrv_, String description_, CQGAlgorithmicOrderDefinitions definitions_, Int32 icon_index = 0)
        {
            object[] args = new object[6] {guid_, name_, abbrv_, description_, definitions_, icon_index};
            string name = "RegisterAlgorithmicOrder";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void RemoveAdvancedStudy(CQGAdvancedStudy cqg_advanced_study)
        {
            object[] args = new object[1] {cqg_advanced_study};
            string name = "RemoveAdvancedStudy";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void RemoveAllAdvancedStudies()
        {
            string name = "RemoveAllAdvancedStudies";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public virtual void RemoveAllConditions()
        {
            string name = "RemoveAllConditions";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public virtual void RemoveAllConstantVolumeBars()
        {
            string name = "RemoveAllConstantVolumeBars";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public virtual void RemoveAllCustomStudies()
        {
            string name = "RemoveAllCustomStudies";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public virtual void RemoveAllExpressions()
        {
            string name = "RemoveAllExpressions";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public virtual void RemoveAllInstruments()
        {
            string name = "RemoveAllInstruments";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public virtual void RemoveAllPointAndFigureBars()
        {
            string name = "RemoveAllPointAndFigureBars";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public virtual void RemoveAllSubMinuteBars()
        {
            string name = "RemoveAllSubMinuteBars";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public virtual void RemoveAllTFlowBars()
        {
            string name = "RemoveAllTFlowBars";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public virtual void RemoveAllTicks()
        {
            string name = "RemoveAllTicks";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public virtual void RemoveAllTimedBars()
        {
            string name = "RemoveAllTimedBars";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public virtual void RemoveAllTradingSystems()
        {
            string name = "RemoveAllTradingSystems";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public virtual void RemoveAllYields()
        {
            string name = "RemoveAllYields";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public virtual void RemoveCondition(CQGCondition cqg_condition)
        {
            object[] args = new object[1] {cqg_condition};
            string name = "RemoveCondition";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void RemoveConstantVolumeBars(CQGConstantVolumeBars cqg_constant_volume_bars)
        {
            object[] args = new object[1] {cqg_constant_volume_bars};
            string name = "RemoveConstantVolumeBars";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void RemoveCustomStudy(CQGCustomStudy cqg_custom_study)
        {
            object[] args = new object[1] {cqg_custom_study};
            string name = "RemoveCustomStudy";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void RemoveExpression(CQGExpression cqg_expression)
        {
            object[] args = new object[1] {cqg_expression};
            string name = "RemoveExpression";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void RemoveInstrument(CQGInstrument cqg_instrument)
        {
            object[] args = new object[1] {cqg_instrument};
            string name = "RemoveInstrument";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void RemoveInstrumentsGroup(CQGInstrumentsGroup instruments_group)
        {
            object[] args = new object[1] {instruments_group};
            string name = "RemoveInstrumentsGroup";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void RemovePointAndFigureBars(CQGPointAndFigureBars cqg_point_and_figure_bars)
        {
            object[] args = new object[1] {cqg_point_and_figure_bars};
            string name = "RemovePointAndFigureBars";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void RemoveSubMinuteBars(CQGSubMinuteBars cqg_subminute_bars)
        {
            object[] args = new object[1] {cqg_subminute_bars};
            string name = "RemoveSubMinuteBars";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void RemoveTFlowBars(CQGTFlowBars cqg_tflow_bars)
        {
            object[] args = new object[1] {cqg_tflow_bars};
            string name = "RemoveTFlowBars";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void RemoveTicks(CQGTicks cqg_ticks)
        {
            object[] args = new object[1] {cqg_ticks};
            string name = "RemoveTicks";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void RemoveTimedBars(CQGTimedBars cqg_timed_bars)
        {
            object[] args = new object[1] {cqg_timed_bars};
            string name = "RemoveTimedBars";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void RemoveTradingSystem(CQGTradingSystem cqg_trading_system)
        {
            object[] args = new object[1] {cqg_trading_system};
            string name = "RemoveTradingSystem";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void RemoveYields(CQGYields cqg_yields)
        {
            object[] args = new object[1] {cqg_yields};
            string name = "RemoveYields";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual CQGAdvancedStudy RequestAdvancedStudy(CQGAdvancedStudyRequest cqg_advanced_study_request)
        {
            object[] args = new object[1] {cqg_advanced_study_request};
            string name = "RequestAdvancedStudy";
            var result = (CQGAdvancedStudy)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual void RequestAdvancedStudyDefinitions()
        {
            string name = "RequestAdvancedStudyDefinitions";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public virtual CQGBarsTimestamps RequestBarsTimestamps(CQGTimedBarsRequest cqg_timestamps_request)
        {
            object[] args = new object[1] {cqg_timestamps_request};
            string name = "RequestBarsTimestamps";
            var result = (CQGBarsTimestamps)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual void RequestCommodityInstruments(String commodity_name, eInstrumentType instrument_types, Boolean tradable_only = false)
        {
            object[] args = new object[3] {commodity_name, instrument_types, tradable_only};
            string name = "RequestCommodityInstruments";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual CQGCondition RequestCondition(CQGConditionRequest cqg_condition_request)
        {
            object[] args = new object[1] {cqg_condition_request};
            string name = "RequestCondition";
            var result = (CQGCondition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual void RequestConditionDefinitions()
        {
            string name = "RequestConditionDefinitions";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public virtual CQGConstantVolumeBars RequestConstantVolumeBars(CQGConstantVolumeBarsRequest cqg_constant_volume_bars_request)
        {
            object[] args = new object[1] {cqg_constant_volume_bars_request};
            string name = "RequestConstantVolumeBars";
            var result = (CQGConstantVolumeBars)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual void RequestCustomSessions()
        {
            string name = "RequestCustomSessions";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public virtual CQGCustomStudy RequestCustomStudy(CQGCustomStudyRequest cqg_custom_study_request)
        {
            object[] args = new object[1] {cqg_custom_study_request};
            string name = "RequestCustomStudy";
            var result = (CQGCustomStudy)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual void RequestCustomStudyDefinitions()
        {
            string name = "RequestCustomStudyDefinitions";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public virtual void RequestDataSources()
        {
            string name = "RequestDataSources";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public virtual void RequestDataSourceSymbols(String data_source_abbreviation)
        {
            object[] args = new object[1] {data_source_abbreviation};
            string name = "RequestDataSourceSymbols";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual CQGExpression RequestExpression(CQGExpressionRequest cqg_expression_request)
        {
            object[] args = new object[1] {cqg_expression_request};
            string name = "RequestExpression";
            var result = (CQGExpression)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual void RequestHistoricalSessions(CQGHistoricalSessionsRequest cqg_historical_sessions_request)
        {
            object[] args = new object[1] {cqg_historical_sessions_request};
            string name = "RequestHistoricalSessions";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void RequestInstrumentsGroup(CQGInstrumentsGroupRequest group_request, Boolean trace_group_changes)
        {
            object[] args = new object[2] {group_request, trace_group_changes};
            string name = "RequestInstrumentsGroup";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void RequestManualFills(Int32 gw_account_id, eManualFillsDataLevel update_level)
        {
            object[] args = new object[2] {gw_account_id, update_level};
            string name = "RequestManualFills";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void RequestManualFillUpdate(CQGManualFillRequest cqg_manual_fill_request)
        {
            object[] args = new object[1] {cqg_manual_fill_request};
            string name = "RequestManualFillUpdate";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual CQGPointAndFigureBars RequestPointAndFigureBars(CQGPointAndFigureBarsRequest cqg_point_and_figure_bars_request)
        {
            object[] args = new object[1] {cqg_point_and_figure_bars_request};
            string name = "RequestPointAndFigureBars";
            var result = (CQGPointAndFigureBars)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual void RequestQFormulaDefinitions()
        {
            string name = "RequestQFormulaDefinitions";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public virtual CQGSubMinuteBars RequestSubMinuteBars(CQGSubMinuteBarsRequest cqg_subminute_bars_request)
        {
            object[] args = new object[1] {cqg_subminute_bars_request};
            string name = "RequestSubMinuteBars";
            var result = (CQGSubMinuteBars)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGTFlowBars RequestTFlowBars(CQGTFlowBarsRequest cqg_tflow_bars_request)
        {
            object[] args = new object[1] {cqg_tflow_bars_request};
            string name = "RequestTFlowBars";
            var result = (CQGTFlowBars)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGTicks RequestTicks(CQGTicksRequest cqg_ticks_request)
        {
            object[] args = new object[1] {cqg_ticks_request};
            string name = "RequestTicks";
            var result = (CQGTicks)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGTimedBars RequestTimedBars(CQGTimedBarsRequest cqg_timed_bars_request)
        {
            object[] args = new object[1] {cqg_timed_bars_request};
            string name = "RequestTimedBars";
            var result = (CQGTimedBars)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual void RequestTradableCommodities(Int32 gw_account_id = 0)
        {
            object[] args = new object[1] {gw_account_id};
            string name = "RequestTradableCommodities";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void RequestTradableExchanges(Int32 gw_account_id = 0)
        {
            object[] args = new object[1] {gw_account_id};
            string name = "RequestTradableExchanges";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual CQGTradingSystem RequestTradingSystem(CQGTradingSystemRequest cqg_trading_system_request)
        {
            object[] args = new object[1] {cqg_trading_system_request};
            string name = "RequestTradingSystem";
            var result = (CQGTradingSystem)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual void RequestTradingSystemDefinitions()
        {
            string name = "RequestTradingSystemDefinitions";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public virtual CQGYields RequestYields(CQGYieldsRequest cqg_yields_request)
        {
            object[] args = new object[1] {cqg_yields_request};
            string name = "RequestYields";
            var result = (CQGYields)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual void Shutdown()
        {
            string name = "Shutdown";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public virtual void Startup()
        {
            string name = "Startup";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public virtual void SubscribeNewInstrument(CQGInstrumentSubscriptionRequest instrument_request)
        {
            object[] args = new object[1] {instrument_request};
            string name = "SubscribeNewInstrument";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void TerminateCQGIC(Boolean start_again = false)
        {
            object[] args = new object[1] {start_again};
            string name = "TerminateCQGIC";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual void UnregisterAlgorithmicOrder(String guid_)
        {
            object[] args = new object[1] {guid_};
            string name = "UnregisterAlgorithmicOrder";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        #endregion

        #region TimerTickHardler
        private void eventCheckingTimer_Tick(Object source, System.Timers.ElapsedEventArgs e)
        {
        }

        #endregion

    }

    public class CQGChangedTradeEntriesClass : ICQGChangedTradeEntries, IEnumerable, CQGChangedTradeEntries
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGChangedTradeEntriesClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGChangedTradeEntriesClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public eTradeChangeCategory ChangeFilter
        {
            get
            {
                string name = "ChangeFilter";
                var result = (eTradeChangeCategory)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGChangedTradeEntry this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGChangedTradeEntry)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGChangedTradeEntryClass : ICQGChangedTradeEntry, CQGChangedTradeEntry
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGChangedTradeEntryClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGChangedTradeEntryClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public eTradeChangeCategory ChangeCategory
        {
            get
            {
                string name = "ChangeCategory";
                var result = (eTradeChangeCategory)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTradeEntry TradeEntry
        {
            get
            {
                string name = "TradeEntry";
                var result = (CQGTradeEntry)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGChangedTradeExitClass : ICQGChangedTradeExit, CQGChangedTradeExit
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGChangedTradeExitClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGChangedTradeExitClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public eTradeChangeCategory ChangeCategory
        {
            get
            {
                string name = "ChangeCategory";
                var result = (eTradeChangeCategory)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTradeExit TradeExit
        {
            get
            {
                string name = "TradeExit";
                var result = (CQGTradeExit)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGChangedTradeExitsClass : ICQGChangedTradeExits, IEnumerable, CQGChangedTradeExits
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGChangedTradeExitsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGChangedTradeExitsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public eTradeChangeCategory ChangeFilter
        {
            get
            {
                string name = "ChangeFilter";
                var result = (eTradeChangeCategory)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGChangedTradeExit this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGChangedTradeExit)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGCommoditiesClass : ICQGCommodities, IEnumerable, CQGCommodities
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGCommoditiesClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGCommoditiesClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 GWAccountID
        {
            get
            {
                string name = "GWAccountID";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGCommodityInstrumentsClass : ICQGCommodityInstruments, IEnumerable, CQGCommodityInstruments
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGCommodityInstrumentsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGCommodityInstrumentsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Boolean IsTradableOnly
        {
            get
            {
                string name = "IsTradableOnly";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGConditionClass : ICQGCondition, IEnumerable, CQGCondition
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGConditionClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGConditionClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGConditionDefinition Definition
        {
            get
            {
                string name = "Definition";
                var result = (CQGConditionDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime EndTimestamp
        {
            get
            {
                string name = "EndTimestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Id
        {
            get
            {
                string name = "Id";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGConditionResult this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGConditionResult)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGError LastError
        {
            get
            {
                string name = "LastError";
                var result = (CQGError)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGConditionRequest Request
        {
            get
            {
                string name = "Request";
                var result = (CQGConditionRequest)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime StartTimestamp
        {
            get
            {
                string name = "StartTimestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eRequestStatus Status
        {
            get
            {
                string name = "Status";
                var result = (eRequestStatus)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Object this[String tag_name]
        {
            get
            {
                string name = "Tag";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Tag";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Object get_Tag(String tag_name)
        {
            object[] args = new object[1] {tag_name};
            string name = "get_Tag";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Int32 IndexForDate(DateTime date_)
        {
            object[] args = new object[1] {date_};
            string name = "IndexForDate";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual void set_Tag(String tag_name, Object pVal)
        {
            object[] args = new object[2] {tag_name, pVal};
            string name = "set_Tag";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGConditionDefinitionClass : ICQGConditionDefinition, CQGConditionDefinition
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGConditionDefinitionClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGConditionDefinitionClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public String Name
        {
            get
            {
                string name = "Name";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGParameterDefinitions ParameterDefinitions
        {
            get
            {
                string name = "ParameterDefinitions";
                var result = (CQGParameterDefinitions)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGConditionDefinitionsClass : ICQGConditionDefinitions, IEnumerable, CQGConditionDefinitions
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGConditionDefinitionsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGConditionDefinitionsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGConditionDefinition this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGConditionDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGConditionDefinition this[String condition_name]
        {
            get
            {
                string name = "ItemByName";
                var result = (CQGConditionDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGConditionDefinition get_ItemByName(String condition_name)
        {
            object[] args = new object[1] {condition_name};
            string name = "get_ItemByName";
            var result = (CQGConditionDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGConditionRequestClass : ICQGConditionRequest, CQGConditionRequest
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGConditionRequestClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGConditionRequestClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public String BaseExpression
        {
            get
            {
                string name = "BaseExpression";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "BaseExpression";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eTimeSeriesContinuationType Continuation
        {
            get
            {
                string name = "Continuation";
                var result = (eTimeSeriesContinuationType)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Continuation";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 DaysBeforeExpiration
        {
            get
            {
                string name = "DaysBeforeExpiration";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "DaysBeforeExpiration";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public CQGConditionDefinition Definition
        {
            get
            {
                string name = "Definition";
                var result = (CQGConditionDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Boolean EqualizeCloses
        {
            get
            {
                string name = "EqualizeCloses";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "EqualizeCloses";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eHistoricalPeriod HistoricalPeriod
        {
            get
            {
                string name = "HistoricalPeriod";
                var result = (eHistoricalPeriod)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "HistoricalPeriod";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean IncludeEnd
        {
            get
            {
                string name = "IncludeEnd";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "IncludeEnd";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 IntradayPeriod
        {
            get
            {
                string name = "IntradayPeriod";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "IntradayPeriod";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object this[Object key_]
        {
            get
            {
                string name = "Parameter";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Parameter";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object RangeEnd
        {
            get
            {
                string name = "RangeEnd";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RangeEnd";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object RangeStart
        {
            get
            {
                string name = "RangeStart";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RangeStart";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 RecalcPeriod
        {
            get
            {
                string name = "RecalcPeriod";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RecalcPeriod";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eSessionFlag SessionFlags
        {
            get
            {
                string name = "SessionFlags";
                var result = (eSessionFlag)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "SessionFlags";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object SessionsFilter
        {
            get
            {
                string name = "SessionsFilter";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "SessionsFilter";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eTimeSeriesSubscriptionLevel SubscriptionLevel
        {
            get
            {
                string name = "SubscriptionLevel";
                var result = (eTimeSeriesSubscriptionLevel)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "SubscriptionLevel";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean UpdatesEnabled
        {
            get
            {
                string name = "UpdatesEnabled";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "UpdatesEnabled";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Object get_Parameter(Object key_)
        {
            object[] args = new object[1] {key_};
            string name = "get_Parameter";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual void set_Parameter(Object key_, Object pVal)
        {
            object[] args = new object[2] {key_, pVal};
            string name = "set_Parameter";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGConditionResultClass : ICQGConditionResult, CQGConditionResult
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGConditionResultClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGConditionResultClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public DateTime Timestamp
        {
            get
            {
                string name = "Timestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Boolean Value
        {
            get
            {
                string name = "Value";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGConditionsClass : ICQGConditions, IEnumerable, CQGConditions
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGConditionsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGConditionsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGCondition this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGCondition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGCondition this[String id_]
        {
            get
            {
                string name = "ItemById";
                var result = (CQGCondition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGCondition get_ItemById(String id_)
        {
            object[] args = new object[1] {id_};
            string name = "get_ItemById";
            var result = (CQGCondition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGConstantVolumeBarClass : ICQGConstantVolumeBar, CQGConstantVolumeBar
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGConstantVolumeBarClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGConstantVolumeBarClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 ActualVolume
        {
            get
            {
                string name = "ActualVolume";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 AskVolume
        {
            get
            {
                string name = "AskVolume";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Avg
        {
            get
            {
                string name = "Avg";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 BidVolume
        {
            get
            {
                string name = "BidVolume";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Close
        {
            get
            {
                string name = "Close";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double High
        {
            get
            {
                string name = "High";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double HLC3
        {
            get
            {
                string name = "HLC3";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Low
        {
            get
            {
                string name = "Low";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Mid
        {
            get
            {
                string name = "Mid";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Open
        {
            get
            {
                string name = "Open";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Range
        {
            get
            {
                string name = "Range";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 TickVolume
        {
            get
            {
                string name = "TickVolume";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime Timestamp
        {
            get
            {
                string name = "Timestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 TimestampOffset
        {
            get
            {
                string name = "TimestampOffset";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double TrueHigh
        {
            get
            {
                string name = "TrueHigh";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double TrueLow
        {
            get
            {
                string name = "TrueLow";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double TrueRange
        {
            get
            {
                string name = "TrueRange";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGConstantVolumeBarsClass : ICQGConstantVolumeBars, IEnumerable, CQGConstantVolumeBars
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGConstantVolumeBarsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGConstantVolumeBarsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime EndTimestamp
        {
            get
            {
                string name = "EndTimestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Id
        {
            get
            {
                string name = "Id";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGConstantVolumeBar this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGConstantVolumeBar)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGError LastError
        {
            get
            {
                string name = "LastError";
                var result = (CQGError)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGConstantVolumeBarsRequest Request
        {
            get
            {
                string name = "Request";
                var result = (CQGConstantVolumeBarsRequest)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime StartTimestamp
        {
            get
            {
                string name = "StartTimestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eRequestStatus Status
        {
            get
            {
                string name = "Status";
                var result = (eRequestStatus)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Object this[String tag_name]
        {
            get
            {
                string name = "Tag";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Tag";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Object get_Tag(String tag_name)
        {
            object[] args = new object[1] {tag_name};
            string name = "get_Tag";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual void set_Tag(String tag_name, Object pVal)
        {
            object[] args = new object[2] {tag_name, pVal};
            string name = "set_Tag";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGConstantVolumeBarsCollectionClass : ICQGConstantVolumeBarsCollection, IEnumerable, CQGConstantVolumeBarsCollection
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGConstantVolumeBarsCollectionClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGConstantVolumeBarsCollectionClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGConstantVolumeBars this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGConstantVolumeBars)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGConstantVolumeBars this[String id_]
        {
            get
            {
                string name = "ItemById";
                var result = (CQGConstantVolumeBars)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGConstantVolumeBars get_ItemById(String id_)
        {
            object[] args = new object[1] {id_};
            string name = "get_ItemById";
            var result = (CQGConstantVolumeBars)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGConstantVolumeBarsRequestClass : ICQGConstantVolumeBarsRequest, CQGConstantVolumeBarsRequest
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGConstantVolumeBarsRequestClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGConstantVolumeBarsRequestClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public eTimeSeriesContinuationType Continuation
        {
            get
            {
                string name = "Continuation";
                var result = (eTimeSeriesContinuationType)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Continuation";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 DaysBeforeExpiration
        {
            get
            {
                string name = "DaysBeforeExpiration";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "DaysBeforeExpiration";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean EqualizeCloses
        {
            get
            {
                string name = "EqualizeCloses";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "EqualizeCloses";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean IncludeEnd
        {
            get
            {
                string name = "IncludeEnd";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "IncludeEnd";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean IncludeFlatTicks
        {
            get
            {
                string name = "IncludeFlatTicks";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "IncludeFlatTicks";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object RangeEnd
        {
            get
            {
                string name = "RangeEnd";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RangeEnd";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object RangeStart
        {
            get
            {
                string name = "RangeStart";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RangeStart";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 RecalcPeriod
        {
            get
            {
                string name = "RecalcPeriod";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RecalcPeriod";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eSessionFlag SessionFlags
        {
            get
            {
                string name = "SessionFlags";
                var result = (eSessionFlag)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "SessionFlags";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object SessionsFilter
        {
            get
            {
                string name = "SessionsFilter";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "SessionsFilter";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eTimeSeriesSubscriptionLevel SubscriptionLevel
        {
            get
            {
                string name = "SubscriptionLevel";
                var result = (eTimeSeriesSubscriptionLevel)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "SubscriptionLevel";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public String Symbol
        {
            get
            {
                string name = "Symbol";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Symbol";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean UpdatesEnabled
        {
            get
            {
                string name = "UpdatesEnabled";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "UpdatesEnabled";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 VolumeLevel
        {
            get
            {
                string name = "VolumeLevel";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "VolumeLevel";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eCvbVolumeType VolumeType
        {
            get
            {
                string name = "VolumeType";
                var result = (eCvbVolumeType)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "VolumeType";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGCurrencyRateClass : ICQGCurrencyRate, CQGCurrencyRate
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGCurrencyRateClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGCurrencyRateClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public String BaseCurrencyName
        {
            get
            {
                string name = "BaseCurrencyName";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGCEL CEL
        {
            get
            {
                string name = "CEL";
                var result = (CQGCEL)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String CurrencyName
        {
            get
            {
                string name = "CurrencyName";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 FcmID
        {
            get
            {
                string name = "FcmID";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Rate
        {
            get
            {
                string name = "Rate";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime ServerTimestamp
        {
            get
            {
                string name = "ServerTimestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime Timestamp
        {
            get
            {
                string name = "Timestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGCurrencyRatesClass : ICQGCurrencyRates, IEnumerable, CQGCurrencyRates
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGCurrencyRatesClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGCurrencyRatesClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGCurrencyRate this[Int32 fcm_id, String currency_, String base_currency = ""]
        {
            get
            {
                string name = "Item";
                var result = (CQGCurrencyRate)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGCurveDefinitionClass : ICQGCurveDefinition, CQGCurveDefinition
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGCurveDefinitionClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGCurveDefinitionClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public String Name
        {
            get
            {
                string name = "Name";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGCurveDefinitionsClass : ICQGCurveDefinitions, IEnumerable, CQGCurveDefinitions
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGCurveDefinitionsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGCurveDefinitionsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGCurveDefinition this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGCurveDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGCurveDefinition this[String curve_name]
        {
            get
            {
                string name = "ItemByName";
                var result = (CQGCurveDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGCurveDefinition get_ItemByName(String curve_name)
        {
            object[] args = new object[1] {curve_name};
            string name = "get_ItemByName";
            var result = (CQGCurveDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGCurveHeadersClass : ICQGCurveHeaders, IEnumerable, CQGCurveHeaders
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGCurveHeadersClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGCurveHeadersClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGCurvesClass : ICQGCurves, IEnumerable, CQGCurves
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGCurvesClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGCurvesClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double this[Object key_]
        {
            get
            {
                string name = "Item";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime Timestamp
        {
            get
            {
                string name = "Timestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 TimestampOffset
        {
            get
            {
                string name = "TimestampOffset";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGCustomStudiesClass : ICQGCustomStudies, IEnumerable, CQGCustomStudies
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGCustomStudiesClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGCustomStudiesClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGCustomStudy this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGCustomStudy)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGCustomStudy this[String id_]
        {
            get
            {
                string name = "ItemById";
                var result = (CQGCustomStudy)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGCustomStudy get_ItemById(String id_)
        {
            object[] args = new object[1] {id_};
            string name = "get_ItemById";
            var result = (CQGCustomStudy)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGCustomStudyClass : ICQGCustomStudy, IEnumerable, CQGCustomStudy
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGCustomStudyClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGCustomStudyClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGCurveHeaders CurveHeaders
        {
            get
            {
                string name = "CurveHeaders";
                var result = (CQGCurveHeaders)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGCustomStudyDefinition Definition
        {
            get
            {
                string name = "Definition";
                var result = (CQGCustomStudyDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime EndTimestamp
        {
            get
            {
                string name = "EndTimestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Id
        {
            get
            {
                string name = "Id";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGCurves this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGCurves)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGError LastError
        {
            get
            {
                string name = "LastError";
                var result = (CQGError)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGCustomStudyRequest Request
        {
            get
            {
                string name = "Request";
                var result = (CQGCustomStudyRequest)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime StartTimestamp
        {
            get
            {
                string name = "StartTimestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eRequestStatus Status
        {
            get
            {
                string name = "Status";
                var result = (eRequestStatus)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Object this[String tag_name]
        {
            get
            {
                string name = "Tag";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Tag";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Object get_Tag(String tag_name)
        {
            object[] args = new object[1] {tag_name};
            string name = "get_Tag";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Int32 IndexForDate(DateTime date_)
        {
            object[] args = new object[1] {date_};
            string name = "IndexForDate";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual void set_Tag(String tag_name, Object pVal)
        {
            object[] args = new object[2] {tag_name, pVal};
            string name = "set_Tag";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGCustomStudyDefinitionClass : ICQGCustomStudyDefinition, CQGCustomStudyDefinition
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGCustomStudyDefinitionClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGCustomStudyDefinitionClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public String Abbreviation
        {
            get
            {
                string name = "Abbreviation";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGCurveDefinitions CurveDefinitions
        {
            get
            {
                string name = "CurveDefinitions";
                var result = (CQGCurveDefinitions)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Name
        {
            get
            {
                string name = "Name";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGParameterDefinitions ParameterDefinitions
        {
            get
            {
                string name = "ParameterDefinitions";
                var result = (CQGParameterDefinitions)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGCustomStudyDefinitionsClass : ICQGCustomStudyDefinitions, IEnumerable, CQGCustomStudyDefinitions
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGCustomStudyDefinitionsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGCustomStudyDefinitionsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGCustomStudyDefinition this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGCustomStudyDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGCustomStudyDefinition this[String custom_study_abbreviation]
        {
            get
            {
                string name = "ItemByAbbreviation";
                var result = (CQGCustomStudyDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGCustomStudyDefinition get_ItemByAbbreviation(String custom_study_abbreviation)
        {
            object[] args = new object[1] {custom_study_abbreviation};
            string name = "get_ItemByAbbreviation";
            var result = (CQGCustomStudyDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGCustomStudyDefinition get_ItemByName(String custom_study_name)
        {
            object[] args = new object[1] {custom_study_name};
            string name = "get_ItemByName";
            var result = (CQGCustomStudyDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGCustomStudyRequestClass : ICQGCustomStudyRequest, CQGCustomStudyRequest
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGCustomStudyRequestClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGCustomStudyRequestClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public String BaseExpression
        {
            get
            {
                string name = "BaseExpression";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "BaseExpression";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eTimeSeriesContinuationType Continuation
        {
            get
            {
                string name = "Continuation";
                var result = (eTimeSeriesContinuationType)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Continuation";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 DaysBeforeExpiration
        {
            get
            {
                string name = "DaysBeforeExpiration";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "DaysBeforeExpiration";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public CQGCustomStudyDefinition Definition
        {
            get
            {
                string name = "Definition";
                var result = (CQGCustomStudyDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Boolean EqualizeCloses
        {
            get
            {
                string name = "EqualizeCloses";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "EqualizeCloses";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eHistoricalPeriod HistoricalPeriod
        {
            get
            {
                string name = "HistoricalPeriod";
                var result = (eHistoricalPeriod)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "HistoricalPeriod";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean IncludeEnd
        {
            get
            {
                string name = "IncludeEnd";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "IncludeEnd";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 IntradayPeriod
        {
            get
            {
                string name = "IntradayPeriod";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "IntradayPeriod";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object this[Object key_]
        {
            get
            {
                string name = "Parameter";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Parameter";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object RangeEnd
        {
            get
            {
                string name = "RangeEnd";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RangeEnd";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object RangeStart
        {
            get
            {
                string name = "RangeStart";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RangeStart";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 RecalcPeriod
        {
            get
            {
                string name = "RecalcPeriod";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RecalcPeriod";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eSessionFlag SessionFlags
        {
            get
            {
                string name = "SessionFlags";
                var result = (eSessionFlag)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "SessionFlags";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object SessionsFilter
        {
            get
            {
                string name = "SessionsFilter";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "SessionsFilter";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eTimeSeriesSubscriptionLevel SubscriptionLevel
        {
            get
            {
                string name = "SubscriptionLevel";
                var result = (eTimeSeriesSubscriptionLevel)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "SubscriptionLevel";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean UpdatesEnabled
        {
            get
            {
                string name = "UpdatesEnabled";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "UpdatesEnabled";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Object get_Parameter(Object key_)
        {
            object[] args = new object[1] {key_};
            string name = "get_Parameter";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual void IncludeCurve(Object curve_key)
        {
            object[] args = new object[1] {curve_key};
            string name = "IncludeCurve";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Boolean IsCurveIncluded(Object curve_key)
        {
            object[] args = new object[1] {curve_key};
            string name = "IsCurveIncluded";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual void set_Parameter(Object key_, Object pVal)
        {
            object[] args = new object[2] {key_, pVal};
            string name = "set_Parameter";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGDataSourceClass : ICQGDataSource, CQGDataSource
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGDataSourceClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGDataSourceClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public String Abbreviation
        {
            get
            {
                string name = "Abbreviation";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Name
        {
            get
            {
                string name = "Name";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eDataSourceStatus Status
        {
            get
            {
                string name = "Status";
                var result = (eDataSourceStatus)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eSymbolType SymbolTypes
        {
            get
            {
                string name = "SymbolTypes";
                var result = (eSymbolType)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGDataSourcesClass : ICQGDataSources, IEnumerable, CQGDataSources
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGDataSourcesClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGDataSourcesClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGDataSource this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGDataSource)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGDataSource this[String data_source_abbreviation]
        {
            get
            {
                string name = "ItemByAbbreviation";
                var result = (CQGDataSource)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGDataSource get_ItemByAbbreviation(String data_source_abbreviation)
        {
            object[] args = new object[1] {data_source_abbreviation};
            string name = "get_ItemByAbbreviation";
            var result = (CQGDataSource)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGDataSourceSymbolClass : ICQGDataSourceSymbol, CQGDataSourceSymbol
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGDataSourceSymbolClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGDataSourceSymbolClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public String Abbreviation
        {
            get
            {
                string name = "Abbreviation";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Description
        {
            get
            {
                string name = "Description";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eSymbolType Type
        {
            get
            {
                string name = "Type";
                var result = (eSymbolType)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGDataSourceSymbolsClass : ICQGDataSourceSymbols, IEnumerable, CQGDataSourceSymbols
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGDataSourceSymbolsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGDataSourceSymbolsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String DataSourceAbbreviation
        {
            get
            {
                string name = "DataSourceAbbreviation";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGDataSourceSymbol this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGDataSourceSymbol)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGDirectEventsAccessorClass : ICQGDirectEventsAccessor, CQGDirectEventsAccessor, _ICQGCELInstrumentEvents_Event, _ICQGCELGeneralEvents_Event
    {
        private string thisObjUnqKey;

        private System.Timers.Timer eventCheckingTimer;

        #region Constructors
        internal CQGDirectEventsAccessorClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
            eventCheckingTimer = new System.Timers.Timer();
            eventCheckingTimer.Interval = 30;
            eventCheckingTimer.Elapsed += eventCheckingTimer_Tick;
            eventCheckingTimer.AutoReset = true;
            eventCheckingTimer.Enabled = true;
        }

        #endregion

        #region Destructor
        ~CQGDirectEventsAccessorClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Events
        public event _ICQGCELGeneralEvents_CELStartedEventHandler CELStarted;

        public event _ICQGCELGeneralEvents_CurrencyRatesChangedEventHandler CurrencyRatesChanged;

        public event _ICQGCELGeneralEvents_DataConnectionStatusChangedEventHandler DataConnectionStatusChanged;

        public event _ICQGCELGeneralEvents_DataErrorEventHandler DataError;

        public event _ICQGCELGeneralEvents_GWConnectionStatusChangedEventHandler GWConnectionStatusChanged;

        public event _ICQGCELGeneralEvents_IsReadyEventHandler IsReady;

        public event _ICQGCELGeneralEvents_LineTimeChangedEventHandler LineTimeChanged;

        public event _ICQGCELGeneralEvents_OnIdleEventHandler OnIdle;

        public event _ICQGCELInstrumentEvents_CommodityInstrumentsResolvedEventHandler CommodityInstrumentsResolved;

        public event _ICQGCELInstrumentEvents_IncorrectSymbolEventHandler IncorrectSymbol;

        public event _ICQGCELInstrumentEvents_InstrumentChangedEventHandler InstrumentChanged;

        public event _ICQGCELInstrumentEvents_InstrumentDOMChangedEventHandler InstrumentDOMChanged;

        public event _ICQGCELInstrumentEvents_InstrumentsGroupChangedEventHandler InstrumentsGroupChanged;

        public event _ICQGCELInstrumentEvents_InstrumentsGroupResolvedEventHandler InstrumentsGroupResolved;

        public event _ICQGCELInstrumentEvents_InstrumentSubscribedEventHandler InstrumentSubscribed;

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

        #region TimerTickHardler
        private void eventCheckingTimer_Tick(Object source, System.Timers.ElapsedEventArgs e)
        {
        }

        #endregion

    }

    public class CQGDOMQuotesClass : ICQGDOMQuotes, IEnumerable, CQGDOMQuotes
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGDOMQuotesClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGDOMQuotesClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGQuote this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGQuote)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGQuote this[Double price_, Boolean round_to_better = true]
        {
            get
            {
                string name = "ItemByPrice";
                var result = (CQGQuote)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGQuote get_ItemByPrice(Double price_, Boolean round_to_better = true)
        {
            object[] args = new object[2] {price_, round_to_better};
            string name = "get_ItemByPrice";
            var result = (CQGQuote)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGEnvironmentClass : ICQGEnvironment, CQGEnvironment
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGEnvironmentClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGEnvironmentClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public CQGCEL CEL
        {
            get
            {
                string name = "CEL";
                var result = (CQGCEL)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String CELVersion
        {
            get
            {
                string name = "CELVersion";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 CQGSerialNumber
        {
            get
            {
                string name = "CQGSerialNumber";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String CQGVersion
        {
            get
            {
                string name = "CQGVersion";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eConnectionStatus DataConnectionStatus
        {
            get
            {
                string name = "DataConnectionStatus";
                var result = (eConnectionStatus)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eConnectionStatus GWConnectionStatus
        {
            get
            {
                string name = "GWConnectionStatus";
                var result = (eConnectionStatus)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String GWLogonName
        {
            get
            {
                string name = "GWLogonName";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGError LastError
        {
            get
            {
                string name = "LastError";
                var result = (CQGError)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime LineTime
        {
            get
            {
                string name = "LineTime";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime LocalTime
        {
            get
            {
                string name = "LocalTime";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 MessagesPending
        {
            get
            {
                string name = "MessagesPending";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 OrdersPending
        {
            get
            {
                string name = "OrdersPending";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGRemoteOpenAPISession RemoteOpenAPISession
        {
            get
            {
                string name = "RemoteOpenAPISession";
                var result = (CQGRemoteOpenAPISession)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGErrorClass : ICQGError, CQGError
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGErrorClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGErrorClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Code
        {
            get
            {
                string name = "Code";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Description
        {
            get
            {
                string name = "Description";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Object Owner
        {
            get
            {
                string name = "Owner";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGExchangesClass : ICQGExchanges, IEnumerable, CQGExchanges
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGExchangesClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGExchangesClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 GWAccountID
        {
            get
            {
                string name = "GWAccountID";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGExecutionPatternClass : ICQGExecutionPattern, CQGExecutionPattern
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGExecutionPatternClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGExecutionPatternClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public CQGExecutionPatternParameters Parameters
        {
            get
            {
                string name = "Parameters";
                var result = (CQGExecutionPatternParameters)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String PatternString
        {
            get
            {
                string name = "PatternString";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGExecutionPatternParameterClass : ICQGExecutionPatternParameter, CQGExecutionPatternParameter
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGExecutionPatternParameterClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGExecutionPatternParameterClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public String Name
        {
            get
            {
                string name = "Name";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGExecutionPatternParameters Parameters
        {
            get
            {
                string name = "Parameters";
                var result = (CQGExecutionPatternParameters)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eExecutionPatternParameterType Type
        {
            get
            {
                string name = "Type";
                var result = (eExecutionPatternParameterType)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Value
        {
            get
            {
                string name = "Value";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Value";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGExecutionPatternParametersClass : ICQGExecutionPatternParameters, IEnumerable, CQGExecutionPatternParameters
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGExecutionPatternParametersClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGExecutionPatternParametersClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGExecutionPatternParameter this[Object index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGExecutionPatternParameter)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual CQGExecutionPatternParameter Add(String name_, eExecutionPatternParameterType type_, String value_ = "")
        {
            object[] args = new object[3] {name_, type_, value_};
            string name = "Add";
            var result = (CQGExecutionPatternParameter)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual void Remove(Object index_)
        {
            object[] args = new object[1] {index_};
            string name = "Remove";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGExpressionClass : ICQGExpression, IEnumerable, CQGExpression
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGExpressionClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGExpressionClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime EndTimestamp
        {
            get
            {
                string name = "EndTimestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Id
        {
            get
            {
                string name = "Id";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGExpressionOutputs this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGExpressionOutputs)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGError LastError
        {
            get
            {
                string name = "LastError";
                var result = (CQGError)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGExpressionOutputHeaders OutputHeaders
        {
            get
            {
                string name = "OutputHeaders";
                var result = (CQGExpressionOutputHeaders)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGExpressionRequest Request
        {
            get
            {
                string name = "Request";
                var result = (CQGExpressionRequest)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime StartTimestamp
        {
            get
            {
                string name = "StartTimestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eRequestStatus Status
        {
            get
            {
                string name = "Status";
                var result = (eRequestStatus)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Object this[String tag_name]
        {
            get
            {
                string name = "Tag";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Tag";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Object get_Tag(String tag_name)
        {
            object[] args = new object[1] {tag_name};
            string name = "get_Tag";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Int32 IndexForDate(DateTime date_)
        {
            object[] args = new object[1] {date_};
            string name = "IndexForDate";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual void set_Tag(String tag_name, Object pVal)
        {
            object[] args = new object[2] {tag_name, pVal};
            string name = "set_Tag";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGExpressionOutputHeadersClass : ICQGExpressionOutputHeaders, IEnumerable, CQGExpressionOutputHeaders
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGExpressionOutputHeadersClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGExpressionOutputHeadersClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGExpressionOutputsClass : ICQGExpressionOutputs, IEnumerable, CQGExpressionOutputs
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGExpressionOutputsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGExpressionOutputsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double this[Object key_]
        {
            get
            {
                string name = "Item";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime Timestamp
        {
            get
            {
                string name = "Timestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 TimestampOffset
        {
            get
            {
                string name = "TimestampOffset";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGExpressionRequestClass : ICQGExpressionRequest, CQGExpressionRequest
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGExpressionRequestClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGExpressionRequestClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public eTimeSeriesContinuationType Continuation
        {
            get
            {
                string name = "Continuation";
                var result = (eTimeSeriesContinuationType)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Continuation";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 DaysBeforeExpiration
        {
            get
            {
                string name = "DaysBeforeExpiration";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "DaysBeforeExpiration";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean EqualizeCloses
        {
            get
            {
                string name = "EqualizeCloses";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "EqualizeCloses";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eHistoricalPeriod HistoricalPeriod
        {
            get
            {
                string name = "HistoricalPeriod";
                var result = (eHistoricalPeriod)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "HistoricalPeriod";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean IncludeEnd
        {
            get
            {
                string name = "IncludeEnd";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "IncludeEnd";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 IntradayPeriod
        {
            get
            {
                string name = "IntradayPeriod";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "IntradayPeriod";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object RangeEnd
        {
            get
            {
                string name = "RangeEnd";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RangeEnd";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object RangeStart
        {
            get
            {
                string name = "RangeStart";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RangeStart";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 RecalcPeriod
        {
            get
            {
                string name = "RecalcPeriod";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RecalcPeriod";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eSessionFlag SessionFlags
        {
            get
            {
                string name = "SessionFlags";
                var result = (eSessionFlag)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "SessionFlags";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object SessionsFilter
        {
            get
            {
                string name = "SessionsFilter";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "SessionsFilter";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public String this[Int32 index_]
        {
            get
            {
                string name = "SubExpression";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 SubExpressionCount
        {
            get
            {
                string name = "SubExpressionCount";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eTimeSeriesSubscriptionLevel SubscriptionLevel
        {
            get
            {
                string name = "SubscriptionLevel";
                var result = (eTimeSeriesSubscriptionLevel)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "SubscriptionLevel";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean UpdatesEnabled
        {
            get
            {
                string name = "UpdatesEnabled";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "UpdatesEnabled";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        #endregion

        #region Methods
        public virtual void AddSubExpression(String sub_expression, String alias_ = "")
        {
            object[] args = new object[2] {sub_expression, alias_};
            string name = "AddSubExpression";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual String get_SubExpression(Int32 index_)
        {
            object[] args = new object[1] {index_};
            string name = "get_SubExpression";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual String get_SubExpressionAlias(Int32 index_)
        {
            object[] args = new object[1] {index_};
            string name = "get_SubExpressionAlias";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGExpressionsClass : ICQGExpressions, IEnumerable, CQGExpressions
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGExpressionsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGExpressionsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGExpression this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGExpression)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGExpression this[String id_]
        {
            get
            {
                string name = "ItemById";
                var result = (CQGExpression)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGExpression get_ItemById(String id_)
        {
            object[] args = new object[1] {id_};
            string name = "get_ItemById";
            var result = (CQGExpression)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGFillClass : ICQGFill, CQGFill
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGFillClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGFillClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 this[Int32 leg_]
        {
            get
            {
                string name = "GWTradesCount";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Id
        {
            get
            {
                string name = "Id";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 LegCount
        {
            get
            {
                string name = "LegCount";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGOrder Order
        {
            get
            {
                string name = "Order";
                var result = (CQGOrder)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String RefFillId
        {
            get
            {
                string name = "RefFillId";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime ServerTimestamp
        {
            get
            {
                string name = "ServerTimestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eFillStatus Status
        {
            get
            {
                string name = "Status";
                var result = (eFillStatus)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime Timestamp
        {
            get
            {
                string name = "Timestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Boolean get_Aggressive(Int32 leg_ = 0)
        {
            object[] args = new object[1] {leg_};
            string name = "get_Aggressive";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual String get_Currency(Int32 leg_ = 0)
        {
            object[] args = new object[1] {leg_};
            string name = "get_Currency";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual String get_DisplayPrice(Int32 leg_ = 0)
        {
            object[] args = new object[1] {leg_};
            string name = "get_DisplayPrice";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual DateTime get_ExchangeTradeDate(Int32 leg_ = 0)
        {
            object[] args = new object[1] {leg_};
            string name = "get_ExchangeTradeDate";
            var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual String get_GWTradeId(Int32 leg_ = 0)
        {
            object[] args = new object[1] {leg_};
            string name = "get_GWTradeId";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGGWTrades get_GWTrades(Int32 leg_ = 0)
        {
            object[] args = new object[1] {leg_};
            string name = "get_GWTrades";
            var result = (CQGGWTrades)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Int32 get_GWTradesCount(Int32 leg_)
        {
            object[] args = new object[1] {leg_};
            string name = "get_GWTradesCount";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual String get_InstrumentName(Int32 leg_ = 0)
        {
            object[] args = new object[1] {leg_};
            string name = "get_InstrumentName";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Double get_Price(Int32 leg_ = 0)
        {
            object[] args = new object[1] {leg_};
            string name = "get_Price";
            var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Int32 get_Quantity(Int32 leg_ = 0)
        {
            object[] args = new object[1] {leg_};
            string name = "get_Quantity";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual eOrderSide get_Side(Int32 leg_ = 0)
        {
            object[] args = new object[1] {leg_};
            string name = "get_Side";
            var result = (eOrderSide)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual DateTime get_StatementDate(Int32 leg_ = 0)
        {
            object[] args = new object[1] {leg_};
            string name = "get_StatementDate";
            var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGFillsClass : ICQGFills, IEnumerable, CQGFills
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGFillsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGFillsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGFill this[String fill_id]
        {
            get
            {
                string name = "Item";
                var result = (CQGFill)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGFill this[Int32 index_]
        {
            get
            {
                string name = "ItemByIndex";
                var result = (CQGFill)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGFill get_ItemByIndex(Int32 index_)
        {
            object[] args = new object[1] {index_};
            string name = "get_ItemByIndex";
            var result = (CQGFill)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGGWTradeClass : ICQGGWTrade, CQGGWTrade
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGGWTradeClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGGWTradeClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Boolean Aggressive
        {
            get
            {
                string name = "Aggressive";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Currency
        {
            get
            {
                string name = "Currency";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String DisplayPrice
        {
            get
            {
                string name = "DisplayPrice";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime ExchangeTradeDate
        {
            get
            {
                string name = "ExchangeTradeDate";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGFill Fill
        {
            get
            {
                string name = "Fill";
                var result = (CQGFill)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Id
        {
            get
            {
                string name = "Id";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String InstrumentName
        {
            get
            {
                string name = "InstrumentName";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 Leg
        {
            get
            {
                string name = "Leg";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Price
        {
            get
            {
                string name = "Price";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 Quantity
        {
            get
            {
                string name = "Quantity";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eOrderSide Side
        {
            get
            {
                string name = "Side";
                var result = (eOrderSide)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime StatementDate
        {
            get
            {
                string name = "StatementDate";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGGWTradesClass : ICQGGWTrades, IEnumerable, CQGGWTrades
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGGWTradesClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGGWTradesClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGGWTrade this[String trade_gw_id]
        {
            get
            {
                string name = "Item";
                var result = (CQGGWTrade)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGGWTrade this[Int32 index_]
        {
            get
            {
                string name = "ItemByIndex";
                var result = (CQGGWTrade)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGGWTrade get_ItemByIndex(Int32 index_)
        {
            object[] args = new object[1] {index_};
            string name = "get_ItemByIndex";
            var result = (CQGGWTrade)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGHistoricalSessionsRequestClass : ICQGHistoricalSessionsRequest, CQGHistoricalSessionsRequest
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGHistoricalSessionsRequestClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGHistoricalSessionsRequestClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public DateTime RangeEnd
        {
            get
            {
                string name = "RangeEnd";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RangeEnd";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public DateTime RangeStart
        {
            get
            {
                string name = "RangeStart";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RangeStart";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public String Symbol
        {
            get
            {
                string name = "Symbol";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Symbol";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eHistoricalSessionsRequestType Type
        {
            get
            {
                string name = "Type";
                var result = (eHistoricalSessionsRequestType)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Type";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGHolidayClass : ICQGHoliday, CQGHoliday
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGHolidayClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGHolidayClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public DateTime HolidayDate
        {
            get
            {
                string name = "HolidayDate";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Boolean IsDaily
        {
            get
            {
                string name = "IsDaily";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eSessionWeekDays SessionMask
        {
            get
            {
                string name = "SessionMask";
                var result = (eSessionWeekDays)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGHolidaysClass : ICQGHolidays, IEnumerable, CQGHolidays
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGHolidaysClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGHolidaysClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGHoliday this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGHoliday)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGSessions Sessions
        {
            get
            {
                string name = "Sessions";
                var result = (CQGSessions)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGInstrumentClass : ICQGInstrument, CQGInstrument
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGInstrumentClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGInstrumentClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public CQGQuote Ask
        {
            get
            {
                string name = "Ask";
                var result = (CQGQuote)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eDOMandBBAType BBAType
        {
            get
            {
                string name = "BBAType";
                var result = (eDOMandBBAType)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "BBAType";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public CQGQuote Bid
        {
            get
            {
                string name = "Bid";
                var result = (CQGQuote)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGCEL CEL
        {
            get
            {
                string name = "CEL";
                var result = (CQGCEL)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Commodity
        {
            get
            {
                string name = "Commodity";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Country
        {
            get
            {
                string name = "Country";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Currency
        {
            get
            {
                string name = "Currency";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eDataSubscriptionLevel DataSubscriptionLevel
        {
            get
            {
                string name = "DataSubscriptionLevel";
                var result = (eDataSubscriptionLevel)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "DataSubscriptionLevel";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public String Description
        {
            get
            {
                string name = "Description";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGDOMQuotes DOMAsks
        {
            get
            {
                string name = "DOMAsks";
                var result = (CQGDOMQuotes)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGDOMQuotes DOMBids
        {
            get
            {
                string name = "DOMBids";
                var result = (CQGDOMQuotes)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 DOMBookLimit
        {
            get
            {
                string name = "DOMBookLimit";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "DOMBookLimit";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean DOMStatus
        {
            get
            {
                string name = "DOMStatus";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "DOMStatus";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 DTE
        {
            get
            {
                string name = "DTE";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String ExchangeAbbreviation
        {
            get
            {
                string name = "ExchangeAbbreviation";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 ExchangeID
        {
            get
            {
                string name = "ExchangeID";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime ExpirationDate
        {
            get
            {
                string name = "ExpirationDate";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String FullName
        {
            get
            {
                string name = "FullName";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double InitialMargin
        {
            get
            {
                string name = "InitialMargin";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 InstrumentID
        {
            get
            {
                string name = "InstrumentID";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eInstrumentType InstrumentType
        {
            get
            {
                string name = "InstrumentType";
                var result = (eInstrumentType)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Boolean IsDownTick
        {
            get
            {
                string name = "IsDownTick";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Boolean IsFastMarket
        {
            get
            {
                string name = "IsFastMarket";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Boolean IsUpTick
        {
            get
            {
                string name = "IsUpTick";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double MaintenanceMargin
        {
            get
            {
                string name = "MaintenanceMargin";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 Month
        {
            get
            {
                string name = "Month";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String MonthChar
        {
            get
            {
                string name = "MonthChar";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double NetChange
        {
            get
            {
                string name = "NetChange";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String PreferredSessionsName
        {
            get
            {
                string name = "PreferredSessionsName";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGInstrumentProperties Properties
        {
            get
            {
                string name = "Properties";
                var result = (CQGInstrumentProperties)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public ePropertySubscriptionLevel PropertyLevel
        {
            get
            {
                string name = "PropertyLevel";
                var result = (ePropertySubscriptionLevel)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eQuoteSubscriptionLevel QuoteLevel
        {
            get
            {
                string name = "QuoteLevel";
                var result = (eQuoteSubscriptionLevel)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGQuotes Quotes
        {
            get
            {
                string name = "Quotes";
                var result = (CQGQuotes)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int16 Scale
        {
            get
            {
                string name = "Scale";
                var result = (Int16)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime ServerTimestamp
        {
            get
            {
                string name = "ServerTimestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 SessionMask
        {
            get
            {
                string name = "SessionMask";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 SessionNumber
        {
            get
            {
                string name = "SessionNumber";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGSessions Sessions
        {
            get
            {
                string name = "Sessions";
                var result = (CQGSessions)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 Strike
        {
            get
            {
                string name = "Strike";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Object this[String tagName]
        {
            get
            {
                string name = "Tag";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Tag";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Double TickSize
        {
            get
            {
                string name = "TickSize";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 TickSizeFractionDenominator
        {
            get
            {
                string name = "TickSizeFractionDenominator";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 TickSizeFractionNumerator
        {
            get
            {
                string name = "TickSizeFractionNumerator";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double TickValue
        {
            get
            {
                string name = "TickValue";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime Timestamp
        {
            get
            {
                string name = "Timestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double TodayCTotalVolume
        {
            get
            {
                string name = "TodayCTotalVolume";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGQuote Trade
        {
            get
            {
                string name = "Trade";
                var result = (CQGQuote)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGInstrument UnderlyingInstrument
        {
            get
            {
                string name = "UnderlyingInstrument";
                var result = (CQGInstrument)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String UnderlyingInstrumentName
        {
            get
            {
                string name = "UnderlyingInstrumentName";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double YCOI
        {
            get
            {
                string name = "YCOI";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 Year
        {
            get
            {
                string name = "Year";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String YearString
        {
            get
            {
                string name = "YearString";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double YesterdayCTotalVolume
        {
            get
            {
                string name = "YesterdayCTotalVolume";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Double FromDisplayPrice(String display_price)
        {
            object[] args = new object[1] {display_price};
            string name = "FromDisplayPrice";
            var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Object get_Tag(String tagName)
        {
            object[] args = new object[1] {tagName};
            string name = "get_Tag";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Double GetNearestTradeablePrice(Double price_)
        {
            object[] args = new object[1] {price_};
            string name = "GetNearestTradeablePrice";
            var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Double GetTickSizeFor(Double Price)
        {
            object[] args = new object[1] {Price};
            string name = "GetTickSizeFor";
            var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Double GetTickValueFor(Double Price)
        {
            object[] args = new object[1] {Price};
            string name = "GetTickValueFor";
            var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual void set_Tag(String tagName, Object pVal)
        {
            object[] args = new object[2] {tagName, pVal};
            string name = "set_Tag";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual String ToDisplayPrice(Double correct_price)
        {
            object[] args = new object[1] {correct_price};
            string name = "ToDisplayPrice";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGInstrumentPropertiesClass : ICQGInstrumentProperties, IEnumerable, CQGInstrumentProperties
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGInstrumentPropertiesClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGInstrumentPropertiesClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGInstrumentProperty this[eInstrumentProperty instrument_property]
        {
            get
            {
                string name = "Item";
                var result = (CQGInstrumentProperty)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGInstrumentPropertyClass : ICQGInstrumentProperty, CQGInstrumentProperty
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGInstrumentPropertyClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGInstrumentPropertyClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public CQGInstrument Instrument
        {
            get
            {
                string name = "Instrument";
                var result = (CQGInstrument)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Name
        {
            get
            {
                string name = "Name";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime ServerTimestamp
        {
            get
            {
                string name = "ServerTimestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime Timestamp
        {
            get
            {
                string name = "Timestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eInstrumentProperty Type
        {
            get
            {
                string name = "Type";
                var result = (eInstrumentProperty)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Object Value
        {
            get
            {
                string name = "Value";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGInstrumentsClass : ICQGInstruments, IEnumerable, CQGInstruments
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGInstrumentsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGInstrumentsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGInstrument this[Object index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGInstrument)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGInstrumentsGroupClass : ICQGInstrumentsGroup, CQGInstrumentsGroup
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGInstrumentsGroupClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGInstrumentsGroupClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public String Id
        {
            get
            {
                string name = "Id";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGInstruments Instruments
        {
            get
            {
                string name = "Instruments";
                var result = (CQGInstruments)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGInstrumentsGroupRequest Request
        {
            get
            {
                string name = "Request";
                var result = (CQGInstrumentsGroupRequest)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGInstrumentsGroupRequestClass : ICQGInstrumentsGroupRequest, CQGInstrumentsGroupRequest
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGInstrumentsGroupRequestClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGInstrumentsGroupRequestClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public String Commodity
        {
            get
            {
                string name = "Commodity";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Commodity";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eInstrumentType InstrumentTypes
        {
            get
            {
                string name = "InstrumentTypes";
                var result = (eInstrumentType)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "InstrumentTypes";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object RangeEnd
        {
            get
            {
                string name = "RangeEnd";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RangeEnd";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object RangeStart
        {
            get
            {
                string name = "RangeStart";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RangeStart";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eGroupSubscriptionLevel SubscriptionLevel
        {
            get
            {
                string name = "SubscriptionLevel";
                var result = (eGroupSubscriptionLevel)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "SubscriptionLevel";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGInstrumentsGroupsClass : ICQGInstrumentsGroups, IEnumerable, CQGInstrumentsGroups
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGInstrumentsGroupsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGInstrumentsGroupsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGInstrumentsGroup this[Object index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGInstrumentsGroup)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGInstrumentSubscriptionRequestClass : ICQGInstrumentSubscriptionRequest, CQGInstrumentSubscriptionRequest
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGInstrumentSubscriptionRequestClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGInstrumentSubscriptionRequestClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public eDOMandBBAType DOMBBAType
        {
            get
            {
                string name = "DOMBBAType";
                var result = (eDOMandBBAType)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "DOMBBAType";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean DOMStatus
        {
            get
            {
                string name = "DOMStatus";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "DOMStatus";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public ePropertySubscriptionLevel PropertyLevel
        {
            get
            {
                string name = "PropertyLevel";
                var result = (ePropertySubscriptionLevel)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "PropertyLevel";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eQuoteSubscriptionLevel QuoteLevel
        {
            get
            {
                string name = "QuoteLevel";
                var result = (eQuoteSubscriptionLevel)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "QuoteLevel";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public String Symbol
        {
            get
            {
                string name = "Symbol";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Symbol";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGIntegerCollectionClass : ICQGIntegerCollection, IEnumerable, CQGIntegerCollection
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGIntegerCollectionClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGIntegerCollectionClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGLoggerClass : ICQGLogger, CQGLogger
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGLoggerClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGLoggerClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public CQGCEL CEL
        {
            get
            {
                string name = "CEL";
                var result = (CQGCEL)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual void Log(String content_, eLogSeverity severity_ = eLogSeverity.lsInfo)
        {
            object[] args = new object[2] {content_, severity_};
            string name = "Log";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGManualFillClass : ICQGManualFill, CQGManualFill
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGManualFillClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGManualFillClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public String DisplayPrice
        {
            get
            {
                string name = "DisplayPrice";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 GWAccountID
        {
            get
            {
                string name = "GWAccountID";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String InstrumentName
        {
            get
            {
                string name = "InstrumentName";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Note
        {
            get
            {
                string name = "Note";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Price
        {
            get
            {
                string name = "Price";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 Quantity
        {
            get
            {
                string name = "Quantity";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eOrderSide Side
        {
            get
            {
                string name = "Side";
                var result = (eOrderSide)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime StatementDate
        {
            get
            {
                string name = "StatementDate";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 TradeId
        {
            get
            {
                string name = "TradeId";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime TradeTimestamp
        {
            get
            {
                string name = "TradeTimestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGManualFillRequestClass : ICQGManualFillRequest, CQGManualFillRequest
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGManualFillRequestClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGManualFillRequestClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 GWAccountID
        {
            get
            {
                string name = "GWAccountID";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "GWAccountID";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public String InstrumentName
        {
            get
            {
                string name = "InstrumentName";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "InstrumentName";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public String Note
        {
            get
            {
                string name = "Note";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Note";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Double Price
        {
            get
            {
                string name = "Price";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Price";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 Quantity
        {
            get
            {
                string name = "Quantity";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Quantity";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eOrderSide Side
        {
            get
            {
                string name = "Side";
                var result = (eOrderSide)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Side";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public DateTime StatementDate
        {
            get
            {
                string name = "StatementDate";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "StatementDate";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 TradeId
        {
            get
            {
                string name = "TradeId";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "TradeId";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public DateTime TradeTimestamp
        {
            get
            {
                string name = "TradeTimestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "TradeTimestamp";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGManualFillsClass : ICQGManualFills, IEnumerable, CQGManualFills
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGManualFillsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGManualFillsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eManualFillsDataLevel DataLevel
        {
            get
            {
                string name = "DataLevel";
                var result = (eManualFillsDataLevel)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 GWAccountID
        {
            get
            {
                string name = "GWAccountID";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGManualFill this[Int32 trade_id]
        {
            get
            {
                string name = "Item";
                var result = (CQGManualFill)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGManualFill get_ItemByIndex(Int32 index_)
        {
            object[] args = new object[1] {index_};
            string name = "get_ItemByIndex";
            var result = (CQGManualFill)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGManualFillsCollectionClass : ICQGManualFillsCollection, IEnumerable, CQGManualFillsCollection
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGManualFillsCollectionClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGManualFillsCollectionClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGManualFills this[Int32 account_id]
        {
            get
            {
                string name = "Item";
                var result = (CQGManualFills)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGManualFills get_ItemByIndex(Int32 index_)
        {
            object[] args = new object[1] {index_};
            string name = "get_ItemByIndex";
            var result = (CQGManualFills)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGModifiedPropertiesClass : ICQGModifiedProperties, IEnumerable, CQGModifiedProperties
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGModifiedPropertiesClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGModifiedPropertiesClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGModifiedProperty this[eOrderProperty property_type]
        {
            get
            {
                string name = "Item";
                var result = (CQGModifiedProperty)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGModifiedProperty this[Int32 index_]
        {
            get
            {
                string name = "ItemByIndex";
                var result = (CQGModifiedProperty)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGModifiedProperty get_ItemByIndex(Int32 index_)
        {
            object[] args = new object[1] {index_};
            string name = "get_ItemByIndex";
            var result = (CQGModifiedProperty)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGModifiedPropertyClass : ICQGModifiedProperty, CQGModifiedProperty
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGModifiedPropertyClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGModifiedPropertyClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public String Description
        {
            get
            {
                string name = "Description";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Name
        {
            get
            {
                string name = "Name";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Object NewValue
        {
            get
            {
                string name = "NewValue";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Object PreviousValue
        {
            get
            {
                string name = "PreviousValue";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eOrderProperty Type
        {
            get
            {
                string name = "Type";
                var result = (eOrderProperty)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGOrderActionRequestClass : ICQGOrderActionRequest, CQGOrderActionRequest
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGOrderActionRequestClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGOrderActionRequestClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public CQGAccount Account
        {
            get
            {
                string name = "Account";
                var result = (CQGAccount)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Account";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public UInt32 AlgorithmID
        {
            get
            {
                string name = "AlgorithmID";
                var result = (UInt32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "AlgorithmID";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public String AlgorithmStringID
        {
            get
            {
                string name = "AlgorithmStringID";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "AlgorithmStringID";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean FromAllTraders
        {
            get
            {
                string name = "FromAllTraders";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "FromAllTraders";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public CQGInstrument Instrument
        {
            get
            {
                string name = "Instrument";
                var result = (CQGInstrument)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Instrument";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eOrderSide OrderSide
        {
            get
            {
                string name = "OrderSide";
                var result = (eOrderSide)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "OrderSide";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean Parked
        {
            get
            {
                string name = "Parked";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Parked";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGOrderChainClass : ICQGOrderChain, CQGOrderChain
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGOrderChainClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGOrderChainClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public UInt32 AlgorithmID
        {
            get
            {
                string name = "AlgorithmID";
                var result = (UInt32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "AlgorithmID";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public String AlgorithmStringID
        {
            get
            {
                string name = "AlgorithmStringID";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "AlgorithmStringID";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 GWAccountID
        {
            get
            {
                string name = "GWAccountID";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual void AddOrder(CQGOrder cqg_order)
        {
            object[] args = new object[1] {cqg_order};
            string name = "AddOrder";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGOrderClass : ICQGOrder, CQGOrder
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGOrderClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGOrderClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public CQGAccount Account
        {
            get
            {
                string name = "Account";
                var result = (CQGAccount)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Account";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public UInt32 AlgorithmID
        {
            get
            {
                string name = "AlgorithmID";
                var result = (UInt32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "AlgorithmID";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public String AlgorithmStringID
        {
            get
            {
                string name = "AlgorithmStringID";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "AlgorithmStringID";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean CanBeCanceled
        {
            get
            {
                string name = "CanBeCanceled";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Boolean CanBeModified
        {
            get
            {
                string name = "CanBeModified";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Boolean CanBeReplaced
        {
            get
            {
                string name = "CanBeReplaced";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eOrderCancelationType CancelationInstruction
        {
            get
            {
                string name = "CancelationInstruction";
                var result = (eOrderCancelationType)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "CancelationInstruction";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public String Description
        {
            get
            {
                string name = "Description";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Description";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eOrderDuration DurationType
        {
            get
            {
                string name = "DurationType";
                var result = (eOrderDuration)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "DurationType";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 FilledQuantity
        {
            get
            {
                string name = "FilledQuantity";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGFills Fills
        {
            get
            {
                string name = "Fills";
                var result = (CQGFills)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String GUID
        {
            get
            {
                string name = "GUID";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String GWOrderID
        {
            get
            {
                string name = "GWOrderID";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eOrderStatus GWStatus
        {
            get
            {
                string name = "GWStatus";
                var result = (eOrderStatus)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGInstrument Instrument
        {
            get
            {
                string name = "Instrument";
                var result = (CQGInstrument)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Instrument";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public String InstrumentName
        {
            get
            {
                string name = "InstrumentName";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Boolean IsExternal
        {
            get
            {
                string name = "IsExternal";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Boolean IsFinal
        {
            get
            {
                string name = "IsFinal";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGError LastError
        {
            get
            {
                string name = "LastError";
                var result = (CQGError)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eOrderEvent LastEvent
        {
            get
            {
                string name = "LastEvent";
                var result = (eOrderEvent)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double LimitPrice
        {
            get
            {
                string name = "LimitPrice";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "LimitPrice";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean OrderCheckMark
        {
            get
            {
                string name = "OrderCheckMark";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "OrderCheckMark";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public String OriginalOrderID
        {
            get
            {
                string name = "OriginalOrderID";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime PlaceTime
        {
            get
            {
                string name = "PlaceTime";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGOrderProperties Properties
        {
            get
            {
                string name = "Properties";
                var result = (CQGOrderProperties)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 Quantity
        {
            get
            {
                string name = "Quantity";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Quantity";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 RemainingQuantity
        {
            get
            {
                string name = "RemainingQuantity";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime ServerTimestamp
        {
            get
            {
                string name = "ServerTimestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eOrderSide Side
        {
            get
            {
                string name = "Side";
                var result = (eOrderSide)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Side";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eOrderLocalState State
        {
            get
            {
                string name = "State";
                var result = (eOrderLocalState)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double StopPrice
        {
            get
            {
                string name = "StopPrice";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "StopPrice";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object this[String tag_name]
        {
            get
            {
                string name = "Tag";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Tag";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public DateTime TimeActiveAt
        {
            get
            {
                string name = "TimeActiveAt";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime Timestamp
        {
            get
            {
                string name = "Timestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTransactions Transactions
        {
            get
            {
                string name = "Transactions";
                var result = (CQGTransactions)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eOrderType Type
        {
            get
            {
                string name = "Type";
                var result = (eOrderType)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String UEName
        {
            get
            {
                string name = "UEName";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual void Activate()
        {
            string name = "Activate";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public virtual void Cancel()
        {
            string name = "Cancel";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Object get_Tag(String tag_name)
        {
            object[] args = new object[1] {tag_name};
            string name = "get_Tag";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual void Modify(CQGOrderModify cqg_order_modify)
        {
            object[] args = new object[1] {cqg_order_modify};
            string name = "Modify";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual void Place()
        {
            string name = "Place";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public virtual CQGOrderModify PrepareModify()
        {
            string name = "PrepareModify";
            var result = (CQGOrderModify)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual void SendCareOrderAck()
        {
            string name = "SendCareOrderAck";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public virtual void set_Tag(String tag_name, Object pVal)
        {
            object[] args = new object[2] {tag_name, pVal};
            string name = "set_Tag";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGOrderModifyClass : ICQGOrderModify, CQGOrderModify
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGOrderModifyClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGOrderModifyClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public CQGOrderProperties Properties
        {
            get
            {
                string name = "Properties";
                var result = (CQGOrderProperties)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGOrderPropertiesClass : ICQGOrderProperties, IEnumerable, CQGOrderProperties
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGOrderPropertiesClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGOrderPropertiesClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGOrderProperty this[eOrderProperty order_property]
        {
            get
            {
                string name = "Item";
                var result = (CQGOrderProperty)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGOrderPropertyClass : ICQGOrderProperty, CQGOrderProperty
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGOrderPropertyClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGOrderPropertyClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Boolean CanBeSet
        {
            get
            {
                string name = "CanBeSet";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Description
        {
            get
            {
                string name = "Description";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Name
        {
            get
            {
                string name = "Name";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGOrder Order
        {
            get
            {
                string name = "Order";
                var result = (CQGOrder)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime Timestamp
        {
            get
            {
                string name = "Timestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eOrderProperty Type
        {
            get
            {
                string name = "Type";
                var result = (eOrderProperty)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Object Value
        {
            get
            {
                string name = "Value";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Value";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGOrdersClass : ICQGOrders, IEnumerable, CQGOrders
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGOrdersClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGOrdersClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGOrder this[String order_id]
        {
            get
            {
                string name = "Item";
                var result = (CQGOrder)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual void AddToLiveOrders()
        {
            string name = "AddToLiveOrders";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGOrder get_ItemByGuid(String order_guid)
        {
            object[] args = new object[1] {order_guid};
            string name = "get_ItemByGuid";
            var result = (CQGOrder)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual CQGOrders SelectByInstrumentName(String instrument_name)
        {
            object[] args = new object[1] {instrument_name};
            string name = "SelectByInstrumentName";
            var result = (CQGOrders)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGOrders SelectByOrderStatus(eOrderStatus order_status)
        {
            object[] args = new object[1] {order_status};
            string name = "SelectByOrderStatus";
            var result = (CQGOrders)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGOrders SelectByOrderType(eOrderType order_type)
        {
            object[] args = new object[1] {order_type};
            string name = "SelectByOrderType";
            var result = (CQGOrders)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGOrders SelectByProperty(eOrderProperty property_type, Object property_value)
        {
            object[] args = new object[2] {property_type, property_value};
            string name = "SelectByProperty";
            var result = (CQGOrders)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGOrders SelectBySide(eOrderSide order_side)
        {
            object[] args = new object[1] {order_side};
            string name = "SelectBySide";
            var result = (CQGOrders)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGOrders SelectByTag(String tag_name, Object tag_value = null)
        {
            object[] args = new object[2] {tag_name, tag_value};
            string name = "SelectByTag";
            var result = (CQGOrders)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGOrdersQueryClass : ICQGOrdersQuery, CQGOrdersQuery
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGOrdersQueryClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGOrdersQueryClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public CQGAccount Account
        {
            get
            {
                string name = "Account";
                var result = (CQGAccount)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGCEL CEL
        {
            get
            {
                string name = "CEL";
                var result = (CQGCEL)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGError FinalError
        {
            get
            {
                string name = "FinalError";
                var result = (CQGError)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGOrders LastChunk
        {
            get
            {
                string name = "LastChunk";
                var result = (CQGOrders)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGOrders Orders
        {
            get
            {
                string name = "Orders";
                var result = (CQGOrders)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 QueryID
        {
            get
            {
                string name = "QueryID";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime ServerTimestamp
        {
            get
            {
                string name = "ServerTimestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eRequestStatus Status
        {
            get
            {
                string name = "Status";
                var result = (eRequestStatus)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime Timestamp
        {
            get
            {
                string name = "Timestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual void Cancel()
        {
            string name = "Cancel";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGOrderStatisticsClass : ICQGOrderStatistics, CQGOrderStatistics
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGOrderStatisticsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGOrderStatisticsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Object this[String i_GUID]
        {
            get
            {
                string name = "StatisticsOnReceive";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Boolean Switch
        {
            set
            {
                string name = "Switch";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Object get_StatisticsOnReceive(String i_GUID)
        {
            object[] args = new object[1] {i_GUID};
            string name = "get_StatisticsOnReceive";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Object get_StatisticsOnSend(String i_GUID)
        {
            object[] args = new object[1] {i_GUID};
            string name = "get_StatisticsOnSend";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGParameterDefinitionClass : ICQGParameterDefinition, CQGParameterDefinition
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGParameterDefinitionClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGParameterDefinitionClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public CQGStringCollection AvailableValues
        {
            get
            {
                string name = "AvailableValues";
                var result = (CQGStringCollection)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Comment
        {
            get
            {
                string name = "Comment";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Object DefaultValue
        {
            get
            {
                string name = "DefaultValue";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Name
        {
            get
            {
                string name = "Name";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eUserFormulaParameterType Type
        {
            get
            {
                string name = "Type";
                var result = (eUserFormulaParameterType)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGParameterDefinitionsClass : ICQGParameterDefinitions, IEnumerable, CQGParameterDefinitions
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGParameterDefinitionsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGParameterDefinitionsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGParameterDefinition this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGParameterDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGParameterDefinition this[String parameter_name]
        {
            get
            {
                string name = "ItemByName";
                var result = (CQGParameterDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGParameterDefinition get_ItemByName(String parameter_name)
        {
            object[] args = new object[1] {parameter_name};
            string name = "get_ItemByName";
            var result = (CQGParameterDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGPointAndFigureBarClass : ICQGPointAndFigureBar, CQGPointAndFigureBar
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGPointAndFigureBarClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGPointAndFigureBarClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Double High
        {
            get
            {
                string name = "High";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Low
        {
            get
            {
                string name = "Low";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Mid
        {
            get
            {
                string name = "Mid";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double PFHigh
        {
            get
            {
                string name = "PFHigh";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double PFLow
        {
            get
            {
                string name = "PFLow";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime Timestamp
        {
            get
            {
                string name = "Timestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 TimestampOffset
        {
            get
            {
                string name = "TimestampOffset";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Boolean Up
        {
            get
            {
                string name = "Up";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGPointAndFigureBarsClass : ICQGPointAndFigureBars, IEnumerable, CQGPointAndFigureBars
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGPointAndFigureBarsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGPointAndFigureBarsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime EndTimestamp
        {
            get
            {
                string name = "EndTimestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Id
        {
            get
            {
                string name = "Id";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGPointAndFigureBar this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGPointAndFigureBar)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGError LastError
        {
            get
            {
                string name = "LastError";
                var result = (CQGError)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGPointAndFigureBarsRequest Request
        {
            get
            {
                string name = "Request";
                var result = (CQGPointAndFigureBarsRequest)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime StartTimestamp
        {
            get
            {
                string name = "StartTimestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eRequestStatus Status
        {
            get
            {
                string name = "Status";
                var result = (eRequestStatus)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Object this[String tag_name]
        {
            get
            {
                string name = "Tag";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Tag";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Object get_Tag(String tag_name)
        {
            object[] args = new object[1] {tag_name};
            string name = "get_Tag";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual void set_Tag(String tag_name, Object pVal)
        {
            object[] args = new object[2] {tag_name, pVal};
            string name = "set_Tag";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGPointAndFigureBarsCollectionClass : ICQGPointAndFigureBarsCollection, IEnumerable, CQGPointAndFigureBarsCollection
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGPointAndFigureBarsCollectionClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGPointAndFigureBarsCollectionClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGPointAndFigureBars this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGPointAndFigureBars)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGPointAndFigureBars this[String id_]
        {
            get
            {
                string name = "ItemById";
                var result = (CQGPointAndFigureBars)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGPointAndFigureBars get_ItemById(String id_)
        {
            object[] args = new object[1] {id_};
            string name = "get_ItemById";
            var result = (CQGPointAndFigureBars)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGPointAndFigureBarsRequestClass : ICQGPointAndFigureBarsRequest, CQGPointAndFigureBarsRequest
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGPointAndFigureBarsRequestClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGPointAndFigureBarsRequestClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 BoxSize
        {
            get
            {
                string name = "BoxSize";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "BoxSize";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public ePfBoxUnits BoxUnits
        {
            get
            {
                string name = "BoxUnits";
                var result = (ePfBoxUnits)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "BoxUnits";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eTimeSeriesContinuationType Continuation
        {
            get
            {
                string name = "Continuation";
                var result = (eTimeSeriesContinuationType)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Continuation";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public ePfDataSource DataSource
        {
            get
            {
                string name = "DataSource";
                var result = (ePfDataSource)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "DataSource";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 DaysBeforeExpiration
        {
            get
            {
                string name = "DaysBeforeExpiration";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "DaysBeforeExpiration";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean EqualizeCloses
        {
            get
            {
                string name = "EqualizeCloses";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "EqualizeCloses";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean IncludeEnd
        {
            get
            {
                string name = "IncludeEnd";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "IncludeEnd";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object RangeEnd
        {
            get
            {
                string name = "RangeEnd";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RangeEnd";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object RangeStart
        {
            get
            {
                string name = "RangeStart";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RangeStart";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 RecalcPeriod
        {
            get
            {
                string name = "RecalcPeriod";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RecalcPeriod";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 Reversal
        {
            get
            {
                string name = "Reversal";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Reversal";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eSessionFlag SessionFlags
        {
            get
            {
                string name = "SessionFlags";
                var result = (eSessionFlag)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "SessionFlags";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object SessionsFilter
        {
            get
            {
                string name = "SessionsFilter";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "SessionsFilter";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eTimeSeriesSubscriptionLevel SubscriptionLevel
        {
            get
            {
                string name = "SubscriptionLevel";
                var result = (eTimeSeriesSubscriptionLevel)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "SubscriptionLevel";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public String Symbol
        {
            get
            {
                string name = "Symbol";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Symbol";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean UpdatesEnabled
        {
            get
            {
                string name = "UpdatesEnabled";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "UpdatesEnabled";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGPositionClass : ICQGPosition, CQGPosition
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGPositionClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGPositionClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public CQGAccount Account
        {
            get
            {
                string name = "Account";
                var result = (CQGAccount)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double AveragePrice
        {
            get
            {
                string name = "AveragePrice";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGInstrument Instrument
        {
            get
            {
                string name = "Instrument";
                var result = (CQGInstrument)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String InstrumentName
        {
            get
            {
                string name = "InstrumentName";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Boolean ManualFillsInvolved
        {
            get
            {
                string name = "ManualFillsInvolved";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTrades MatchedTrades
        {
            get
            {
                string name = "MatchedTrades";
                var result = (CQGTrades)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double MVO
        {
            get
            {
                string name = "MVO";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTrades OpenTrades
        {
            get
            {
                string name = "OpenTrades";
                var result = (CQGTrades)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double OTE
        {
            get
            {
                string name = "OTE";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double ProfitLoss
        {
            get
            {
                string name = "ProfitLoss";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 Quantity
        {
            get
            {
                string name = "Quantity";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime ServerTimestamp
        {
            get
            {
                string name = "ServerTimestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eOrderSide Side
        {
            get
            {
                string name = "Side";
                var result = (eOrderSide)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime Timestamp
        {
            get
            {
                string name = "Timestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double UPL
        {
            get
            {
                string name = "UPL";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGPositionsClass : ICQGPositions, IEnumerable, CQGPositions
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGPositionsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGPositionsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGPosition this[String instrument_name]
        {
            get
            {
                string name = "Item";
                var result = (CQGPosition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGPosition this[Int32 index_]
        {
            get
            {
                string name = "ItemByIndex";
                var result = (CQGPosition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGPosition get_ItemByIndex(Int32 index_)
        {
            object[] args = new object[1] {index_};
            string name = "get_ItemByIndex";
            var result = (CQGPosition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGPositionsStatementClass : ICQGPositionsStatement, CQGPositionsStatement
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGPositionsStatementClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGPositionsStatementClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 GWAccountID
        {
            get
            {
                string name = "GWAccountID";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGPositions Positions
        {
            get
            {
                string name = "Positions";
                var result = (CQGPositions)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime StatementDate
        {
            get
            {
                string name = "StatementDate";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGQFormulaDefinitionClass : ICQGQFormulaDefinition, CQGQFormulaDefinition
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGQFormulaDefinitionClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGQFormulaDefinitionClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public String Expression
        {
            get
            {
                string name = "Expression";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Name
        {
            get
            {
                string name = "Name";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 Number
        {
            get
            {
                string name = "Number";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGQFormulaDefinitionsClass : ICQGQFormulaDefinitions, IEnumerable, CQGQFormulaDefinitions
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGQFormulaDefinitionsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGQFormulaDefinitionsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGQFormulaDefinition this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGQFormulaDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGQFormulaDefinition this[String qformula_name]
        {
            get
            {
                string name = "ItemByName";
                var result = (CQGQFormulaDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGQFormulaDefinition get_ItemByName(String qformula_name)
        {
            object[] args = new object[1] {qformula_name};
            string name = "get_ItemByName";
            var result = (CQGQFormulaDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGQuoteClass : ICQGQuote, CQGQuote
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGQuoteClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGQuoteClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Boolean HasVolume
        {
            get
            {
                string name = "HasVolume";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGInstrument Instrument
        {
            get
            {
                string name = "Instrument";
                var result = (CQGInstrument)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Boolean IsValid
        {
            get
            {
                string name = "IsValid";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Name
        {
            get
            {
                string name = "Name";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Price
        {
            get
            {
                string name = "Price";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime ServerTimestamp
        {
            get
            {
                string name = "ServerTimestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime Timestamp
        {
            get
            {
                string name = "Timestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eQuoteType Type
        {
            get
            {
                string name = "Type";
                var result = (eQuoteType)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 Volume
        {
            get
            {
                string name = "Volume";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGQuotesClass : ICQGQuotes, IEnumerable, CQGQuotes
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGQuotesClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGQuotesClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGQuote this[eQuoteType quote_type]
        {
            get
            {
                string name = "Item";
                var result = (CQGQuote)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGRemoteOpenAPISessionClass : ICQGRemoteOpenAPISession, CQGRemoteOpenAPISession
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGRemoteOpenAPISessionClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGRemoteOpenAPISessionClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public String LogonName
        {
            get
            {
                string name = "LogonName";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 ROMNumber
        {
            get
            {
                string name = "ROMNumber";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String ServerAddress
        {
            get
            {
                string name = "ServerAddress";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGSessionClass : ICQGSession, CQGSession
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGSessionClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGSessionClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public DateTime ActivationDate
        {
            get
            {
                string name = "ActivationDate";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public SByte DayCloseOffset
        {
            get
            {
                string name = "DayCloseOffset";
                var result = (SByte)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public SByte DayStartOffset
        {
            get
            {
                string name = "DayStartOffset";
                var result = (SByte)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Boolean DayStartsYesterday
        {
            get
            {
                string name = "DayStartsYesterday";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime EndTime
        {
            get
            {
                string name = "EndTime";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGInstrument Instrument
        {
            get
            {
                string name = "Instrument";
                var result = (CQGInstrument)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Name
        {
            get
            {
                string name = "Name";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int16 Number
        {
            get
            {
                string name = "Number";
                var result = (Int16)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Boolean PrimaryFlag
        {
            get
            {
                string name = "PrimaryFlag";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime StartTime
        {
            get
            {
                string name = "StartTime";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eSymbolSessionType Type
        {
            get
            {
                string name = "Type";
                var result = (eSymbolSessionType)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime ValidEndTime
        {
            get
            {
                string name = "ValidEndTime";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime ValidStartTime
        {
            get
            {
                string name = "ValidStartTime";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eSessionWeekDays WorkingWeekDays
        {
            get
            {
                string name = "WorkingWeekDays";
                var result = (eSessionWeekDays)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Boolean IsTimeInSession(DateTime date_time, Boolean use_session_valid_times = false)
        {
            object[] args = new object[2] {date_time, use_session_valid_times};
            string name = "IsTimeInSession";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGSessionsClass : ICQGSessions, IEnumerable, CQGSessions
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGSessionsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGSessionsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime DescriptionEnd
        {
            get
            {
                string name = "DescriptionEnd";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 DescriptionNumber
        {
            get
            {
                string name = "DescriptionNumber";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime DescriptionStart
        {
            get
            {
                string name = "DescriptionStart";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGHolidays Holidays
        {
            get
            {
                string name = "Holidays";
                var result = (CQGHolidays)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGSession this[Object index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGSession)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Name
        {
            get
            {
                string name = "Name";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eSymbolSessionType Type
        {
            get
            {
                string name = "Type";
                var result = (eSymbolSessionType)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Boolean IsTimeInSession(DateTime date_time, Boolean use_session_valid_times = false)
        {
            object[] args = new object[2] {date_time, use_session_valid_times};
            string name = "IsTimeInSession";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGSessionsCollectionClass : ICQGSessionsCollection, IEnumerable, CQGSessionsCollection
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGSessionsCollectionClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGSessionsCollectionClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGSessions this[Object index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGSessions)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGStrategyDefinitionClass : ICQGStrategyDefinition, CQGStrategyDefinition
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGStrategyDefinitionClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGStrategyDefinitionClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public String ClientId
        {
            get
            {
                string name = "ClientId";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Id
        {
            get
            {
                string name = "Id";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGError LastError
        {
            get
            {
                string name = "LastError";
                var result = (CQGError)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String RequestString
        {
            get
            {
                string name = "RequestString";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eStrategyRequestStatus Status
        {
            get
            {
                string name = "Status";
                var result = (eStrategyRequestStatus)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Symbol
        {
            get
            {
                string name = "Symbol";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGStrategyDefinitionsClass : ICQGStrategyDefinitions, IEnumerable, CQGStrategyDefinitions
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGStrategyDefinitionsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGStrategyDefinitionsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGStrategyDefinition this[String id_]
        {
            get
            {
                string name = "Item";
                var result = (CQGStrategyDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGStrategyDefinition this[Int32 index_]
        {
            get
            {
                string name = "ItemByIndex";
                var result = (CQGStrategyDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGStrategyDefinition get_ItemByIndex(Int32 index_)
        {
            object[] args = new object[1] {index_};
            string name = "get_ItemByIndex";
            var result = (CQGStrategyDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGStrategyLegFillClass : ICQGStrategyLegFill, CQGStrategyLegFill
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGStrategyLegFillClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGStrategyLegFillClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public String ExecutionId
        {
            get
            {
                string name = "ExecutionId";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGOrder Order
        {
            get
            {
                string name = "Order";
                var result = (CQGOrder)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String OriginalOrderID
        {
            get
            {
                string name = "OriginalOrderID";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 Quantity
        {
            get
            {
                string name = "Quantity";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGStrategyLegFillsClass : ICQGStrategyLegFills, CQGStrategyLegFills
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGStrategyLegFillsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGStrategyLegFillsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGStrategyLegFill this[Int32 index_]
        {
            get
            {
                string name = "ItemByIndex";
                var result = (CQGStrategyLegFill)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGStrategyLegFill get_ItemByIndex(Int32 index_)
        {
            object[] args = new object[1] {index_};
            string name = "get_ItemByIndex";
            var result = (CQGStrategyLegFill)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGStringCollectionClass : ICQGStringCollection, IEnumerable, CQGStringCollection
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGStringCollectionClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGStringCollectionClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGSubMinuteBarClass : ICQGSubMinuteBar, CQGSubMinuteBar
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGSubMinuteBarClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGSubMinuteBarClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 AskVolume
        {
            get
            {
                string name = "AskVolume";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Avg
        {
            get
            {
                string name = "Avg";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 BidVolume
        {
            get
            {
                string name = "BidVolume";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Close
        {
            get
            {
                string name = "Close";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double High
        {
            get
            {
                string name = "High";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double HLC3
        {
            get
            {
                string name = "HLC3";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Low
        {
            get
            {
                string name = "Low";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Mid
        {
            get
            {
                string name = "Mid";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Open
        {
            get
            {
                string name = "Open";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Range
        {
            get
            {
                string name = "Range";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 TickVolume
        {
            get
            {
                string name = "TickVolume";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime Timestamp
        {
            get
            {
                string name = "Timestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 TimestampOffset
        {
            get
            {
                string name = "TimestampOffset";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double TrueHigh
        {
            get
            {
                string name = "TrueHigh";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double TrueLow
        {
            get
            {
                string name = "TrueLow";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double TrueRange
        {
            get
            {
                string name = "TrueRange";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 Volume
        {
            get
            {
                string name = "Volume";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGSubMinuteBarsClass : ICQGSubMinuteBars, IEnumerable, CQGSubMinuteBars
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGSubMinuteBarsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGSubMinuteBarsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime EndTimestamp
        {
            get
            {
                string name = "EndTimestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Id
        {
            get
            {
                string name = "Id";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGSubMinuteBar this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGSubMinuteBar)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGError LastError
        {
            get
            {
                string name = "LastError";
                var result = (CQGError)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGSubMinuteBarsRequest Request
        {
            get
            {
                string name = "Request";
                var result = (CQGSubMinuteBarsRequest)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime StartTimestamp
        {
            get
            {
                string name = "StartTimestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eRequestStatus Status
        {
            get
            {
                string name = "Status";
                var result = (eRequestStatus)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Object this[String tag_name]
        {
            get
            {
                string name = "Tag";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Tag";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Object get_Tag(String tag_name)
        {
            object[] args = new object[1] {tag_name};
            string name = "get_Tag";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual void set_Tag(String tag_name, Object pVal)
        {
            object[] args = new object[2] {tag_name, pVal};
            string name = "set_Tag";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGSubMinuteBarsCollectionClass : ICQGSubMinuteBarsCollection, IEnumerable, CQGSubMinuteBarsCollection
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGSubMinuteBarsCollectionClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGSubMinuteBarsCollectionClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGSubMinuteBars this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGSubMinuteBars)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGSubMinuteBars this[String id_]
        {
            get
            {
                string name = "ItemById";
                var result = (CQGSubMinuteBars)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGSubMinuteBars get_ItemById(String id_)
        {
            object[] args = new object[1] {id_};
            string name = "get_ItemById";
            var result = (CQGSubMinuteBars)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGSubMinuteBarsRequestClass : ICQGSubMinuteBarsRequest, CQGSubMinuteBarsRequest
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGSubMinuteBarsRequestClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGSubMinuteBarsRequestClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public eTimeSeriesContinuationType Continuation
        {
            get
            {
                string name = "Continuation";
                var result = (eTimeSeriesContinuationType)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Continuation";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 DaysBeforeExpiration
        {
            get
            {
                string name = "DaysBeforeExpiration";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "DaysBeforeExpiration";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean EqualizeCloses
        {
            get
            {
                string name = "EqualizeCloses";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "EqualizeCloses";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eGapFilter GapFilter
        {
            get
            {
                string name = "GapFilter";
                var result = (eGapFilter)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "GapFilter";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean IncludeEnd
        {
            get
            {
                string name = "IncludeEnd";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "IncludeEnd";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 Interval
        {
            get
            {
                string name = "Interval";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Interval";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object RangeEnd
        {
            get
            {
                string name = "RangeEnd";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RangeEnd";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object RangeStart
        {
            get
            {
                string name = "RangeStart";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RangeStart";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 RecalcPeriod
        {
            get
            {
                string name = "RecalcPeriod";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RecalcPeriod";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eSessionFlag SessionFlags
        {
            get
            {
                string name = "SessionFlags";
                var result = (eSessionFlag)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "SessionFlags";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object SessionsFilter
        {
            get
            {
                string name = "SessionsFilter";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "SessionsFilter";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eTimeSeriesSubscriptionLevel SubscriptionLevel
        {
            get
            {
                string name = "SubscriptionLevel";
                var result = (eTimeSeriesSubscriptionLevel)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "SubscriptionLevel";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public String Symbol
        {
            get
            {
                string name = "Symbol";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Symbol";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eTickFilter TickFilter
        {
            get
            {
                string name = "TickFilter";
                var result = (eTickFilter)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "TickFilter";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean UpdatesEnabled
        {
            get
            {
                string name = "UpdatesEnabled";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "UpdatesEnabled";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGSummariesStatementClass : ICQGSummariesStatement, CQGSummariesStatement
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGSummariesStatementClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGSummariesStatementClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public CQGAccountSummaries CurrencySummaries
        {
            get
            {
                string name = "CurrencySummaries";
                var result = (CQGAccountSummaries)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 GWAccountID
        {
            get
            {
                string name = "GWAccountID";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime StatementDate
        {
            get
            {
                string name = "StatementDate";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGAccountSummary Summary
        {
            get
            {
                string name = "Summary";
                var result = (CQGAccountSummary)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTFlowBarClass : ICQGTFlowBar, CQGTFlowBar
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTFlowBarClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTFlowBarClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 AskVolume
        {
            get
            {
                string name = "AskVolume";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double BestAskPrice
        {
            get
            {
                string name = "BestAskPrice";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double BestBidPrice
        {
            get
            {
                string name = "BestBidPrice";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 BidVolume
        {
            get
            {
                string name = "BidVolume";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Close
        {
            get
            {
                string name = "Close";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 DomAskCount
        {
            get
            {
                string name = "DomAskCount";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 this[Int32 index_]
        {
            get
            {
                string name = "DomAskVolume";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 DomBidCount
        {
            get
            {
                string name = "DomBidCount";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double High
        {
            get
            {
                string name = "High";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Low
        {
            get
            {
                string name = "Low";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Mid
        {
            get
            {
                string name = "Mid";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Open
        {
            get
            {
                string name = "Open";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime Timestamp
        {
            get
            {
                string name = "Timestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 TimestampOffset
        {
            get
            {
                string name = "TimestampOffset";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double TrueHigh
        {
            get
            {
                string name = "TrueHigh";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double TrueLow
        {
            get
            {
                string name = "TrueLow";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double TrueMid
        {
            get
            {
                string name = "TrueMid";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Int32 get_DomAskVolume(Int32 index_)
        {
            object[] args = new object[1] {index_};
            string name = "get_DomAskVolume";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Int32 get_DomBidVolume(Int32 index_)
        {
            object[] args = new object[1] {index_};
            string name = "get_DomBidVolume";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTFlowBarsClass : ICQGTFlowBars, IEnumerable, CQGTFlowBars
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTFlowBarsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTFlowBarsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime EndTimestamp
        {
            get
            {
                string name = "EndTimestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Id
        {
            get
            {
                string name = "Id";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTFlowBar this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGTFlowBar)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGError LastError
        {
            get
            {
                string name = "LastError";
                var result = (CQGError)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTFlowBarsRequest Request
        {
            get
            {
                string name = "Request";
                var result = (CQGTFlowBarsRequest)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime StartTimestamp
        {
            get
            {
                string name = "StartTimestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eRequestStatus Status
        {
            get
            {
                string name = "Status";
                var result = (eRequestStatus)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Object this[String tag_name]
        {
            get
            {
                string name = "Tag";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Tag";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Object get_Tag(String tag_name)
        {
            object[] args = new object[1] {tag_name};
            string name = "get_Tag";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual void set_Tag(String tag_name, Object pVal)
        {
            object[] args = new object[2] {tag_name, pVal};
            string name = "set_Tag";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTFlowBarsCollectionClass : ICQGTFlowBarsCollection, IEnumerable, CQGTFlowBarsCollection
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTFlowBarsCollectionClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTFlowBarsCollectionClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTFlowBars this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGTFlowBars)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTFlowBars this[String id_]
        {
            get
            {
                string name = "ItemById";
                var result = (CQGTFlowBars)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGTFlowBars get_ItemById(String id_)
        {
            object[] args = new object[1] {id_};
            string name = "get_ItemById";
            var result = (CQGTFlowBars)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTFlowBarsRequestClass : ICQGTFlowBarsRequest, CQGTFlowBarsRequest
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTFlowBarsRequestClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTFlowBarsRequestClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public eTfAggregation Aggregation
        {
            get
            {
                string name = "Aggregation";
                var result = (eTfAggregation)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Aggregation";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 AggregationLevel
        {
            get
            {
                string name = "AggregationLevel";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "AggregationLevel";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eTimeSeriesContinuationType Continuation
        {
            get
            {
                string name = "Continuation";
                var result = (eTimeSeriesContinuationType)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Continuation";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 DaysBeforeExpiration
        {
            get
            {
                string name = "DaysBeforeExpiration";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "DaysBeforeExpiration";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eTFlowRequestDomVolumeLevel DomAskVolumeLevel
        {
            get
            {
                string name = "DomAskVolumeLevel";
                var result = (eTFlowRequestDomVolumeLevel)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "DomAskVolumeLevel";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eTFlowRequestDomVolumeLevel DomBidVolumeLevel
        {
            get
            {
                string name = "DomBidVolumeLevel";
                var result = (eTFlowRequestDomVolumeLevel)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "DomBidVolumeLevel";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean EqualizeCloses
        {
            get
            {
                string name = "EqualizeCloses";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "EqualizeCloses";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean IncludeEnd
        {
            get
            {
                string name = "IncludeEnd";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "IncludeEnd";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object RangeEnd
        {
            get
            {
                string name = "RangeEnd";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RangeEnd";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object RangeStart
        {
            get
            {
                string name = "RangeStart";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RangeStart";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 RecalcPeriod
        {
            get
            {
                string name = "RecalcPeriod";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RecalcPeriod";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eSessionFlag SessionFlags
        {
            get
            {
                string name = "SessionFlags";
                var result = (eSessionFlag)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "SessionFlags";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object SessionsFilter
        {
            get
            {
                string name = "SessionsFilter";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "SessionsFilter";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eTimeSeriesSubscriptionLevel SubscriptionLevel
        {
            get
            {
                string name = "SubscriptionLevel";
                var result = (eTimeSeriesSubscriptionLevel)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "SubscriptionLevel";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public String Symbol
        {
            get
            {
                string name = "Symbol";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Symbol";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean UpdatesEnabled
        {
            get
            {
                string name = "UpdatesEnabled";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "UpdatesEnabled";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTickClass : ICQGTick, CQGTick
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTickClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTickClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public String ContributorId
        {
            get
            {
                string name = "ContributorId";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 ContributorIdCode
        {
            get
            {
                string name = "ContributorIdCode";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eTickCorrectionType CorrectionType
        {
            get
            {
                string name = "CorrectionType";
                var result = (eTickCorrectionType)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eMarketState MarketState
        {
            get
            {
                string name = "MarketState";
                var result = (eMarketState)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Price
        {
            get
            {
                string name = "Price";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eTickPriceType PriceType
        {
            get
            {
                string name = "PriceType";
                var result = (eTickPriceType)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 SalesConditionCode
        {
            get
            {
                string name = "SalesConditionCode";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String SalesConditionLabel
        {
            get
            {
                string name = "SalesConditionLabel";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime Timestamp
        {
            get
            {
                string name = "Timestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 Volume
        {
            get
            {
                string name = "Volume";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTicksClass : ICQGTicks, IEnumerable, CQGTicks
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTicksClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTicksClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime EndTimestamp
        {
            get
            {
                string name = "EndTimestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Boolean HasUpdates
        {
            get
            {
                string name = "HasUpdates";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Id
        {
            get
            {
                string name = "Id";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTick this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGTick)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGError LastError
        {
            get
            {
                string name = "LastError";
                var result = (CQGError)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTicksRequest Request
        {
            get
            {
                string name = "Request";
                var result = (CQGTicksRequest)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime StartTimestamp
        {
            get
            {
                string name = "StartTimestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eRequestStatus Status
        {
            get
            {
                string name = "Status";
                var result = (eRequestStatus)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Object this[String tag_name]
        {
            get
            {
                string name = "Tag";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Tag";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Object get_Tag(String tag_name)
        {
            object[] args = new object[1] {tag_name};
            string name = "get_Tag";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Int32 IndexForDate(DateTime date_)
        {
            object[] args = new object[1] {date_};
            string name = "IndexForDate";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual void IndicesForDates(DateTime date_1, DateTime date_2, ref Int32 start_index, ref Int32 end_index)
        {
            object[] args = new object[4] {date_1, date_2, start_index, end_index};
            string name = "IndicesForDates";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual void set_Tag(String tag_name, Object pVal)
        {
            object[] args = new object[2] {tag_name, pVal};
            string name = "set_Tag";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTicksCollectionClass : ICQGTicksCollection, IEnumerable, CQGTicksCollection
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTicksCollectionClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTicksCollectionClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTicks this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGTicks)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTicks this[String id_]
        {
            get
            {
                string name = "ItemById";
                var result = (CQGTicks)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGTicks get_ItemById(String id_)
        {
            object[] args = new object[1] {id_};
            string name = "get_ItemById";
            var result = (CQGTicks)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTicksRequestClass : ICQGTicksRequest, CQGTicksRequest
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTicksRequestClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTicksRequestClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public DateTime RangeEnd
        {
            get
            {
                string name = "RangeEnd";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RangeEnd";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public DateTime RangeStart
        {
            get
            {
                string name = "RangeStart";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RangeStart";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 SessionsFilter
        {
            get
            {
                string name = "SessionsFilter";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "SessionsFilter";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public String Symbol
        {
            get
            {
                string name = "Symbol";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Symbol";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eTickFilter TickFilter
        {
            get
            {
                string name = "TickFilter";
                var result = (eTickFilter)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "TickFilter";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eTicksRequestType Type
        {
            get
            {
                string name = "Type";
                var result = (eTicksRequestType)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Type";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTimedBarClass : ICQGTimedBar, CQGTimedBar
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTimedBarClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTimedBarClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 ActualVolume
        {
            get
            {
                string name = "ActualVolume";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 AskVolume
        {
            get
            {
                string name = "AskVolume";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Avg
        {
            get
            {
                string name = "Avg";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 BidVolume
        {
            get
            {
                string name = "BidVolume";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Close
        {
            get
            {
                string name = "Close";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 CommodityOpenInterest
        {
            get
            {
                string name = "CommodityOpenInterest";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 CommodityTickVolume
        {
            get
            {
                string name = "CommodityTickVolume";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 CommodityVolume
        {
            get
            {
                string name = "CommodityVolume";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 ContractOpenInterest
        {
            get
            {
                string name = "ContractOpenInterest";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 ContractTickVolume
        {
            get
            {
                string name = "ContractTickVolume";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 ContractVolume
        {
            get
            {
                string name = "ContractVolume";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double High
        {
            get
            {
                string name = "High";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double HLC3
        {
            get
            {
                string name = "HLC3";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Low
        {
            get
            {
                string name = "Low";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Mid
        {
            get
            {
                string name = "Mid";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Open
        {
            get
            {
                string name = "Open";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 OpenInterest
        {
            get
            {
                string name = "OpenInterest";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Range
        {
            get
            {
                string name = "Range";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 TickVolume
        {
            get
            {
                string name = "TickVolume";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime Timestamp
        {
            get
            {
                string name = "Timestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double TrueHigh
        {
            get
            {
                string name = "TrueHigh";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double TrueLow
        {
            get
            {
                string name = "TrueLow";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double TrueRange
        {
            get
            {
                string name = "TrueRange";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTimedBarsClass : ICQGTimedBars, IEnumerable, CQGTimedBars
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTimedBarsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTimedBarsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime EndTimestamp
        {
            get
            {
                string name = "EndTimestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Id
        {
            get
            {
                string name = "Id";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTimedBar this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGTimedBar)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGError LastError
        {
            get
            {
                string name = "LastError";
                var result = (CQGError)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTimedBarsRequest Request
        {
            get
            {
                string name = "Request";
                var result = (CQGTimedBarsRequest)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime StartTimestamp
        {
            get
            {
                string name = "StartTimestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eRequestStatus Status
        {
            get
            {
                string name = "Status";
                var result = (eRequestStatus)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Object this[String tag_name]
        {
            get
            {
                string name = "Tag";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Tag";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Object get_Tag(String tag_name)
        {
            object[] args = new object[1] {tag_name};
            string name = "get_Tag";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Int32 IndexForDate(DateTime date_)
        {
            object[] args = new object[1] {date_};
            string name = "IndexForDate";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual void set_Tag(String tag_name, Object pVal)
        {
            object[] args = new object[2] {tag_name, pVal};
            string name = "set_Tag";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTimedBarsCollectionClass : ICQGTimedBarsCollection, IEnumerable, CQGTimedBarsCollection
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTimedBarsCollectionClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTimedBarsCollectionClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTimedBars this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGTimedBars)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTimedBars this[String id_]
        {
            get
            {
                string name = "ItemById";
                var result = (CQGTimedBars)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGTimedBars get_ItemById(String id_)
        {
            object[] args = new object[1] {id_};
            string name = "get_ItemById";
            var result = (CQGTimedBars)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTimedBarsRequestClass : ICQGTimedBarsRequest, CQGTimedBarsRequest
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTimedBarsRequestClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTimedBarsRequestClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public eTimeSeriesContinuationType Continuation
        {
            get
            {
                string name = "Continuation";
                var result = (eTimeSeriesContinuationType)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Continuation";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 DaysBeforeExpiration
        {
            get
            {
                string name = "DaysBeforeExpiration";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "DaysBeforeExpiration";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean EqualizeCloses
        {
            get
            {
                string name = "EqualizeCloses";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "EqualizeCloses";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eHistoricalPeriod HistoricalPeriod
        {
            get
            {
                string name = "HistoricalPeriod";
                var result = (eHistoricalPeriod)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "HistoricalPeriod";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean IgnoreEventsOnHistoricalBars
        {
            get
            {
                string name = "IgnoreEventsOnHistoricalBars";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "IgnoreEventsOnHistoricalBars";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean IncludeEnd
        {
            get
            {
                string name = "IncludeEnd";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "IncludeEnd";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 IntradayPeriod
        {
            get
            {
                string name = "IntradayPeriod";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "IntradayPeriod";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object RangeEnd
        {
            get
            {
                string name = "RangeEnd";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RangeEnd";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object RangeStart
        {
            get
            {
                string name = "RangeStart";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RangeStart";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eSessionFlag SessionFlags
        {
            get
            {
                string name = "SessionFlags";
                var result = (eSessionFlag)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "SessionFlags";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object SessionsFilter
        {
            get
            {
                string name = "SessionsFilter";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "SessionsFilter";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public String Symbol
        {
            get
            {
                string name = "Symbol";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Symbol";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eTickFilter TickFilter
        {
            get
            {
                string name = "TickFilter";
                var result = (eTickFilter)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "TickFilter";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean UpdatesEnabled
        {
            get
            {
                string name = "UpdatesEnabled";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "UpdatesEnabled";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual void ExcludeAllOutputs()
        {
            string name = "ExcludeAllOutputs";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual void IncludeOutput(eTimedBarsRequestOutputs timed_bar_output, Boolean include_output)
        {
            object[] args = new object[2] {timed_bar_output, include_output};
            string name = "IncludeOutput";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Boolean IsOutputIncluded(eTimedBarsRequestOutputs timed_bar_output)
        {
            object[] args = new object[1] {timed_bar_output};
            string name = "IsOutputIncluded";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTradeClass : ICQGTrade, CQGTrade
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTradeClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTradeClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 GroupID
        {
            get
            {
                string name = "GroupID";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Boolean IsMatched
        {
            get
            {
                string name = "IsMatched";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Price
        {
            get
            {
                string name = "Price";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 Quantity
        {
            get
            {
                string name = "Quantity";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime ServerTimestamp
        {
            get
            {
                string name = "ServerTimestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eOrderSide Side
        {
            get
            {
                string name = "Side";
                var result = (eOrderSide)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime Timestamp
        {
            get
            {
                string name = "Timestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTradeEntriesClass : ICQGTradeEntries, IEnumerable, CQGTradeEntries
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTradeEntriesClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTradeEntriesClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTradeEntry this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGTradeEntry)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTradeEntryClass : ICQGTradeEntry, CQGTradeEntry
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTradeEntryClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTradeEntryClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Boolean CanPlaceOrderSignal
        {
            get
            {
                string name = "CanPlaceOrderSignal";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTradeEntryDefinition Definition
        {
            get
            {
                string name = "Definition";
                var result = (CQGTradeEntryDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Price
        {
            get
            {
                string name = "Price";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 Quantity
        {
            get
            {
                string name = "Quantity";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTradeExits RelatedExits
        {
            get
            {
                string name = "RelatedExits";
                var result = (CQGTradeExits)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Boolean Signal
        {
            get
            {
                string name = "Signal";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double StopLimitPrice
        {
            get
            {
                string name = "StopLimitPrice";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTradingSystemTrade Trade
        {
            get
            {
                string name = "Trade";
                var result = (CQGTradingSystemTrade)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTradeEntryDefinitionClass : ICQGTradeEntryDefinition, CQGTradeEntryDefinition
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTradeEntryDefinitionClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTradeEntryDefinitionClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Boolean AllowEntryOnExit
        {
            get
            {
                string name = "AllowEntryOnExit";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Boolean AllowPyramids
        {
            get
            {
                string name = "AllowPyramids";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eOrderType OrderType
        {
            get
            {
                string name = "OrderType";
                var result = (eOrderType)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTradeExitClass : ICQGTradeExit, CQGTradeExit
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTradeExitClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTradeExitClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Boolean CanPlaceOrderSignal
        {
            get
            {
                string name = "CanPlaceOrderSignal";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTradeExitDefinition Definition
        {
            get
            {
                string name = "Definition";
                var result = (CQGTradeExitDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Price
        {
            get
            {
                string name = "Price";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 Quantity
        {
            get
            {
                string name = "Quantity";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTradeEntries RelatedEntries
        {
            get
            {
                string name = "RelatedEntries";
                var result = (CQGTradeEntries)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Boolean Signal
        {
            get
            {
                string name = "Signal";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double StopLimitPrice
        {
            get
            {
                string name = "StopLimitPrice";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTradingSystemTrade Trade
        {
            get
            {
                string name = "Trade";
                var result = (CQGTradingSystemTrade)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTradeExitDefinitionClass : ICQGTradeExitDefinition, CQGTradeExitDefinition
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTradeExitDefinitionClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTradeExitDefinitionClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Boolean AllowExitOnEntry
        {
            get
            {
                string name = "AllowExitOnEntry";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Boolean AllowMoreThanOnce
        {
            get
            {
                string name = "AllowMoreThanOnce";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Name
        {
            get
            {
                string name = "Name";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eOrderType OrderType
        {
            get
            {
                string name = "OrderType";
                var result = (eOrderType)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTradeExitDefinitionsClass : ICQGTradeExitDefinitions, IEnumerable, CQGTradeExitDefinitions
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTradeExitDefinitionsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTradeExitDefinitionsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTradeExitDefinition this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGTradeExitDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTradeExitDefinition this[String exit_name]
        {
            get
            {
                string name = "ItemByName";
                var result = (CQGTradeExitDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGTradeExitDefinition get_ItemByName(String exit_name)
        {
            object[] args = new object[1] {exit_name};
            string name = "get_ItemByName";
            var result = (CQGTradeExitDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTradeExitsClass : ICQGTradeExits, IEnumerable, CQGTradeExits
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTradeExitsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTradeExitsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTradeExit this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGTradeExit)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTradeExit this[String exit_name]
        {
            get
            {
                string name = "ItemByName";
                var result = (CQGTradeExit)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGTradeExit get_ItemByName(String exit_name)
        {
            object[] args = new object[1] {exit_name};
            string name = "get_ItemByName";
            var result = (CQGTradeExit)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTradesClass : ICQGTrades, IEnumerable, CQGTrades
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTradesClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTradesClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTrade this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGTrade)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTradingSystemAddInfoClass : ICQGTradingSystemAddInfo, CQGTradingSystemAddInfo
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTradingSystemAddInfoClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTradingSystemAddInfoClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTradingSystemBaseBarParameterClass : ICQGTradingSystemBaseBarParameter, CQGTradingSystemBaseBarParameter
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTradingSystemBaseBarParameterClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTradingSystemBaseBarParameterClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public String Name
        {
            get
            {
                string name = "Name";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eTradingSystemBaseBarParameter Type
        {
            get
            {
                string name = "Type";
                var result = (eTradingSystemBaseBarParameter)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Object Value
        {
            get
            {
                string name = "Value";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Value";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTradingSystemBaseBarParametersClass : ICQGTradingSystemBaseBarParameters, IEnumerable, CQGTradingSystemBaseBarParameters
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTradingSystemBaseBarParametersClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTradingSystemBaseBarParametersClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTradingSystemBaseBarParameter this[eTradingSystemBaseBarParameter parameter_type]
        {
            get
            {
                string name = "Item";
                var result = (CQGTradingSystemBaseBarParameter)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTradingSystemClass : ICQGTradingSystem, CQGTradingSystem
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTradingSystemClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTradingSystemClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public CQGTradingSystemDefinition Definition
        {
            get
            {
                string name = "Definition";
                var result = (CQGTradingSystemDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Id
        {
            get
            {
                string name = "Id";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGError LastError
        {
            get
            {
                string name = "LastError";
                var result = (CQGError)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTradingSystemRequest Request
        {
            get
            {
                string name = "Request";
                var result = (CQGTradingSystemRequest)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTradingSystemStatisticsCollection Statistics
        {
            get
            {
                string name = "Statistics";
                var result = (CQGTradingSystemStatisticsCollection)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eRequestStatus Status
        {
            get
            {
                string name = "Status";
                var result = (eRequestStatus)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Object this[String tag_name]
        {
            get
            {
                string name = "Tag";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Tag";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public CQGTradingSystemTradesRows TradesRows
        {
            get
            {
                string name = "TradesRows";
                var result = (CQGTradingSystemTradesRows)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Object get_Tag(String tag_name)
        {
            object[] args = new object[1] {tag_name};
            string name = "get_Tag";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual void set_Tag(String tag_name, Object pVal)
        {
            object[] args = new object[2] {tag_name, pVal};
            string name = "set_Tag";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTradingSystemDefinitionClass : ICQGTradingSystemDefinition, CQGTradingSystemDefinition
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTradingSystemDefinitionClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTradingSystemDefinitionClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public String Abbreviation
        {
            get
            {
                string name = "Abbreviation";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Commission
        {
            get
            {
                string name = "Commission";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eTradingSystemCommissionType CommissionType
        {
            get
            {
                string name = "CommissionType";
                var result = (eTradingSystemCommissionType)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Name
        {
            get
            {
                string name = "Name";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGParameterDefinitions ParameterDefinitions
        {
            get
            {
                string name = "ParameterDefinitions";
                var result = (CQGParameterDefinitions)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTradingSystemTradeDefinitions TradeDefinitions
        {
            get
            {
                string name = "TradeDefinitions";
                var result = (CQGTradingSystemTradeDefinitions)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTradingSystemDefinitionsClass : ICQGTradingSystemDefinitions, IEnumerable, CQGTradingSystemDefinitions
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTradingSystemDefinitionsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTradingSystemDefinitionsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTradingSystemDefinition this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGTradingSystemDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTradingSystemDefinition this[String trading_system_abbreviation]
        {
            get
            {
                string name = "ItemByAbbreviation";
                var result = (CQGTradingSystemDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGTradingSystemDefinition get_ItemByAbbreviation(String trading_system_abbreviation)
        {
            object[] args = new object[1] {trading_system_abbreviation};
            string name = "get_ItemByAbbreviation";
            var result = (CQGTradingSystemDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGTradingSystemDefinition get_ItemByName(String trading_system_name)
        {
            object[] args = new object[1] {trading_system_name};
            string name = "get_ItemByName";
            var result = (CQGTradingSystemDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTradingSystemInsertInfoClass : ICQGTradingSystemInsertInfo, CQGTradingSystemInsertInfo
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTradingSystemInsertInfoClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTradingSystemInsertInfoClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Index
        {
            get
            {
                string name = "Index";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTradingSystemRelationAddInfoClass : ICQGTradingSystemRelationAddInfo, CQGTradingSystemRelationAddInfo
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTradingSystemRelationAddInfoClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTradingSystemRelationAddInfoClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public CQGTradeEntry Entry
        {
            get
            {
                string name = "Entry";
                var result = (CQGTradeEntry)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 EntryRowIndex
        {
            get
            {
                string name = "EntryRowIndex";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTradeExit Exit
        {
            get
            {
                string name = "Exit";
                var result = (CQGTradeExit)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 ExitRowIndex
        {
            get
            {
                string name = "ExitRowIndex";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTradingSystemRemoveInfoClass : ICQGTradingSystemRemoveInfo, CQGTradingSystemRemoveInfo
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTradingSystemRemoveInfoClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTradingSystemRemoveInfoClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Index
        {
            get
            {
                string name = "Index";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTradingSystemRequestClass : ICQGTradingSystemRequest, CQGTradingSystemRequest
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTradingSystemRequestClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTradingSystemRequestClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public CQGTradingSystemBaseBarParameters BaseBarParameters
        {
            get
            {
                string name = "BaseBarParameters";
                var result = (CQGTradingSystemBaseBarParameters)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eTradingSystemBaseBar BaseBarType
        {
            get
            {
                string name = "BaseBarType";
                var result = (eTradingSystemBaseBar)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "BaseBarType";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public String BaseExpression
        {
            get
            {
                string name = "BaseExpression";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "BaseExpression";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eTimeSeriesContinuationType Continuation
        {
            get
            {
                string name = "Continuation";
                var result = (eTimeSeriesContinuationType)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Continuation";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 DaysBeforeExpiration
        {
            get
            {
                string name = "DaysBeforeExpiration";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "DaysBeforeExpiration";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public CQGTradingSystemDefinition Definition
        {
            get
            {
                string name = "Definition";
                var result = (CQGTradingSystemDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Boolean EqualizeCloses
        {
            get
            {
                string name = "EqualizeCloses";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "EqualizeCloses";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eHistoricalPeriod HistoricalPeriod
        {
            get
            {
                string name = "HistoricalPeriod";
                var result = (eHistoricalPeriod)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "HistoricalPeriod";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean IncludeEnd
        {
            get
            {
                string name = "IncludeEnd";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "IncludeEnd";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 IntradayPeriod
        {
            get
            {
                string name = "IntradayPeriod";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "IntradayPeriod";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object this[Object key_]
        {
            get
            {
                string name = "Parameter";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Parameter";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object RangeEnd
        {
            get
            {
                string name = "RangeEnd";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RangeEnd";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object RangeStart
        {
            get
            {
                string name = "RangeStart";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RangeStart";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 RecalcPeriod
        {
            get
            {
                string name = "RecalcPeriod";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RecalcPeriod";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eSessionFlag SessionFlags
        {
            get
            {
                string name = "SessionFlags";
                var result = (eSessionFlag)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "SessionFlags";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object SessionsFilter
        {
            get
            {
                string name = "SessionsFilter";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "SessionsFilter";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eTimeSeriesSubscriptionLevel SubscriptionLevel
        {
            get
            {
                string name = "SubscriptionLevel";
                var result = (eTimeSeriesSubscriptionLevel)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "SubscriptionLevel";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual void ExcludeAllStatistics()
        {
            string name = "ExcludeAllStatistics";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
        }

        public virtual Object get_Parameter(Object key_)
        {
            object[] args = new object[1] {key_};
            string name = "get_Parameter";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual void IncludeStatistic(eTradingSystemStatistic trading_system_statistic)
        {
            object[] args = new object[1] {trading_system_statistic};
            string name = "IncludeStatistic";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Boolean IsStatisticIncluded(eTradingSystemStatistic trading_system_statistic)
        {
            object[] args = new object[1] {trading_system_statistic};
            string name = "IsStatisticIncluded";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual void set_Parameter(Object key_, Object pVal)
        {
            object[] args = new object[2] {key_, pVal};
            string name = "set_Parameter";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTradingSystemsClass : ICQGTradingSystems, IEnumerable, CQGTradingSystems
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTradingSystemsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTradingSystemsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTradingSystem this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGTradingSystem)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTradingSystem this[String id_]
        {
            get
            {
                string name = "ItemById";
                var result = (CQGTradingSystem)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGTradingSystem get_ItemById(String id_)
        {
            object[] args = new object[1] {id_};
            string name = "get_ItemById";
            var result = (CQGTradingSystem)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTradingSystemStatisticsChangeInfoClass : ICQGTradingSystemStatisticsChangeInfo, CQGTradingSystemStatisticsChangeInfo
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTradingSystemStatisticsChangeInfoClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTradingSystemStatisticsChangeInfoClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public CQGTradingSystemStatistics Statistics
        {
            get
            {
                string name = "Statistics";
                var result = (CQGTradingSystemStatistics)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Boolean IsStatisticChanged(eTradingSystemStatistic trading_system_statistic)
        {
            object[] args = new object[1] {trading_system_statistic};
            string name = "IsStatisticChanged";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTradingSystemStatisticsClass : ICQGTradingSystemStatistics, CQGTradingSystemStatistics
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTradingSystemStatisticsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTradingSystemStatisticsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Double AverageDuration
        {
            get
            {
                string name = "AverageDuration";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double AverageLoss
        {
            get
            {
                string name = "AverageLoss";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double AverageProfit
        {
            get
            {
                string name = "AverageProfit";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double AverageWin
        {
            get
            {
                string name = "AverageWin";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double ClosedNetProfit
        {
            get
            {
                string name = "ClosedNetProfit";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double CurConsecLosses
        {
            get
            {
                string name = "CurConsecLosses";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double CurConsecWins
        {
            get
            {
                string name = "CurConsecWins";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double CurDrawDown
        {
            get
            {
                string name = "CurDrawDown";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double LinearRegression
        {
            get
            {
                string name = "LinearRegression";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double MaxClosedDraw
        {
            get
            {
                string name = "MaxClosedDraw";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double MaxConsecLosses
        {
            get
            {
                string name = "MaxConsecLosses";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double MaxConsecWins
        {
            get
            {
                string name = "MaxConsecWins";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double MaxDrawAmount
        {
            get
            {
                string name = "MaxDrawAmount";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double MaxDrawDuration
        {
            get
            {
                string name = "MaxDrawDuration";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double MaximumLoss
        {
            get
            {
                string name = "MaximumLoss";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double MaximumWin
        {
            get
            {
                string name = "MaximumWin";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double OpenPosition
        {
            get
            {
                string name = "OpenPosition";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double PercentLong
        {
            get
            {
                string name = "PercentLong";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double PercentWinners
        {
            get
            {
                string name = "PercentWinners";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double ProfitLossRatio
        {
            get
            {
                string name = "ProfitLossRatio";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double ProfitToMaxDraw
        {
            get
            {
                string name = "ProfitToMaxDraw";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double RemoveToNeutral
        {
            get
            {
                string name = "RemoveToNeutral";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double ReturnRetracement
        {
            get
            {
                string name = "ReturnRetracement";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double TimePercentage
        {
            get
            {
                string name = "TimePercentage";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime Timestamp
        {
            get
            {
                string name = "Timestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 TimestampOffset
        {
            get
            {
                string name = "TimestampOffset";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double TotalNetProfit
        {
            get
            {
                string name = "TotalNetProfit";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double TotalTradeCount
        {
            get
            {
                string name = "TotalTradeCount";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double this[eTradingSystemStatistic ts_statistic]
        {
            get
            {
                string name = "Value";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Double get_Value(eTradingSystemStatistic ts_statistic)
        {
            object[] args = new object[1] {ts_statistic};
            string name = "get_Value";
            var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTradingSystemStatisticsCollectionClass : ICQGTradingSystemStatisticsCollection, IEnumerable, CQGTradingSystemStatisticsCollection
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTradingSystemStatisticsCollectionClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTradingSystemStatisticsCollectionClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTradingSystemStatistics this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGTradingSystemStatistics)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Int32 IndexForDate(DateTime date_)
        {
            object[] args = new object[1] {date_};
            string name = "IndexForDate";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual void IndicesForDates(DateTime date_1, DateTime date_2, ref Int32 start_index, ref Int32 end_index)
        {
            object[] args = new object[4] {date_1, date_2, start_index, end_index};
            string name = "IndicesForDates";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTradingSystemTradeClass : ICQGTradingSystemTrade, CQGTradingSystemTrade
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTradingSystemTradeClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTradingSystemTradeClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public CQGTradingSystemTradeDefinition Definition
        {
            get
            {
                string name = "Definition";
                var result = (CQGTradingSystemTradeDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Boolean IsActive
        {
            get
            {
                string name = "IsActive";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime Timestamp
        {
            get
            {
                string name = "Timestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 TimestampOffset
        {
            get
            {
                string name = "TimestampOffset";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTradeEntry TradeEntry
        {
            get
            {
                string name = "TradeEntry";
                var result = (CQGTradeEntry)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTradeExits TradeExits
        {
            get
            {
                string name = "TradeExits";
                var result = (CQGTradeExits)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTradingSystemTradesRow TradesRow
        {
            get
            {
                string name = "TradesRow";
                var result = (CQGTradingSystemTradesRow)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTradingSystemTradeDefinitionClass : ICQGTradingSystemTradeDefinition, CQGTradingSystemTradeDefinition
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTradingSystemTradeDefinitionClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTradingSystemTradeDefinitionClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public CQGTradeEntryDefinition Entry
        {
            get
            {
                string name = "Entry";
                var result = (CQGTradeEntryDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTradeExitDefinitions Exits
        {
            get
            {
                string name = "Exits";
                var result = (CQGTradeExitDefinitions)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Name
        {
            get
            {
                string name = "Name";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eTradeSide Side
        {
            get
            {
                string name = "Side";
                var result = (eTradeSide)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTradingSystemTradeDefinitionsClass : ICQGTradingSystemTradeDefinitions, IEnumerable, CQGTradingSystemTradeDefinitions
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTradingSystemTradeDefinitionsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTradingSystemTradeDefinitionsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTradingSystemTradeDefinition this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGTradingSystemTradeDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTradingSystemTradeDefinition this[String trade_name]
        {
            get
            {
                string name = "ItemByName";
                var result = (CQGTradingSystemTradeDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGTradingSystemTradeDefinition get_ItemByName(String trade_name)
        {
            object[] args = new object[1] {trade_name};
            string name = "get_ItemByName";
            var result = (CQGTradingSystemTradeDefinition)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTradingSystemTradesRowClass : ICQGTradingSystemTradesRow, IEnumerable, CQGTradingSystemTradesRow
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTradingSystemTradesRowClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTradingSystemTradesRowClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTradingSystemTrade this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGTradingSystemTrade)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTradingSystemTrade this[String trade_name]
        {
            get
            {
                string name = "ItemByName";
                var result = (CQGTradingSystemTrade)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime Timestamp
        {
            get
            {
                string name = "Timestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 TimestampOffset
        {
            get
            {
                string name = "TimestampOffset";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGTradingSystemTrade get_ItemByName(String trade_name)
        {
            object[] args = new object[1] {trade_name};
            string name = "get_ItemByName";
            var result = (CQGTradingSystemTrade)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTradingSystemTradesRowsClass : ICQGTradingSystemTradesRows, IEnumerable, CQGTradingSystemTradesRows
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTradingSystemTradesRowsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTradingSystemTradesRowsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTradingSystemTradesRow this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGTradingSystemTradesRow)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTradingSystemUpdateInfoClass : ICQGTradingSystemUpdateInfo, CQGTradingSystemUpdateInfo
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTradingSystemUpdateInfoClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTradingSystemUpdateInfoClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Index
        {
            get
            {
                string name = "Index";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTradingSystemStatisticsChangeInfo StatisticsChangeInfo
        {
            get
            {
                string name = "StatisticsChangeInfo";
                var result = (CQGTradingSystemStatisticsChangeInfo)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGChangedTradeEntries get_ChangedEntries(eTradeChangeCategory change_filter = eTradeChangeCategory.tccAll)
        {
            object[] args = new object[1] {change_filter};
            string name = "get_ChangedEntries";
            var result = (CQGChangedTradeEntries)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGChangedTradeExits get_ChangedExits(eTradeChangeCategory change_filter = eTradeChangeCategory.tccAll)
        {
            object[] args = new object[1] {change_filter};
            string name = "get_ChangedExits";
            var result = (CQGChangedTradeExits)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTransactionClass : ICQGTransaction, CQGTransaction
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTransactionClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTransactionClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public String ExecutionId
        {
            get
            {
                string name = "ExecutionId";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGFill Fill
        {
            get
            {
                string name = "Fill";
                var result = (CQGFill)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGStringCollection HangOrderIds
        {
            get
            {
                string name = "HangOrderIds";
                var result = (CQGStringCollection)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Int32 HangQuantity
        {
            get
            {
                string name = "HangQuantity";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Id
        {
            get
            {
                string name = "Id";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGOrder Order
        {
            get
            {
                string name = "Order";
                var result = (CQGOrder)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGModifiedProperties Properties
        {
            get
            {
                string name = "Properties";
                var result = (CQGModifiedProperties)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String RejectReason
        {
            get
            {
                string name = "RejectReason";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime ServerTimestamp
        {
            get
            {
                string name = "ServerTimestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eOrderEvent Status
        {
            get
            {
                string name = "Status";
                var result = (eOrderEvent)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGStrategyLegFills StrategyLegFills
        {
            get
            {
                string name = "StrategyLegFills";
                var result = (CQGStrategyLegFills)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime Timestamp
        {
            get
            {
                string name = "Timestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGTransactionsClass : ICQGTransactions, IEnumerable, CQGTransactions
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGTransactionsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGTransactionsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTransaction this[String id_]
        {
            get
            {
                string name = "Item";
                var result = (CQGTransaction)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGTransaction this[Int32 index_]
        {
            get
            {
                string name = "ItemByIndex";
                var result = (CQGTransaction)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGTransaction get_ItemByIndex(Int32 index_)
        {
            object[] args = new object[1] {index_};
            string name = "get_ItemByIndex";
            var result = (CQGTransaction)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGYieldClass : ICQGYield, CQGYield
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGYieldClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGYieldClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Double Avg
        {
            get
            {
                string name = "Avg";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Close
        {
            get
            {
                string name = "Close";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double High
        {
            get
            {
                string name = "High";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double HLC3
        {
            get
            {
                string name = "HLC3";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Low
        {
            get
            {
                string name = "Low";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Mid
        {
            get
            {
                string name = "Mid";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Open
        {
            get
            {
                string name = "Open";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double Range
        {
            get
            {
                string name = "Range";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime Timestamp
        {
            get
            {
                string name = "Timestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double TrueHigh
        {
            get
            {
                string name = "TrueHigh";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double TrueLow
        {
            get
            {
                string name = "TrueLow";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Double TrueRange
        {
            get
            {
                string name = "TrueRange";
                var result = (Double)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGYieldsClass : ICQGYields, IEnumerable, CQGYields
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGYieldsClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGYieldsClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime EndTimestamp
        {
            get
            {
                string name = "EndTimestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public String Id
        {
            get
            {
                string name = "Id";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGYield this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGYield)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGError LastError
        {
            get
            {
                string name = "LastError";
                var result = (CQGError)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGYieldsRequest Request
        {
            get
            {
                string name = "Request";
                var result = (CQGYieldsRequest)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public DateTime StartTimestamp
        {
            get
            {
                string name = "StartTimestamp";
                var result = (DateTime)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public eRequestStatus Status
        {
            get
            {
                string name = "Status";
                var result = (eRequestStatus)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public Object this[String tag_name]
        {
            get
            {
                string name = "Tag";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Tag";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Object get_Tag(String tag_name)
        {
            object[] args = new object[1] {tag_name};
            string name = "get_Tag";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Int32 IndexForDate(DateTime date_)
        {
            object[] args = new object[1] {date_};
            string name = "IndexForDate";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual void set_Tag(String tag_name, Object pVal)
        {
            object[] args = new object[2] {tag_name, pVal};
            string name = "set_Tag";
            CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGYieldsCollectionClass : ICQGYieldsCollection, IEnumerable, CQGYieldsCollection
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGYieldsCollectionClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGYieldsCollectionClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public Int32 Count
        {
            get
            {
                string name = "Count";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGYields this[Int32 index_]
        {
            get
            {
                string name = "Item";
                var result = (CQGYields)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        public CQGYields this[String id_]
        {
            get
            {
                string name = "ItemById";
                var result = (CQGYields)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual CQGYields get_ItemById(String id_)
        {
            object[] args = new object[1] {id_};
            string name = "get_ItemById";
            var result = (CQGYields)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public virtual IEnumerator GetEnumerator()
        {
            string name = "GetEnumerator";
            var result = (IEnumerator)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    public class CQGYieldsRequestClass : ICQGYieldsRequest, CQGYieldsRequest
    {
        private string thisObjUnqKey;

        #region Constructors
        internal CQGYieldsRequestClass()
        {
            thisObjUnqKey = Guid.NewGuid().ToString("D");
        }

        #endregion

        #region Destructor
        ~CQGYieldsRequestClass()
        {
            throw new NotImplementedException();
        }

        #endregion

        #region Properties
        public eYieldCompound Compound
        {
            get
            {
                string name = "Compound";
                var result = (eYieldCompound)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Compound";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eTimeSeriesContinuationType Continuation
        {
            get
            {
                string name = "Continuation";
                var result = (eTimeSeriesContinuationType)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Continuation";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 DaysBeforeExpiration
        {
            get
            {
                string name = "DaysBeforeExpiration";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "DaysBeforeExpiration";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean EqualizeCloses
        {
            get
            {
                string name = "EqualizeCloses";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "EqualizeCloses";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean IncludeEnd
        {
            get
            {
                string name = "IncludeEnd";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "IncludeEnd";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eYieldModel Model
        {
            get
            {
                string name = "Model";
                var result = (eYieldModel)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Model";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object RangeEnd
        {
            get
            {
                string name = "RangeEnd";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RangeEnd";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object RangeStart
        {
            get
            {
                string name = "RangeStart";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RangeStart";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Int32 RecalcPeriod
        {
            get
            {
                string name = "RecalcPeriod";
                var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "RecalcPeriod";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eSessionFlag SessionFlags
        {
            get
            {
                string name = "SessionFlags";
                var result = (eSessionFlag)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "SessionFlags";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Object SessionsFilter
        {
            get
            {
                string name = "SessionsFilter";
                var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "SessionsFilter";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public eTimeSeriesSubscriptionLevel SubscriptionLevel
        {
            get
            {
                string name = "SubscriptionLevel";
                var result = (eTimeSeriesSubscriptionLevel)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "SubscriptionLevel";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public String Symbol
        {
            get
            {
                string name = "Symbol";
                var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "Symbol";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        public Boolean UpdatesEnabled
        {
            get
            {
                string name = "UpdatesEnabled";
                var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Property, thisObjUnqKey, name);
                return result;
            }

            set
            {
                string name = "UpdatesEnabled";
                CQG.SetProperty(name, thisObjUnqKey, value);
            }
        }

        #endregion

        #region Methods
        public virtual ObjRef CreateObjRef(Type requestedType)
        {
            object[] args = new object[1] {requestedType};
            string name = "CreateObjRef";
            var result = (ObjRef)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object GetLifetimeService()
        {
            string name = "GetLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public virtual Object InitializeLifetimeService()
        {
            string name = "InitializeLifetimeService";
            var result = (Object)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    #endregion

    #region Structs
    public struct CQGCELConfiguration
    {
        private string thisObjUnqKey;

        #region Constructors
        #endregion

        #region Methods
        public new Boolean Equals(Object obj)
        {
            object[] args = new object[1] {obj};
            string name = "Equals";
            var result = (Boolean)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name, args);
            return result;
        }

        public new Int32 GetHashCode()
        {
            string name = "GetHashCode";
            var result = (Int32)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new Type GetType()
        {
            string name = "GetType";
            var result = (Type)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        public new String ToString()
        {
            string name = "ToString";
            var result = (String)CQG.ExecuteTheQuery(QueryInfo.QueryType.Method, thisObjUnqKey, name);
            return result;
        }

        #endregion

    }

    #endregion

}
